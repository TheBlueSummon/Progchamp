[
    {
        "name": "nixpkgs",
        "description": "Nix Packages collection & NixOS",
        "languages": {
            "Nix": 71183122,
            "Shell": 1434862,
            "Python": 887539,
            "Perl": 204850,
            "C": 173192,
            "Common Lisp": 91254,
            "Ruby": 87301,
            "Rust": 76839,
            "JavaScript": 54122,
            "Haskell": 38741,
            "Roff": 33689,
            "C++": 26089,
            "Emacs Lisp": 24436,
            "Vim Script": 21329,
            "Meson": 14066,
            "Prolog": 10472,
            "M4": 9030,
            "sed": 8484,
            "TypeScript": 8105,
            "SmPL": 6641,
            "Nim": 5753,
            "D": 5281,
            "XSLT": 5165,
            "R": 5048,
            "Nushell": 4780,
            "Awk": 4234,
            "Scheme": 4035,
            "Julia": 3681,
            "Go": 3198,
            "TeX": 2743,
            "CMake": 2600,
            "VHDL": 2420,
            "Boogie": 2147,
            "Cuda": 1902,
            "C#": 1660,
            "Makefile": 1657,
            "Java": 1497,
            "Erlang": 1437,
            "Lua": 991,
            "PHP": 952,
            "CUE": 876,
            "CSS": 774,
            "Jasmin": 656,
            "Nu": 338,
            "Elvish": 213,
            "HCL": 210,
            "Reason": 182,
            "PureScript": 170,
            "Smarty": 167,
            "Verilog": 125
        }
    },
    {
        "name": "home-manager",
        "description": "Manage a user environment using Nix  [maintainer=@rycee] ",
        "languages": {
            "Nix": 2118347,
            "Shell": 71101,
            "Ruby": 6782,
            "HTML": 1238,
            "Perl": 1236,
            "CSS": 735,
            "Makefile": 471,
            "Lua": 260,
            "Nu": 141,
            "Nushell": 136,
            "Sage": 14
        }
    },
    {
        "name": "devenv",
        "description": "Fast, Declarative, Reproducible, and Composable Developer Environments",
        "languages": {
            "Nix": 231384,
            "Rust": 68131,
            "Shell": 3250,
            "Dockerfile": 1887,
            "JavaScript": 410
        }
    },
    {
        "name": "nix-darwin",
        "description": "nix modules for darwin",
        "languages": {
            "Nix": 530025,
            "Shell": 18904
        }
    },
    {
        "name": "nix.dev",
        "description": "Official documentation for getting things done with Nix.",
        "languages": {
            "Nix": 20716,
            "Python": 16368,
            "Makefile": 7967,
            "Shell": 5771,
            "CSS": 2443,
            "HTML": 367
        }
    },
    {
        "name": "nix-starter-configs",
        "description": "Simple and documented config templates to help you get started with NixOS + home-manager + flakes. All the boilerplate you need!",
        "languages": {
            "Nix": 18380
        }
    },
    {
        "name": "nixos-config",
        "description": "My NixOS configurations.",
        "languages": {
            "Nix": 57746,
            "Shell": 5873,
            "Makefile": 4451,
            "Scheme": 175
        }
    },
    {
        "name": "nixos-hardware",
        "description": "A collection of NixOS modules covering hardware quirks.",
        "languages": {
            "Nix": 301664,
            "Ruby": 8184,
            "Python": 4105,
            "Shell": 2464,
            "Makefile": 142
        }
    },
    {
        "name": "nixos-generators",
        "description": "Collection of image builders [maintainer=@Lassulus]",
        "languages": {
            "Nix": 29645,
            "Shell": 4242,
            "Makefile": 420
        }
    },
    {
        "name": "dotfiles",
        "description": "And I say hey, what's going on?",
        "languages": {
            "Nix": 156254,
            "Shell": 111599,
            "Scheme": 87569,
            "SCSS": 49625,
            "Python": 24585,
            "Fennel": 13813,
            "CSS": 5692,
            "Common Lisp": 3327,
            "JavaScript": 1294,
            "Ruby": 405
        }
    },
    {
        "name": "nixos-and-flakes-book",
        "description": ":hammer_and_wrench: :heart: Want to know NixOS & Flakes in detail? Looking for a beginner-friendly tutorial? Then you've come to the right place!  \u60f3\u8981\u5b66\u4e60\u4f7f\u7528 NixOS \u4e0e Flakes \u5417\uff1f\u5728\u5bfb\u627e\u4e00\u4efd\u65b0\u624b\u53cb\u597d\u7684\u6559\u7a0b\uff1f\u90a3\u4f60\u53ef\u6765\u5bf9\u5730\u65b9\u4e86\uff01",
        "languages": {
            "Nix": 2256
        }
    },
    {
        "name": "nix-direnv",
        "description": "A fast, persistent use_nix/use_flake implementation for direnv [maintainer=@Mic92 / @bbenne10] ",
        "languages": {
            "Nix": 8826,
            "Python": 7593,
            "Shell": 1423
        }
    },
    {
        "name": "NixOS-WSL",
        "description": "NixOS on WSL(2) [maintainer=@nzbr] ",
        "languages": {
            "Nix": 38777,
            "C#": 27651,
            "PowerShell": 11545,
            "Rust": 6999,
            "Shell": 3220,
            "Dockerfile": 36
        }
    },
    {
        "name": "agenix",
        "description": "age-encrypted secrets for NixOS and Home manager",
        "languages": {
            "Nix": 28450,
            "Shell": 5148
        }
    },
    {
        "name": "disko",
        "description": "Declarative disk partitioning and formatting using nix [maintainer=@Lassulus]",
        "languages": {
            "Nix": 178116,
            "Shell": 9541,
            "jq": 2114
        }
    },
    {
        "name": "sops-nix",
        "description": "Atomic secret provisioning for NixOS based on sops",
        "languages": {
            "Nix": 52673,
            "Go": 50494,
            "Shell": 4017,
            "Python": 532
        }
    },
    {
        "name": "nixvim",
        "description": "Configure Neovim with Nix! [maintainer=@pta2002, @traxys, @GaetanLepage]",
        "languages": {
            "Nix": 1594961
        }
    },
    {
        "name": "haskell-nix",
        "description": "Nix and Haskell in production",
        "languages": {
            "Nix": 20118,
            "C": 886,
            "Haskell": 848
        }
    },
    {
        "name": "devshell",
        "description": "Per project developer environments",
        "languages": {
            "Nix": 81081,
            "Shell": 2344
        }
    },
    {
        "name": "nix-on-droid",
        "description": "Nix-enabled environment for your Android device. [maintainers=@t184256,@Gerschtli] ",
        "languages": {
            "Nix": 86684,
            "Shell": 29400
        }
    },
    {
        "name": "flake-utils",
        "description": "Pure Nix flake utility functions [maintainer=@zimbatm]",
        "languages": {
            "Nix": 14007
        }
    },
    {
        "name": "microvm.nix",
        "description": "NixOS MicroVMs",
        "languages": {
            "Nix": 126520
        }
    },
    {
        "name": "pianotrans",
        "description": "Simple GUI for ByteDance's Piano Transcription with Pedals",
        "languages": {
            "Nix": 6486,
            "PowerShell": 5977,
            "Python": 5830,
            "Batchfile": 708
        }
    },
    {
        "name": "nixos-config",
        "description": "Nix configuration for macOS / NixOS with starter templates, step-by-step guides, and more \u2728",
        "languages": {
            "Nix": 162658,
            "Shell": 126090,
            "Emacs Lisp": 15609
        }
    },
    {
        "name": "digga",
        "description": "A flake utility library to craft shell-, home-, and hosts- environments. ",
        "languages": {
            "Nix": 49298,
            "Shell": 673
        }
    },
    {
        "name": "impermanence",
        "description": "Modules to help you handle persistent state on systems with ephemeral root storage [maintainer=@talyz]",
        "languages": {
            "Nix": 46880,
            "Shell": 3677
        }
    },
    {
        "name": "dream2nix",
        "description": "Simplified nix packaging for various programming language ecosystems [maintainer=@DavHau]",
        "languages": {
            "Nix": 445465,
            "Python": 59001,
            "TypeScript": 6771,
            "JavaScript": 4747,
            "jq": 2316,
            "XSLT": 1719,
            "CSS": 1261,
            "Shell": 1091
        }
    },
    {
        "name": "nix-1p",
        "description": "A (more or less) one page introduction to Nix, the language.",
        "languages": {
            "Nix": 529
        }
    },
    {
        "name": "distro-grub-themes",
        "description": "A pack of GRUB2 themes for each Linux distribution",
        "languages": {
            "Nix": 2875
        }
    },
    {
        "name": "rust-overlay",
        "description": "Pure and reproducible nix overlay of binary distributed rust toolchains",
        "languages": {
            "Nix": 46285836,
            "Python": 14560,
            "Shell": 378
        }
    },
    {
        "name": "not-os",
        "description": "An operating system generator, based on NixOS, that, given a config, outputs a small (47 MB), read-only squashfs for a runit-based operating system, with support for iPXE and signed boot.",
        "languages": {
            "Nix": 39086,
            "Shell": 966
        }
    },
    {
        "name": "crane",
        "description": "A Nix library for building cargo projects. Never build twice thanks to incremental artifact caching.",
        "languages": {
            "Nix": 107636,
            "Rust": 51458,
            "Shell": 19757,
            "HTML": 270,
            "SCSS": 37
        }
    },
    {
        "name": "nix-config",
        "description": ":space_invader: NixOS configuration",
        "languages": {
            "Nix": 85714,
            "Haskell": 26474,
            "Shell": 3020
        }
    },
    {
        "name": "hnix",
        "description": "A Haskell re-implementation of the Nix expression language",
        "languages": {
            "Nix": 845806,
            "Haskell": 548613,
            "Shell": 5658,
            "Makefile": 68
        }
    },
    {
        "name": "poetry2nix",
        "description": "Convert poetry projects to nix automagically [maintainer=@adisbladis] ",
        "languages": {
            "Nix": 238174,
            "Python": 17252,
            "Shell": 5554,
            "jq": 814,
            "Makefile": 133
        }
    },
    {
        "name": "simple-twitter",
        "description": "A bare-bones Twitter clone implemented in a single file",
        "languages": {
            "Nix": 17351,
            "Haskell": 11796
        }
    },
    {
        "name": "reflex-platform",
        "description": "A curated package set and set of tools that let you build Haskell packages so they can run on a variety of platforms. reflex-platform is built on top of the nix package manager.",
        "languages": {
            "Nix": 229911,
            "Shell": 36001,
            "Perl": 10211,
            "Haskell": 9794,
            "HTML": 53
        }
    },
    {
        "name": "nix-portable",
        "description": "Nix - Static, Permissionless, Installation-free, Pre-configured",
        "languages": {
            "Nix": 45880
        }
    },
    {
        "name": "dev-templates",
        "description": "Dev environments for numerous languages based on Nix flakes [maintainer=@lucperkins]",
        "languages": {
            "Nix": 32920
        }
    },
    {
        "name": "nixos-apple-silicon",
        "description": "Resources to install NixOS bare metal on Apple Silicon Macs",
        "languages": {
            "Nix": 40393
        }
    },
    {
        "name": "alejandra",
        "description": "The Uncompromising Nix Code Formatter",
        "languages": {
            "Nix": 199646,
            "Rust": 111501,
            "JavaScript": 6971,
            "Shell": 1447,
            "HTML": 474
        }
    },
    {
        "name": "stylix",
        "description": "System-wide colorscheming and typography for NixOS",
        "languages": {
            "Nix": 114301,
            "Mustache": 99576,
            "Haskell": 12257,
            "Python": 1171,
            "CSS": 714
        }
    },
    {
        "name": "naersk",
        "description": "Build Rust projects in Nix - no configuration, no code generation, no IFD, sandbox friendly.",
        "languages": {
            "Nix": 74259,
            "Rust": 6293
        }
    },
    {
        "name": "nix-config",
        "description": "Personal nixos and home-manager configurations.",
        "languages": {
            "Nix": 293238,
            "Shell": 9024,
            "Makefile": 803,
            "SCSS": 629,
            "HTML": 610,
            "Haskell": 142,
            "C++": 81,
            "Rust": 45,
            "TypeScript": 28
        }
    },
    {
        "name": "dotfiles",
        "description": "NixOS system config & Home-Manager user config",
        "languages": {
            "Nix": 132298,
            "JavaScript": 41491,
            "SCSS": 7846,
            "Lua": 6498,
            "CSS": 2301
        }
    },
    {
        "name": "nixfmt",
        "description": "The official (but not yet stable) formatter for Nix code",
        "languages": {
            "Nix": 492791,
            "Haskell": 116552,
            "Shell": 13697
        }
    },
    {
        "name": "NixOS-Guide",
        "description": "NixOS Guide. Learn all about the immutable Nix Operating System and the declarative Nix Expression Language.",
        "languages": {
            "Nix": 37
        }
    },
    {
        "name": "nixGL",
        "description": "A wrapper tool for nix OpenGL application [maintainer=@guibou]",
        "languages": {
            "Nix": 13776,
            "Haskell": 4530
        }
    },
    {
        "name": "jupyenv",
        "description": "Declarative and reproducible Jupyter environments - powered by Nix",
        "languages": {
            "Nix": 77880,
            "Shell": 787
        }
    },
    {
        "name": "nix-bundle",
        "description": "Bundle Nix derivations to run anywhere!",
        "languages": {
            "Nix": 12157,
            "Shell": 9541,
            "C++": 8221,
            "C": 8194,
            "Makefile": 351
        }
    },
    {
        "name": "flake",
        "description": "A Nix flake for many AI projects",
        "languages": {
            "Nix": 76656,
            "PowerShell": 1472,
            "CSS": 453,
            "HTML": 65
        }
    },
    {
        "name": "flake-parts",
        "description": "\u2744\ufe0f Simplify Nix Flakes with the module system",
        "languages": {
            "Nix": 49958,
            "Shell": 28
        }
    },
    {
        "name": "dappsys",
        "description": "Composable building blocks for Ethereum contracts",
        "languages": {
            "Nix": 652
        }
    },
    {
        "name": "nix-config",
        "description": "\u2744\ufe0f my nix config for both desktops(NixOS+macOS) and homelab servers(NixOS).",
        "languages": {
            "Nix": 321682,
            "Shell": 211859,
            "Lua": 46650,
            "Emacs Lisp": 20037,
            "Python": 8747,
            "Just": 8005,
            "Nushell": 6564,
            "CSS": 5080
        }
    },
    {
        "name": "arion",
        "description": "Run docker-compose with help from Nix/NixOS",
        "languages": {
            "Nix": 62838,
            "Haskell": 27759,
            "Shell": 645,
            "Dockerfile": 79
        }
    },
    {
        "name": "robotnix",
        "description": "Build Android (AOSP) using Nix [maintainer=@danielfullmer,@Atemu]",
        "languages": {
            "Nix": 540181,
            "Python": 54670,
            "Shell": 25509,
            "C": 1024,
            "Makefile": 149,
            "Meson": 95
        }
    },
    {
        "name": "nixos-shell",
        "description": "Spawns lightweight nixos vms in a shell",
        "languages": {
            "Nix": 10791,
            "Shell": 1636,
            "Makefile": 868
        }
    },
    {
        "name": "fenix",
        "description": "Rust toolchains and rust-analyzer nightly for Nix [maintainer=@figsoda]",
        "languages": {
            "Nix": 15402,
            "Python": 4627,
            "Shell": 443
        }
    },
    {
        "name": "dotfiles",
        "description": "Beautiful catppuccin themed NixOS configuration, with built in impermanence, full disk encryption and many more!",
        "languages": {
            "Nix": 101996,
            "Python": 4195,
            "Shell": 809,
            "CSS": 747
        }
    },
    {
        "name": "crystal",
        "description": "nix dotfiles for chilly people",
        "languages": {
            "Nix": 297950,
            "C": 12161
        }
    },
    {
        "name": "nixos-config",
        "description": "My Personal Nix, NixOS and Nix-Darwin System Configuration Flake",
        "languages": {
            "Nix": 337563,
            "Emacs Lisp": 22558,
            "Shell": 7078,
            "SCSS": 2392,
            "CSS": 1941,
            "Vim Script": 666
        }
    },
    {
        "name": "haskell.nix",
        "description": "Alternative Haskell Infrastructure for Nixpkgs",
        "languages": {
            "Nix": 1285174,
            "Haskell": 163846,
            "Shell": 8683,
            "C": 620,
            "JavaScript": 117
        }
    },
    {
        "name": "nixpkgs-mozilla",
        "description": "Mozilla overlay for Nixpkgs.",
        "languages": {
            "Nix": 114545,
            "Shell": 9138
        }
    },
    {
        "name": "node2nix",
        "description": "Generate Nix expressions to build NPM packages",
        "languages": {
            "Nix": 749901,
            "JavaScript": 90133,
            "Shell": 1113
        }
    },
    {
        "name": "Tow-Boot",
        "description": "An opinionated distribution of U-Boot. \u2014 https://matrix.to/#/#Tow-Boot:matrix.org?via=matrix.org",
        "languages": {
            "Nix": 214168,
            "Shell": 3318
        }
    },
    {
        "name": "getting-started-devenv-template",
        "description": "Based on nix.dev tutorials, repository template to get you started with Nix.",
        "languages": {
            "Nix": 612
        }
    },
    {
        "name": "Bot-Generator-Bot",
        "description": "The ultimate bot generator bot prompt. Use this prompt to create powerful ChatGPT bots for anything you can imagine.",
        "languages": {
            "Nix": 53
        }
    },
    {
        "name": "nixpkgs-wayland",
        "description": "Automated, pre-built packages for Wayland (sway/wlroots) tools for NixOS. [maintainers=@colemickens, @Artturin]",
        "languages": {
            "Nix": 48106,
            "Nushell": 6464
        }
    },
    {
        "name": "NixThePlanet",
        "description": "Run macOS, Windows and more via a single Nix command, or simple nixosModules",
        "languages": {
            "Nix": 51641,
            "Shell": 6026,
            "Ruby": 3364
        }
    },
    {
        "name": "emacs-overlay",
        "description": "Bleeding edge emacs overlay [maintainer=@adisbladis] ",
        "languages": {
            "Nix": 708564
        }
    },
    {
        "name": "nix-bitcoin",
        "description": "A collection of Nix packages and NixOS modules for easily installing full-featured Bitcoin nodes with an emphasis on security.",
        "languages": {
            "Nix": 310641,
            "Shell": 59156,
            "Python": 16679,
            "C": 1776,
            "Makefile": 39
        }
    },
    {
        "name": "melted-flakes",
        "description": "My presonal NixOS config.New config can get in https://github.com/Ruixi-rebirth/flakes",
        "languages": {
            "Nix": 897714,
            "Lua": 213912,
            "Shell": 27664,
            "Haskell": 118,
            "Nushell": 43
        }
    },
    {
        "name": "dotfiles",
        "description": "My NixOS dotfiles",
        "languages": {
            "Nix": 341342,
            "Python": 86606,
            "Vim Script": 82608,
            "Shell": 72342,
            "Emacs Lisp": 50910,
            "YASnippet": 14579,
            "HCL": 13830,
            "Lua": 13689,
            "CSS": 4301,
            "Ruby": 2316,
            "Just": 2005,
            "HTML": 1749,
            "Rust": 1597,
            "Vim Snippet": 1449,
            "GDB": 841,
            "Sieve": 582,
            "C": 471
        }
    },
    {
        "name": "flake-utils-plus",
        "description": "Use Nix flakes without any fluff.",
        "languages": {
            "Nix": 39478
        }
    },
    {
        "name": "git-hooks.nix",
        "description": "Seamless integration of https://pre-commit.com git hooks with Nix.",
        "languages": {
            "Nix": 169446
        }
    },
    {
        "name": "plasma-manager",
        "description": "Manage KDE Plasma with Home Manager",
        "languages": {
            "Nix": 60562,
            "Python": 11438,
            "Ruby": 7865,
            "Shell": 2067
        }
    },
    {
        "name": "yuki",
        "description": "\u96ea - Yuki | Snowflake  :snowflake: ",
        "languages": {
            "Nix": 74599
        }
    },
    {
        "name": "nix-gaming",
        "description": "Gaming on Nix",
        "languages": {
            "Nix": 72195,
            "Python": 19664,
            "Shell": 12403
        }
    },
    {
        "name": "musnix",
        "description": "Real-time audio in NixOS",
        "languages": {
            "Nix": 17256,
            "Python": 2580,
            "Shell": 1814
        }
    },
    {
        "name": "nix-colors",
        "description": "Modules and schemes to make theming with Nix awesome.",
        "languages": {
            "Nix": 51595
        }
    },
    {
        "name": "nix-shorts",
        "description": "A collection of short notes about Nix, down to what is immediately needed for users.",
        "languages": {
            "Nix": 82
        }
    },
    {
        "name": "system",
        "description": "Declarative system configurations using nixOS, nix-darwin, and home-manager",
        "languages": {
            "Nix": 43799,
            "Lua": 32462,
            "Python": 9920,
            "Vim Script": 5985,
            "Shell": 2229
        }
    },
    {
        "name": "makes",
        "description": "A software supply chain framework powered by Nix.",
        "languages": {
            "Nix": 141415,
            "Python": 66893,
            "Shell": 42697,
            "JavaScript": 4474,
            "Ruby": 1819,
            "Just": 224,
            "HCL": 183
        }
    },
    {
        "name": "Jovian-NixOS",
        "description": "Discussions: https://matrix.to/#/#Jovian-Experiments:matrix.org",
        "languages": {
            "Nix": 104158,
            "Less": 33939,
            "Ruby": 18309,
            "Python": 11326,
            "Shell": 1895
        }
    },
    {
        "name": "static-haskell-nix",
        "description": "easily build most Haskell programs into fully static Linux executables",
        "languages": {
            "Nix": 101640,
            "Shell": 733,
            "Haskell": 464
        }
    },
    {
        "name": "nix-darwin-dotfiles",
        "description": "Dotfiles managed via Nix-Darwin and Mk-Darwin-System, for schoolwork and kotlin, lua, and rust programming",
        "languages": {
            "Nix": 67759
        }
    },
    {
        "name": "dotfiles-nix",
        "description": "Configuration files for my NixOS machine, declared by home-manager",
        "languages": {
            "Nix": 31704,
            "SCSS": 4640,
            "Shell": 3737,
            "Lua": 2535,
            "CSS": 574
        }
    },
    {
        "name": "srvos",
        "description": "NixOS profiles for servers [maintainer=@numtide]",
        "languages": {
            "Nix": 89813,
            "Shell": 8322
        }
    },
    {
        "name": "nixpkgs",
        "description": "My Nix system configs!",
        "languages": {
            "Nix": 65856,
            "Lua": 62200,
            "Vim Script": 292
        }
    },
    {
        "name": "templates",
        "description": "Flake templates",
        "languages": {
            "Nix": 47608,
            "Shell": 2439,
            "Rust": 1039,
            "F#": 625,
            "Haskell": 319,
            "Makefile": 201,
            "C": 89,
            "Go": 71,
            "M4": 69,
            "Python": 53
        }
    },
    {
        "name": "nixos-config",
        "description": "KISS NixOS configuration based on Flakes & flake-parts (supports macOS too)",
        "languages": {
            "Nix": 53418,
            "Emacs Lisp": 15218,
            "Haskell": 7048,
            "Shell": 913,
            "Just": 280,
            "Nu": 257
        }
    },
    {
        "name": "std",
        "description": "A DevOps framework for the SDLC with the power of Nix and Flakes. Good for keeping deadlines!",
        "languages": {
            "Nix": 127266,
            "Shell": 2131,
            "CUE": 829
        }
    },
    {
        "name": "nixos-vscode-server",
        "description": "Visual Studio Code Server support in NixOS",
        "languages": {
            "Nix": 10102
        }
    },
    {
        "name": "nix-example",
        "description": "a way to develop software with Nix",
        "languages": {
            "Nix": 52089,
            "Emacs Lisp": 23450,
            "Shell": 8169,
            "Python": 705,
            "Haskell": 699,
            "Dockerfile": 243
        }
    },
    {
        "name": "nixbsd",
        "description": "An unofficial NixOS fork with a FreeBSD kernel",
        "languages": {
            "Nix": 518347,
            "Shell": 45403,
            "Roff": 22213,
            "Perl": 16735,
            "Python": 2758,
            "C": 1785,
            "Lua": 1697,
            "CUE": 876
        }
    },
    {
        "name": "snack",
        "description": "Nix-based incremental build tool for Haskell projects",
        "languages": {
            "Nix": 35554,
            "Haskell": 27499,
            "Shell": 8450,
            "JSONiq": 115
        }
    },
    {
        "name": "rnix-parser",
        "description": "A Nix parser written in Rust [maintainer=@oberblastmeister]",
        "languages": {
            "Nix": 808913,
            "Rust": 91060
        }
    },
    {
        "name": "tvix",
        "description": "Tvix - A Rust implementation of Nix. Read-only mirror of https://cs.tvl.fyi/depot/-/tree/tvix",
        "languages": {
            "Nix": 2065153,
            "Rust": 1668691,
            "Go": 103920,
            "Shell": 1492
        }
    },
    {
        "name": "cargo2nix",
        "description": "Granular builds of Rust projects for Nix",
        "languages": {
            "Nix": 63501,
            "Rust": 36136,
            "Shell": 11505
        }
    },
    {
        "name": "nixcfg",
        "description": "NixOS and Home-Manager configs for my devices. dotfiles, but way better",
        "languages": {
            "Nix": 361964,
            "Nushell": 39925,
            "Shell": 34462,
            "Dhall": 6990,
            "CSS": 2611,
            "Nu": 1675,
            "HTML": 1392,
            "GLSL": 40
        }
    },
    {
        "name": "crate2nix",
        "description": "rebuild only changed crates in CI with crate2nix and nix",
        "languages": {
            "Nix": 364126,
            "Rust": 134358,
            "Shell": 8534
        }
    },
    {
        "name": "nixos-configs",
        "description": "My NixOS configs",
        "languages": {
            "Nix": 299212,
            "C": 36250,
            "Emacs Lisp": 23859,
            "Shell": 13824,
            "HTML": 3735,
            "Lua": 3389,
            "Vim Script": 2380,
            "PowerShell": 822
        }
    },
    {
        "name": "nixos-config",
        "description": "Nix noob trying to build his system",
        "languages": {
            "Nix": 140074,
            "Python": 70510,
            "Emacs Lisp": 65107,
            "Shell": 32412,
            "Haskell": 18809,
            "Mustache": 17678
        }
    },
    {
        "name": "kuro",
        "description": "An elegant Microsoft ToDo desktop client for Linux (a fork of Ao)",
        "languages": {
            "Nix": 283573,
            "JavaScript": 48922,
            "CSS": 11250
        }
    },
    {
        "name": "kubenix",
        "description": "Replaced by https://github.com/hall/kubenix",
        "languages": {
            "Nix": 14049762
        }
    },
    {
        "name": "dmux",
        "description": "A tmux workspace manager",
        "languages": {
            "Nix": 83529,
            "Rust": 25381,
            "Shell": 426
        }
    },
    {
        "name": "noogle",
        "description": "https://noogle.dev - nix function exploring. [maintainer=@hsjobeki] ",
        "languages": {
            "Nix": 308786,
            "TypeScript": 119697,
            "Rust": 70852,
            "MDX": 7406,
            "CSS": 3798,
            "JavaScript": 3607
        }
    },
    {
        "name": "nix-topology",
        "description": "\ud83c\udf41 Generate infrastructure and network diagrams directly from your NixOS configurations",
        "languages": {
            "Nix": 97073,
            "JavaScript": 17766
        }
    },
    {
        "name": "nix-config",
        "description": "My personal NixOS config",
        "languages": {
            "Nix": 195587,
            "Lua": 20505,
            "Shell": 2538
        }
    },
    {
        "name": "nix-docker",
        "description": "Provision Docker images using Nix",
        "languages": {
            "Nix": 52339,
            "Shell": 3459,
            "Python": 3453
        }
    },
    {
        "name": "nix-config",
        "description": "Wimpy's NixOS  & Home Manager Configurations \u2744\ufe0f",
        "languages": {
            "Nix": 303959,
            "Shell": 14912
        }
    },
    {
        "name": "config",
        "description": "One Nix flake to rule them all.",
        "languages": {
            "Nix": 609937,
            "Shell": 12434,
            "JavaScript": 12054,
            "CSS": 9758,
            "SCSS": 2085,
            "HCL": 381
        }
    },
    {
        "name": "nix-docker",
        "description": "Docker images for the Nix package manager",
        "languages": {
            "Nix": 11041,
            "Shell": 2679,
            "Dockerfile": 1762
        }
    },
    {
        "name": "lib",
        "description": "Unified configuration for systems, packages, modules, shells, templates, and more with Nix Flakes.",
        "languages": {
            "Nix": 70116
        }
    },
    {
        "name": "neovim-nightly-overlay",
        "description": "[maintainer=@Kranzes]",
        "languages": {
            "Nix": 2108
        }
    },
    {
        "name": "terranix",
        "description": "terranix is a terraform.json generator with a nix-like feeling",
        "languages": {
            "Nix": 37806,
            "Roff": 24283,
            "Shell": 6258
        }
    },
    {
        "name": "kaku",
        "description": "\u9769 | kaku",
        "languages": {
            "Nix": 135345,
            "Python": 5058,
            "CSS": 2301,
            "Shell": 649,
            "JavaScript": 584
        }
    },
    {
        "name": "cardano-graphql",
        "description": "GraphQL API for Cardano",
        "languages": {
            "Nix": 223791,
            "TypeScript": 218329,
            "Dockerfile": 6374,
            "Shell": 5605,
            "JavaScript": 4481
        }
    },
    {
        "name": "cardano-token-registry",
        "description": null,
        "languages": {
            "Nix": 7702
        }
    },
    {
        "name": "nixcfg",
        "description": "My nix configuration(s), using flakes. It's my laptop, it's my servers, it's my everything, in code.",
        "languages": {
            "Nix": 179607,
            "Vim Script": 9603,
            "CSS": 5611,
            "Erlang": 4014,
            "Shell": 3236,
            "JavaScript": 2144,
            "HTML": 1692,
            "Makefile": 409
        }
    },
    {
        "name": "high-quality-nix-content",
        "description": "GitHub repository containing highest quality Nix/NixOS content",
        "languages": {
            "Nix": 8974
        }
    },
    {
        "name": "haumea",
        "description": "Filesystem-based module system for Nix [maintainer=@figsoda]",
        "languages": {
            "Nix": 14363
        }
    },
    {
        "name": "nix-darwin-kickstarter",
        "description": "macOS as Code! A beginner-friendly nix-darwin + home-manager + flakes startup configuration. \u4e00\u4efd\u6613\u4e8e\u7406\u89e3\u7684 nix-darwin \u521d\u59cb\u914d\u7f6e\u6a21\u677f\uff0c\u4e13\u4e3a\u65b0\u624b\u5236\u4f5c.",
        "languages": {
            "Nix": 27971,
            "Just": 1511,
            "Python": 1213
        }
    },
    {
        "name": "android-nixpkgs",
        "description": "Nix-packaged Android SDK",
        "languages": {
            "Nix": 1495717,
            "Kotlin": 16749,
            "Shell": 1370
        }
    },
    {
        "name": "nixpak",
        "description": "Runtime sandboxing for Nix",
        "languages": {
            "Nix": 23129,
            "Go": 3732
        }
    },
    {
        "name": "nix-processmgmt",
        "description": "Experimental Nix-based process management framework",
        "languages": {
            "Nix": 209244,
            "Shell": 139677,
            "C": 19651,
            "Makefile": 493
        }
    },
    {
        "name": "gitignore.nix",
        "description": "Nix functions for filtering local git sources",
        "languages": {
            "Nix": 39149
        }
    },
    {
        "name": "nixos-config",
        "description": "Mirror of https://code.balsoft.ru/balsoft/nixos-config",
        "languages": {
            "Nix": 236409,
            "Shell": 99860,
            "Emacs Lisp": 6403,
            "Haskell": 3515
        }
    },
    {
        "name": "nix-doom-emacs",
        "description": "doom-emacs packaged for Nix",
        "languages": {
            "Nix": 23884,
            "Emacs Lisp": 11642
        }
    },
    {
        "name": "nixpkgs-hammering",
        "description": "Beat your package expressions into a shape",
        "languages": {
            "Nix": 68964,
            "Python": 22070,
            "Rust": 21170
        }
    },
    {
        "name": "kubenix",
        "description": "Kubernetes management with Nix",
        "languages": {
            "Nix": 9545544
        }
    },
    {
        "name": "neovim-flake",
        "description": "Nix flake for neovim with configuration",
        "languages": {
            "Nix": 139363
        }
    },
    {
        "name": "nixinate",
        "description": "Another NixOS Deployment Tool - Nixinate your systems \ud83d\udd76\ufe0f ",
        "languages": {
            "Nix": 11827
        }
    },
    {
        "name": "flake-compat",
        "description": null,
        "languages": {
            "Nix": 8855
        }
    },
    {
        "name": "nix-index-database",
        "description": "Weekly updated nix-index database [maintainer=@Mic92]",
        "languages": {
            "Nix": 8414
        }
    },
    {
        "name": "nyx",
        "description": "My overengineered NixOS flake. Desktops, laptops, servers and everything else that can run an OS",
        "languages": {
            "Nix": 748205,
            "JavaScript": 62884,
            "Shell": 23049,
            "SCSS": 16937,
            "Vim Script": 13974,
            "Python": 11066,
            "CSS": 10032,
            "Lua": 8338,
            "HTML": 6089,
            "Makefile": 851,
            "C++": 81,
            "Go": 74,
            "Rust": 45,
            "TypeScript": 29
        }
    },
    {
        "name": "dotfiles",
        "description": "My dotfiles",
        "languages": {
            "Nix": 72851,
            "Emacs Lisp": 66013,
            "Python": 13848,
            "Vim Script": 9159,
            "YASnippet": 4715,
            "Vim Snippet": 842,
            "Shell": 361
        }
    },
    {
        "name": "NixNG",
        "description": "A linux distribution based on Nix [maintainer=@MagicRB]",
        "languages": {
            "Nix": 224763,
            "Haskell": 6361,
            "Shell": 3544,
            "Jinja": 375,
            "Emacs Lisp": 348
        }
    },
    {
        "name": "update-flake-lock",
        "description": "Automatically refresh your Nix Flakes.",
        "languages": {
            "Nix": 1061,
            "Shell": 570
        }
    },
    {
        "name": "nixflakes",
        "description": "My nixdots, but flaked.",
        "languages": {
            "Nix": 97564,
            "Shell": 5680
        }
    },
    {
        "name": "haskell-template",
        "description": "Haskell project template using Nix + Flakes + VSCode (HLS)",
        "languages": {
            "Nix": 3874,
            "Just": 339,
            "Haskell": 268
        }
    },
    {
        "name": "nixwrt",
        "description": "This repo is dormant : NixWRT is being rewritten as Liminix",
        "languages": {
            "Nix": 106498,
            "Makefile": 2195,
            "Lua": 1014
        }
    },
    {
        "name": "nixos-config",
        "description": null,
        "languages": {
            "Nix": 131880,
            "Shell": 88273
        }
    },
    {
        "name": "infra",
        "description": "NixOS configurations for nixos.org and its servers",
        "languages": {
            "Nix": 116079,
            "Smarty": 97984,
            "HCL": 61907,
            "Python": 33935,
            "Shell": 10018,
            "HTML": 3032
        }
    },
    {
        "name": "nixos-ha-kubernetes",
        "description": "Toy highly-available Kubernetes cluster on NixOS",
        "languages": {
            "Nix": 25478,
            "HCL": 3637,
            "Shell": 864
        }
    },
    {
        "name": "plutonomicon",
        "description": "Advanced techniques in the plutus smart contract language",
        "languages": {
            "Nix": 2672
        }
    },
    {
        "name": "dotfiles",
        "description": "My personal dotfiles",
        "languages": {
            "Nix": 151353,
            "Nu": 23862
        }
    },
    {
        "name": "plutus-starter",
        "description": "A starter project for Plutus apps",
        "languages": {
            "Nix": 25007,
            "Haskell": 4823,
            "Shell": 2608
        }
    },
    {
        "name": "gomod2nix",
        "description": "Convert applications using Go modules to Nix expressions [maintainer=@adisbladis]",
        "languages": {
            "Nix": 25857,
            "Go": 21146,
            "Shell": 454,
            "Makefile": 22
        }
    },
    {
        "name": "dconf2nix",
        "description": ":feet: Convert dconf files (e.g. GNOME Shell) to Nix, as expected by Home Manager [maintainer=@jtojnar]",
        "languages": {
            "Nix": 27067,
            "Haskell": 25488
        }
    },
    {
        "name": "dotfiles",
        "description": "Jichao Ouyang's awesome dotfiles",
        "languages": {
            "Nix": 19132,
            "Shell": 6472,
            "Emacs Lisp": 5502,
            "Lua": 1536,
            "Less": 819,
            "CoffeeScript": 386,
            "Scala": 376
        }
    },
    {
        "name": "nixos-titus",
        "description": "Titus's personal NIX OS Configuration",
        "languages": {
            "Nix": 9809
        }
    },
    {
        "name": "all-hies",
        "description": "Cached Haskell IDE Engine Nix builds for all GHC versions",
        "languages": {
            "Nix": 10580,
            "Haskell": 174
        }
    },
    {
        "name": "styx",
        "description": "Static site generator in Nix expression language.",
        "languages": {
            "Nix": 326226,
            "CSS": 53498,
            "JavaScript": 45302,
            "SCSS": 28951,
            "Shell": 18957,
            "Python": 7710
        }
    },
    {
        "name": "zig-overlay",
        "description": "Nix flake for the Zig compiler.",
        "languages": {
            "Nix": 7027
        }
    },
    {
        "name": "nixos-router",
        "description": "A NixOS router framework",
        "languages": {
            "Nix": 81168
        }
    },
    {
        "name": "nome",
        "description": "My Nix home",
        "languages": {
            "Nix": 27561,
            "Shell": 1145,
            "Nushell": 88,
            "Vim Script": 27
        }
    },
    {
        "name": "easy-purescript-nix",
        "description": "Easy PureScript (and other tools) with Nix",
        "languages": {
            "Nix": 289477,
            "Shell": 459
        }
    },
    {
        "name": "nixcrpkgs",
        "description": "Tools for cross-compiling standalone applications using Nix.",
        "languages": {
            "Nix": 70498,
            "Shell": 41989,
            "Ruby": 35874,
            "C": 14411,
            "CMake": 4685,
            "C++": 3989
        }
    },
    {
        "name": "dotfiles",
        "description": "My dotfiles are here, managed with Chezmoi and NixOS Flakes",
        "languages": {
            "Nix": 191357,
            "Shell": 24576,
            "Lua": 17130,
            "Python": 2005,
            "CSS": 1780
        }
    },
    {
        "name": "oreilly-downloader",
        "description": "Download Oreilly books as epub ",
        "languages": {
            "Nix": 1108,
            "Shell": 501,
            "Dockerfile": 399
        }
    },
    {
        "name": "nyx",
        "description": "Nix flake for \"too much bleeding-edge\" and unreleased packages (e.g., mesa_git, linux_cachyos, firefox_nightly, sway_git, gamescope_git). And experimental modules (e.g., HDR, duckdns).",
        "languages": {
            "Nix": 1390717,
            "Shell": 7078
        }
    },
    {
        "name": "nix",
        "description": "\u2744\ufe0f Soothing pastel theme for Nix",
        "languages": {
            "Nix": 41905
        }
    },
    {
        "name": "nix-config",
        "description": "My NixOS configuration with Nix Flakes, Home Manager, Stylix, and Hyprland.",
        "languages": {
            "Nix": 104628
        }
    },
    {
        "name": "Hyprland-dotfiles",
        "description": "Welcome to my NixOS hyprland config",
        "languages": {
            "Nix": 57371,
            "Shell": 616
        }
    },
    {
        "name": "nixos-mailserver",
        "description": "A complete and Simple Nixos Mailserver",
        "languages": {
            "Nix": 77317,
            "Shell": 77
        }
    },
    {
        "name": "nix-security-box",
        "description": "Tool set for Information security professionals and all others",
        "languages": {
            "Nix": 10743,
            "Python": 4048
        }
    },
    {
        "name": "nixus",
        "description": "Experimental deployment tool supporting multi-host abstractions",
        "languages": {
            "Nix": 66056
        }
    },
    {
        "name": "nix-flatpak",
        "description": "Install flatpaks declaratively",
        "languages": {
            "Nix": 20675,
            "jq": 1547
        }
    },
    {
        "name": "nixdots",
        "description": "Dotfiles for NixOS",
        "languages": {
            "Nix": 246573,
            "Shell": 92332,
            "Lua": 31056,
            "C": 19017,
            "Haskell": 6104,
            "Python": 3898,
            "CSS": 908
        }
    },
    {
        "name": "nix-emacs-ci",
        "description": "Emacs builds for continuous integration",
        "languages": {
            "Nix": 11568,
            "Shell": 1636,
            "Emacs Lisp": 1140
        }
    },
    {
        "name": "nix-filter",
        "description": "a small self-contained source filtering lib",
        "languages": {
            "Nix": 11537,
            "Shell": 3074
        }
    },
    {
        "name": "rust-nix-template",
        "description": "Rust project template with Nix (Flakes) and VSCode support",
        "languages": {
            "Nix": 1419,
            "Rust": 470,
            "Just": 249
        }
    },
    {
        "name": "services-flake",
        "description": "NixOS-like services for Nix flakes",
        "languages": {
            "Nix": 109623,
            "Just": 1330
        }
    },
    {
        "name": "snowflake",
        "description": "A repository which contains my current Nix (flake-based) setup!",
        "languages": {
            "Nix": 329278,
            "Haskell": 47208,
            "Python": 37597,
            "CSS": 25884,
            "Lua": 13159,
            "SCSS": 3822,
            "Common Lisp": 3713,
            "NewLisp": 559
        }
    },
    {
        "name": "nix-cargo-integration",
        "description": "Library to easily and effortlessly integrate Cargo projects with Nix.",
        "languages": {
            "Nix": 32380
        }
    },
    {
        "name": "nix-environments",
        "description": "Repository to maintain out-of-tree shell.nix files (maintainer=@mic92)",
        "languages": {
            "Nix": 12515,
            "Makefile": 207,
            "Ruby": 49
        }
    },
    {
        "name": "nixos-flake-example",
        "description": "This is a demo NixOS config, with optional flakes support. Along with notes on why flakes is useful and worth adopting.",
        "languages": {
            "Nix": 1931,
            "Shell": 1095
        }
    },
    {
        "name": "treefmt-nix",
        "description": "treefmt nix configuration",
        "languages": {
            "Nix": 78198,
            "Shell": 1003
        }
    },
    {
        "name": "nixpkgs-channels",
        "description": "DEPRECATED! Use NixOS/nixpkgs repository instead.",
        "languages": {
            "Nix": 38761553,
            "Shell": 773304,
            "Python": 261668,
            "Ruby": 199493,
            "Perl": 177699,
            "C": 125838,
            "Common Lisp": 40780,
            "XSLT": 31202,
            "C++": 24955,
            "Emacs Lisp": 21264,
            "Erlang": 13588,
            "JavaScript": 12006,
            "Vim Script": 10631,
            "M4": 9030,
            "TypeScript": 7494,
            "D": 5281,
            "R": 4283,
            "Roff": 2009,
            "Makefile": 1885,
            "QMake": 1549,
            "C#": 1462,
            "CMake": 1209,
            "Awk": 1088,
            "Crystal": 1013,
            "sed": 881,
            "CSS": 749,
            "Go": 662,
            "Jasmin": 656,
            "Java": 538,
            "PHP": 224,
            "PureScript": 170,
            "Meson": 134,
            "Scheme": 105,
            "Lua": 74
        }
    },
    {
        "name": "nixcloud-webservices",
        "description": "This nixpkgs extension, called nixcloud-webservices, focuses on ease of deployment of web-related technologies.",
        "languages": {
            "Nix": 458165,
            "Python": 8490,
            "Shell": 5454,
            "Sieve": 1072,
            "Lua": 665
        }
    },
    {
        "name": "dotfiles",
        "description": "system configurations using nix",
        "languages": {
            "Nix": 34882,
            "Lua": 20129,
            "Vim Script": 15139
        }
    },
    {
        "name": "dotfiles",
        "description": "My dotfiles + system configuration for NixOS and mac",
        "languages": {
            "Nix": 69789,
            "Nushell": 34875,
            "Lua": 34237,
            "Haskell": 14165,
            "Python": 12886,
            "CSS": 7847,
            "SCSS": 6409,
            "Shell": 6195,
            "Nu": 980
        }
    },
    {
        "name": "RedNixOS",
        "description": "NixOS-based 'distro' for cybersecurity enthusiasts",
        "languages": {
            "Nix": 9815,
            "CSS": 4431
        }
    },
    {
        "name": "nix-ros-overlay",
        "description": "ROS overlay for the Nix package manager",
        "languages": {
            "Nix": 7818218,
            "Shell": 4555,
            "Perl": 666
        }
    },
    {
        "name": ".dots",
        "description": "just my .dotfiles",
        "languages": {
            "Nix": 65956,
            "Rust": 38309,
            "Haskell": 16570,
            "Shell": 14573,
            "Vim Script": 13305,
            "Vim Snippet": 9490,
            "Python": 7552
        }
    },
    {
        "name": "xn--ts9h",
        "description": "\ud83e\udd7a is sudo at home",
        "languages": {
            "Nix": 2256,
            "Rust": 1206,
            "Roff": 572
        }
    },
    {
        "name": "todomvc-nix",
        "description": "Example on how to nixify a project [maintainer=@Rizary]",
        "languages": {
            "Nix": 88656,
            "Rust": 34158,
            "Haskell": 16536,
            "Shell": 5243,
            "JavaScript": 1387,
            "HTML": 1123,
            "PLpgSQL": 334,
            "Dockerfile": 327
        }
    },
    {
        "name": "nixos",
        "description": "My NixOS Configurations",
        "languages": {
            "Nix": 293623,
            "Lua": 103304,
            "Vim Script": 22787,
            "Shell": 20211,
            "CSS": 14946,
            "Python": 11049,
            "HTML": 9395,
            "Mustache": 8899,
            "Jsonnet": 2692,
            "Scheme": 2531,
            "JavaScript": 370
        }
    },
    {
        "name": "tsnsrv",
        "description": "A reverse proxy that exposes services on your tailnet (as their own tailscale participants)",
        "languages": {
            "Nix": 29022,
            "Go": 25384
        }
    },
    {
        "name": "docker-nixpkgs",
        "description": "docker images from nixpkgs [maintainer=@zimbatm]",
        "languages": {
            "Nix": 15005,
            "Shell": 7216
        }
    },
    {
        "name": "nix-homelab",
        "description": "Homelab and dotfiles made with NixOS",
        "languages": {
            "Nix": 273126,
            "Python": 50011,
            "Lua": 20550,
            "Shell": 4535
        }
    },
    {
        "name": "bitte",
        "description": "Nix Ops for Terraform, Consul, Vault, Nomad",
        "languages": {
            "Nix": 715040,
            "Rust": 35147,
            "CUE": 30230,
            "Shell": 14904,
            "Ruby": 5012,
            "HCL": 1055
        }
    },
    {
        "name": "base16.nix",
        "description": "Theme applications with your favourite base16 colorschemes in Nix",
        "languages": {
            "Nix": 21076
        }
    },
    {
        "name": "drv-parts",
        "description": "Configure packages like NixOS systems",
        "languages": {
            "Nix": 40921,
            "XSLT": 1719
        }
    },
    {
        "name": "dotfiles",
        "description": "My computing environment, in code form. Nix for my personal computer and my server. Mirror.",
        "languages": {
            "Nix": 74758,
            "CSS": 809
        }
    },
    {
        "name": "nix-files",
        "description": "My NixOS configuration and custom Nix derivations.",
        "languages": {
            "Nix": 102626,
            "Shell": 1242
        }
    },
    {
        "name": "superstar-checkin",
        "description": "\u8d85\u661f\u5b66\u4e60\u901a\u81ea\u52a8\u7b7e\u5230",
        "languages": {
            "Nix": 42232,
            "TypeScript": 32356,
            "Dockerfile": 428
        }
    },
    {
        "name": "nix-haskell-monorepo",
        "description": "Pragmatic tutorial on how to use nix with a haskell monorepo",
        "languages": {
            "Nix": 22126,
            "Haskell": 2236,
            "Shell": 263
        }
    },
    {
        "name": "shabka",
        "description": "Shabka. Declaritive description of my network, workstations and servers.",
        "languages": {
            "Nix": 187944,
            "Shell": 85697,
            "Vim Script": 26596,
            "Ruby": 4805,
            "Python": 3023,
            "Makefile": 413
        }
    },
    {
        "name": "flakelight",
        "description": "Framework for simplifying flake setup [maintainer=@accelbread]",
        "languages": {
            "Nix": 65338
        }
    },
    {
        "name": "nixos-pi",
        "description": "How to install NixOS on raspberry PI",
        "languages": {
            "Nix": 10904,
            "Dockerfile": 103
        }
    },
    {
        "name": "nomia",
        "description": "A system for precise, efficient resource management across every domain and resource type.",
        "languages": {
            "Nix": 6941,
            "Makefile": 148
        }
    },
    {
        "name": "holonix",
        "description": "NixOS && Holochain",
        "languages": {
            "Nix": 793
        }
    },
    {
        "name": "nixos-flake",
        "description": "A flake-parts module to manage NixOS and macOS machines, along with home-manager support, in a unified fashion.",
        "languages": {
            "Nix": 6635
        }
    },
    {
        "name": "dotfiles",
        "description": "\ud83d\udcbb Public repo for my personal dotfiles",
        "languages": {
            "Nix": 11026,
            "Shell": 3519
        }
    },
    {
        "name": "nixfiles",
        "description": "My NixOS configuration and assorted other crap.",
        "languages": {
            "Nix": 121752,
            "Python": 16704,
            "Shell": 11394,
            "HTML": 1092
        }
    },
    {
        "name": "system",
        "description": "My system configuration",
        "languages": {
            "Nix": 160909,
            "Shell": 83754,
            "Haskell": 12881,
            "Python": 7096
        }
    },
    {
        "name": "skyflake",
        "description": "NixOS Hyperconverged Infrastructure on Nomad/NixOS",
        "languages": {
            "Nix": 48600
        }
    },
    {
        "name": "shabitica",
        "description": "Run your own self-hosted Habitica instance",
        "languages": {
            "Nix": 139827,
            "Haskell": 18853,
            "Python": 16795,
            "Shell": 2138,
            "Mustache": 1786
        }
    },
    {
        "name": "ghc.nix",
        "description": "Nix (shell) expression for working on GHC",
        "languages": {
            "Nix": 14337
        }
    },
    {
        "name": "nixos-wsl-starter",
        "description": "A sane, batteries-included starter template for running NixOS on WSL",
        "languages": {
            "Nix": 15900
        }
    },
    {
        "name": "nix-config",
        "description": "My personal nix config",
        "languages": {
            "Nix": 192884,
            "Shell": 87722
        }
    },
    {
        "name": "wrapper-manager",
        "description": "Post-modern configuration management",
        "languages": {
            "Nix": 14786
        }
    },
    {
        "name": "nixos-on-arm",
        "description": "Cross Compiling NixOS to ARM as a replacement for Yocto",
        "languages": {
            "Nix": 31538,
            "Shell": 7636
        }
    },
    {
        "name": "nixpkgs-config",
        "description": "~/.config/nixpkgs",
        "languages": {
            "Nix": 23238
        }
    },
    {
        "name": "nixos-tutorial",
        "description": "one hour, hands-on",
        "languages": {
            "Nix": 743
        }
    },
    {
        "name": "nixos-configuration",
        "description": null,
        "languages": {
            "Nix": 114834,
            "Shell": 15403,
            "Lua": 8957
        }
    },
    {
        "name": "nix-minecraft",
        "description": "An attempt to better support Minecraft-related content for the Nix ecosystem",
        "languages": {
            "Nix": 44200,
            "Python": 30398
        }
    },
    {
        "name": "dotfiles",
        "description": "Personal configuration files for my PC",
        "languages": {
            "Nix": 87102,
            "Lua": 78917,
            "Emacs Lisp": 26881,
            "Shell": 22337,
            "Rust": 6098,
            "CSS": 4882,
            "Scheme": 3824,
            "Nushell": 2672,
            "Python": 1580,
            "Vim Script": 1088,
            "Perl": 862,
            "PowerShell": 834,
            "JavaScript": 294,
            "Nu": 191
        }
    },
    {
        "name": "wasm-cross",
        "description": "Nix expressions for cross compiling to WebAssembly",
        "languages": {
            "Nix": 24522,
            "C": 468,
            "CMake": 174
        }
    },
    {
        "name": "agenix-rekey",
        "description": "An agenix extension adding secret generation and automatic rekeying using a YubiKey or master-identity",
        "languages": {
            "Nix": 66964
        }
    },
    {
        "name": "onedrive-cli",
        "description": "Command line interface for OneDrive",
        "languages": {
            "Nix": 29241,
            "JavaScript": 23635
        }
    },
    {
        "name": "nixos-config",
        "description": "\u2744\ufe0f NixOs / Hyprland rice with Home-Manager \u2744\ufe0f",
        "languages": {
            "Nix": 53761,
            "Shell": 14532
        }
    },
    {
        "name": "nixpkgs-python",
        "description": "All Python versions, kept up-to-date on hourly basis using Nix.",
        "languages": {
            "Nix": 9463,
            "Python": 2314
        }
    },
    {
        "name": "dotfiles",
        "description": "My dotfiles.",
        "languages": {
            "Nix": 14005
        }
    },
    {
        "name": "linuxkit-nix",
        "description": "An easy to use Linux builder for macOS [maintainer=@nicknovitski]",
        "languages": {
            "Nix": 45184,
            "Shell": 9476,
            "Rust": 5590
        }
    },
    {
        "name": "kickstart.nix",
        "description": "Kickstart your Nix environment.",
        "languages": {
            "Nix": 44690,
            "Zig": 4077,
            "TypeScript": 3425,
            "Just": 1842,
            "CSS": 1769,
            "JavaScript": 1298,
            "Swift": 1056,
            "Python": 498,
            "HTML": 366,
            "Dart": 174,
            "Lua": 164,
            "CMake": 128,
            "Go": 112,
            "C++": 83,
            "Haskell": 67,
            "Rust": 45,
            "OCaml": 39
        }
    },
    {
        "name": "nix-shell",
        "description": "Nix shells for PHP development",
        "languages": {
            "Nix": 17698
        }
    },
    {
        "name": "mbp-nixos",
        "description": "Instructions and scripts related to getting NixOS running on a newer generation MBP",
        "languages": {
            "Nix": 5141,
            "Shell": 3874
        }
    },
    {
        "name": "nixfiles",
        "description": "My kick-ass NixOS systems configurations!!",
        "languages": {
            "Nix": 91224,
            "Vim Script": 10944,
            "Shell": 4948
        }
    },
    {
        "name": "homeage",
        "description": "runtime decrypted age secrets for nix home manager",
        "languages": {
            "Nix": 11957
        }
    },
    {
        "name": "dotfiles",
        "description": "My general config and dotfiles for linux",
        "languages": {
            "Nix": 85219,
            "Lua": 60037,
            "Shell": 4938,
            "PowerShell": 4552,
            "CSS": 2737,
            "Vim Script": 1187,
            "Emacs Lisp": 620
        }
    },
    {
        "name": "krops",
        "description": "Mirror of https://cgit.krebsco.de/krops/about/ (PRs / issues accepted, as can be seen by not having them disabled)",
        "languages": {
            "Nix": 24273
        }
    },
    {
        "name": "horus-nix-home",
        "description": "This is my laptop nixos  user environment provided by https://github.com/rycee/home-manager. It includes full i3, polybar and personnal apps configuration, all in nix.",
        "languages": {
            "Nix": 25195
        }
    },
    {
        "name": "nixiosk",
        "description": "Declarative Kiosk systems built with NixOS",
        "languages": {
            "Nix": 53083,
            "Shell": 25102
        }
    },
    {
        "name": "npmlock2nix",
        "description": "nixify npm based packages [maintainer=@andir] ",
        "languages": {
            "Nix": 117235,
            "Shell": 1925,
            "JavaScript": 494
        }
    },
    {
        "name": "nixcrpkgs",
        "description": "Nice nix expressions for cross-compiling.",
        "languages": {
            "Nix": 70497,
            "Shell": 41988,
            "Ruby": 35874,
            "C": 14411,
            "CMake": 4685,
            "C++": 3989
        }
    },
    {
        "name": "nixos-images",
        "description": "Automatically build (netboot) images for NixOS [maintainer=@Mic92]",
        "languages": {
            "Nix": 26895,
            "Shell": 4464,
            "Python": 3613
        }
    },
    {
        "name": "veritas",
        "description": "@davidtwco's personal mono-repo - containing the declarative configuration of servers, desktops and laptops - including dotfiles; a collection of packages; a static site generator and source of \"davidtw.co\".",
        "languages": {
            "Nix": 68609,
            "CSS": 11683,
            "TeX": 10449,
            "HTML": 5446,
            "Shell": 1764,
            "Rust": 1542
        }
    },
    {
        "name": "dotfiles",
        "description": "My NixOS dotfiles for desktops and servers",
        "languages": {
            "Nix": 270726,
            "Shell": 94276
        }
    },
    {
        "name": "nix-config",
        "description": "My NixOS configuration (DEPRECATED)",
        "languages": {
            "Nix": 57566,
            "Emacs Lisp": 18264,
            "Vim Script": 9439,
            "Haskell": 5381,
            "Shell": 1171,
            "Makefile": 975,
            "PowerShell": 449
        }
    },
    {
        "name": "automatic1111-webui-nix",
        "description": "AUTOMATIC1111/stable-diffusion-webui for CUDA and ROCm on NixOS",
        "languages": {
            "Nix": 2145
        }
    },
    {
        "name": "yarn2nix",
        "description": "Generate nix expressions from a yarn.lock file [maintainer=???]",
        "languages": {
            "Nix": 182497,
            "JavaScript": 14284,
            "Shell": 1696
        }
    },
    {
        "name": "kernel-module-flake",
        "description": "Nix flake for linux kernel module development with rust support",
        "languages": {
            "Nix": 22125,
            "Python": 2628,
            "Makefile": 2353,
            "Rust": 1661,
            "C": 1424,
            "Shell": 1321
        }
    },
    {
        "name": "nixos-config",
        "description": "My Personal Nix/NixOS Configuration.",
        "languages": {
            "Nix": 80447,
            "Lua": 39576,
            "Shell": 23111,
            "Haskell": 12864,
            "Emacs Lisp": 6787,
            "CSS": 1126
        }
    },
    {
        "name": "nixCats-nvim",
        "description": "A Lua-natic nix user's Neovim Flake, kickstart.nvim style",
        "languages": {
            "Nix": 128369,
            "Lua": 85385
        }
    },
    {
        "name": "haskell-flake",
        "description": "A `flake-parts` Nix module for Haskell development",
        "languages": {
            "Nix": 76042,
            "Haskell": 548,
            "Just": 417
        }
    },
    {
        "name": "nocargo",
        "description": "[alpha] Build Rust crates with Nix Build System.",
        "languages": {
            "Nix": 170293,
            "Rust": 24933,
            "Shell": 18362,
            "Python": 13383
        }
    },
    {
        "name": "iohk-ops",
        "description": "NixOps deployment configuration for IOHK devops",
        "languages": {
            "Nix": 739110,
            "Haskell": 226616,
            "HTML": 212105,
            "Shell": 82638,
            "HCL": 36121,
            "R": 24159,
            "Python": 10916,
            "PowerShell": 8474
        }
    },
    {
        "name": "nixos-config",
        "description": "My NixOS configuration files. (This public mirror is not updated anymore.)",
        "languages": {
            "Nix": 228127,
            "Shell": 44433,
            "Vim Script": 15834
        }
    },
    {
        "name": "nixago",
        "description": "Generate configuration files using Nix [maintainer=@jmgilman] ",
        "languages": {
            "Nix": 25606,
            "CUE": 307,
            "Shell": 156
        }
    },
    {
        "name": "nix",
        "description": "My personal notes and memos about playing with NixOS on a Raspberry PI",
        "languages": {
            "Nix": 16282
        }
    },
    {
        "name": "nixos-configs",
        "description": "My NixOS and nix-darwin configs",
        "languages": {
            "Nix": 87066,
            "Python": 736
        }
    },
    {
        "name": "jetpack-nixos",
        "description": "NixOS module for NVIDIA Jetson devices",
        "languages": {
            "Nix": 153611,
            "Shell": 11459,
            "Python": 4899
        }
    },
    {
        "name": "sbt-nix.g8",
        "description": ":snowflake: Get started with Nix in Scala",
        "languages": {
            "Nix": 6753,
            "Scala": 4776,
            "Dockerfile": 83,
            "Shell": 60
        }
    },
    {
        "name": "hie-nix",
        "description": "Nix packages for Haskell IDE Engine",
        "languages": {
            "Nix": 7452428,
            "Shell": 676
        }
    },
    {
        "name": "schizofox",
        "description": "Hardened Firefox flake for the delusional and the schizophrenics.",
        "languages": {
            "Nix": 59162,
            "HTML": 185
        }
    },
    {
        "name": "powerline-rs",
        "description": "GitLab: https://gitlab.com/jD91mZM2/powerline-rs",
        "languages": {
            "Nix": 63058,
            "Rust": 38546
        }
    },
    {
        "name": "nixdoc",
        "description": "Tool to generate documentation for Nix library functions [maintainer=@infinisil]",
        "languages": {
            "Nix": 50161,
            "Rust": 36338
        }
    },
    {
        "name": "hydra-tutorial",
        "description": "Sample configuration files for setting up your own Hydra continuous integration server.",
        "languages": {
            "Nix": 6407
        }
    },
    {
        "name": "NixNeovim",
        "description": "Configure Neovim with Nix!",
        "languages": {
            "Nix": 389573,
            "Python": 6051,
            "Shell": 1995
        }
    },
    {
        "name": "nixos",
        "description": "A fully automated replicable nixos configuration set",
        "languages": {
            "Nix": 35880,
            "Shell": 4551
        }
    },
    {
        "name": "python",
        "description": "Extensive collection of Python projects from PyPI, for Nix!",
        "languages": {
            "Nix": 49174,
            "Python": 27351,
            "Shell": 6668
        }
    },
    {
        "name": "idempotent-desktop",
        "description": "\ud83d\udef8  nixos, fish, neovim, leftwm",
        "languages": {
            "Nix": 89493,
            "Lua": 20480,
            "Shell": 9273,
            "Vim Script": 6069,
            "Liquid": 1313,
            "CSS": 1090,
            "Elixir": 291
        }
    },
    {
        "name": "RedNix",
        "description": "Hackable NixOS container",
        "languages": {
            "Nix": 13364
        }
    },
    {
        "name": "home-manager-template",
        "description": "A quick-start template for using home-manager in a more reproducible way.",
        "languages": {
            "Nix": 8167,
            "Shell": 67
        }
    },
    {
        "name": "nixops-tutorial",
        "description": "Tutorial for practical deployments with NixOps",
        "languages": {
            "Nix": 5317,
            "Python": 1412
        }
    },
    {
        "name": "nur-combined",
        "description": "A repository of NUR that combines all repositories [maintainer=@Mic92] ",
        "languages": {
            "Nix": 28361961,
            "Shell": 1226034,
            "HTML": 1050850,
            "Jupyter Notebook": 505042,
            "Python": 379581,
            "Emacs Lisp": 242893,
            "C": 180060,
            "JavaScript": 177842,
            "Vim Script": 127624,
            "Lua": 93171,
            "Starlark": 57285,
            "CSS": 47950,
            "GLSL": 42521,
            "Java": 38036,
            "Fennel": 33705,
            "Makefile": 33223,
            "Roff": 26415,
            "Rust": 23050,
            "Haskell": 20596,
            "YASnippet": 18508,
            "Nushell": 18276,
            "HCL": 16980,
            "Ruby": 16242,
            "Fortran": 14861,
            "Dockerfile": 13770,
            "Erlang": 13588,
            "Jsonnet": 8791,
            "CMake": 7702,
            "Just": 5505,
            "Scheme": 4108,
            "Go": 3722,
            "TypeScript": 3438,
            "Perl": 3326,
            "Vim Snippet": 2420,
            "C++": 1177,
            "MATLAB": 769,
            "PHP": 712,
            "Sieve": 512,
            "TeX": 486,
            "Meson": 465,
            "Jinja": 292,
            "Groovy": 229,
            "M4": 122
        }
    },
    {
        "name": ".nixpkgs",
        "description": ".nixpkgs aka dotfiles with nix",
        "languages": {
            "Nix": 9973,
            "Lua": 8747,
            "Python": 5225,
            "Shell": 2946,
            "Elixir": 387
        }
    },
    {
        "name": "lollypops",
        "description": "Lollypop Operations - NixOS Deployment Tool",
        "languages": {
            "Nix": 23457
        }
    },
    {
        "name": "dotfiles",
        "description": "Dotfiles deployed with nix/home-manager. Feel free to take what you like!",
        "languages": {
            "Nix": 103689,
            "Emacs Lisp": 62220,
            "Common Lisp": 5483,
            "Shell": 2559,
            "Python": 737,
            "SCSS": 375
        }
    },
    {
        "name": "nix-tests",
        "description": "A scratchpad for small experimental things I am doing with Nix.",
        "languages": {
            "Nix": 27333,
            "C++": 5180,
            "Haskell": 1242,
            "C": 105
        }
    },
    {
        "name": "dotfiles",
        "description": "macOS + nix + home-manager + yabai + zsh + zellij + neovim",
        "languages": {
            "Nix": 40686,
            "Shell": 3127
        }
    },
    {
        "name": "evil-nix",
        "description": "A Nix library to download files from the internet without requiring a hash",
        "languages": {
            "Nix": 19991
        }
    },
    {
        "name": "nix-stable-diffusion",
        "description": "Flake for running SD on NixOS",
        "languages": {
            "Nix": 58543,
            "Shell": 3370
        }
    },
    {
        "name": "NixOS-DNS",
        "description": "Manage your dns zones with NixOS",
        "languages": {
            "Nix": 64691
        }
    },
    {
        "name": "typelevel-nix",
        "description": "Development tools for Typelevel projects",
        "languages": {
            "Nix": 5030,
            "Scala": 909
        }
    },
    {
        "name": "vuizvui",
        "description": "Nix(OS) expressions used by the OpenLab and its members",
        "languages": {
            "Nix": 620404,
            "Rust": 79266,
            "C": 39617,
            "Dhall": 32953,
            "Python": 32670,
            "Shell": 14876,
            "Haskell": 13111,
            "JavaScript": 10165,
            "C#": 8040,
            "Roff": 4539,
            "C++": 2925,
            "Makefile": 1006
        }
    },
    {
        "name": "nix-homebrew",
        "description": "Homebrew installation manager for nix-darwin",
        "languages": {
            "Nix": 19428,
            "Shell": 11735
        }
    },
    {
        "name": "rc",
        "description": "Structured system configuration (I moved from NixOS to GuixSD)",
        "languages": {
            "Nix": 677366,
            "Python": 5351,
            "Shell": 4839,
            "Emacs Lisp": 2956,
            "Xonsh": 1221
        }
    },
    {
        "name": "napalm",
        "description": "Support for building npm packages in Nix and lightweight npm registry [maintainer @jtojnar]",
        "languages": {
            "Nix": 30830,
            "Haskell": 13856,
            "JavaScript": 4969
        }
    },
    {
        "name": "nix-config",
        "description": "\u2744\ufe0f My nix config and dotfiles",
        "languages": {
            "Nix": 376519,
            "Shell": 15244,
            "Rust": 5836,
            "Nu": 1074
        }
    },
    {
        "name": "ruby-nix",
        "description": "Generates reproducible ruby/bundler app environment with Nix",
        "languages": {
            "Nix": 37791,
            "Ruby": 24038,
            "HTML": 5344,
            "CSS": 721,
            "Shell": 131,
            "JavaScript": 63
        }
    },
    {
        "name": "nix-openwrt-imagebuilder",
        "description": "Build OpenWRT images in Nix derivations",
        "languages": {
            "Nix": 42950298
        }
    },
    {
        "name": "dns.nix",
        "description": "A Nix DSL for DNS zone files [maintainers=@raitobezarius @kirelagin @Tom-Hubrecht]",
        "languages": {
            "Nix": 29931
        }
    },
    {
        "name": "hs-nix-template",
        "description": "A Haskell project template that uses Nix and comes with cabal-install, ghcid, ormolu, haskell-language-server and more.",
        "languages": {
            "Nix": 7046,
            "Python": 561,
            "Haskell": 537,
            "Shell": 197
        }
    },
    {
        "name": "awesome-computercraft",
        "description": "Useful libraries, programs, literature, and mods for ComputerCraft and its forks.",
        "languages": {
            "Nix": 971,
            "Just": 552
        }
    },
    {
        "name": "nixpkgs-ruby",
        "description": "A Nix repository with all Ruby versions being kept up-to-date automatically",
        "languages": {
            "Nix": 24617,
            "JavaScript": 8307,
            "Ruby": 76
        }
    },
    {
        "name": "nur-packages-template",
        "description": "A template for NUR repositories: [maintainer=@fgaz] ",
        "languages": {
            "Nix": 3976
        }
    },
    {
        "name": "stack2nix",
        "description": "Generate nix expressions for Haskell projects",
        "languages": {
            "Nix": 1731035,
            "Haskell": 22093,
            "Shell": 2424
        }
    },
    {
        "name": "hive",
        "description": "The secretly open NixOS-Society",
        "languages": {
            "Nix": 31983,
            "Shell": 228
        }
    },
    {
        "name": "nix-npm-buildpackage",
        "description": "Build nix packages that use npm/yarn",
        "languages": {
            "Nix": 14550,
            "JavaScript": 3818
        }
    },
    {
        "name": "selfhostblocks",
        "description": "Building blocks for self-hosting with battery included.",
        "languages": {
            "Nix": 286662
        }
    },
    {
        "name": "NixVirt",
        "description": "LibVirt domain management for Nix",
        "languages": {
            "Nix": 58060,
            "Python": 18741
        }
    },
    {
        "name": "ptyx",
        "description": "A type-system for Nix",
        "languages": {
            "Nix": 2023570,
            "Haskell": 58431
        }
    },
    {
        "name": "opam-nix",
        "description": "Turn opam-based OCaml projects into Nix derivations",
        "languages": {
            "Nix": 82158,
            "Shell": 353
        }
    },
    {
        "name": "declarative-flatpak",
        "description": null,
        "languages": {
            "Nix": 26302
        }
    },
    {
        "name": "nix-config",
        "description": "Configuration for NixOS and user home (dot files).",
        "languages": {
            "Nix": 98036,
            "CSS": 1472,
            "Shell": 165,
            "Emacs Lisp": 43
        }
    },
    {
        "name": "nix-config",
        "description": "NixOS/NixOS-WSL/nix-darwin configuration using Nix Flakes and flake-parts",
        "languages": {
            "Nix": 74971,
            "CSS": 3569,
            "Lua": 1888
        }
    },
    {
        "name": "StarRailGrubThemes",
        "description": "A pack of GRUB2 themes for Honkai: Star Rail",
        "languages": {
            "Nix": 2488,
            "Shell": 295
        }
    },
    {
        "name": "flakebox",
        "description": "Flakebox is to your Rust project dev environment, what NixOS is to your OS, or home-manager to your home directory.",
        "languages": {
            "Nix": 97336,
            "Rust": 10563,
            "Shell": 9530,
            "Just": 2583
        }
    },
    {
        "name": "neovim-flake",
        "description": "A highly modular, extensible and distro-agnostic Neovim distribution for Nix/NixOS.",
        "languages": {
            "Nix": 385629
        }
    },
    {
        "name": "floco",
        "description": "Using Nix to put NPM and Yarn in a coffin",
        "languages": {
            "Nix": 862668,
            "Shell": 175709,
            "C++": 27492,
            "JavaScript": 2492,
            "TypeScript": 329
        }
    },
    {
        "name": "nix-std",
        "description": "no-nixpkgs standard library for the nix expression language",
        "languages": {
            "Nix": 183592
        }
    },
    {
        "name": "universal-layout",
        "description": "\u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u0430\u044f \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0430\u044f \u0438 \u0440\u0443\u0441\u0441\u043a\u0430\u044f \u0440\u0430\u0441\u043a\u043b\u0430\u0434\u043a\u0430 \u0434\u043b\u044f Windows, Linux \u0438 macOS",
        "languages": {
            "Nix": 488
        }
    },
    {
        "name": "nixpkgs-esp-dev",
        "description": "Nix flake and overlay for ESP8266 and ESP32 development.",
        "languages": {
            "Nix": 20373,
            "Shell": 777
        }
    },
    {
        "name": "infra",
        "description": "nix-community infrastructure [maintainer=@zowoq]",
        "languages": {
            "Nix": 76805,
            "Python": 52586,
            "HCL": 10942,
            "Shell": 55
        }
    },
    {
        "name": "config",
        "description": "A collection of machine configurations, expressed in Nix",
        "languages": {
            "Nix": 81448,
            "CSS": 12782
        }
    },
    {
        "name": "fuel.nix",
        "description": "A Nix flake for the Fuel Labs ecosystem.",
        "languages": {
            "Nix": 1319371,
            "Shell": 9120
        }
    },
    {
        "name": "upcast",
        "description": "Abandonware",
        "languages": {
            "Nix": 108328,
            "Haskell": 95274,
            "Shell": 5128,
            "Makefile": 296
        }
    },
    {
        "name": "nix-configs",
        "description": "My Nix{OS} configuration files",
        "languages": {
            "Nix": 252166,
            "Emacs Lisp": 16246,
            "Shell": 6291,
            "Python": 4161,
            "YASnippet": 228
        }
    },
    {
        "name": "network",
        "description": "Home Network",
        "languages": {
            "Nix": 286811,
            "HTML": 139528,
            "CSS": 6431,
            "Shell": 3956,
            "Lua": 701
        }
    },
    {
        "name": "bundlers",
        "description": null,
        "languages": {
            "Nix": 11545
        }
    },
    {
        "name": "dhall-nix",
        "description": "This repository has moved to https://github.com/dhall-lang/dhall-haskell/tree/master/dhall-nix",
        "languages": {
            "Nix": 35339,
            "Haskell": 20823
        }
    },
    {
        "name": "vgo2nix",
        "description": "Convert go.mod files to nixpkgs buildGoPackage compatible deps.nix files [maintainer=@adisbladis]",
        "languages": {
            "Nix": 15197,
            "Go": 9708,
            "Makefile": 54
        }
    },
    {
        "name": "dotfiles",
        "description": ":house: Procrastinating never felt this productive",
        "languages": {
            "Nix": 128618,
            "Lua": 91042,
            "Python": 31934,
            "Shell": 9555,
            "CSS": 9469,
            "Vim Script": 4196
        }
    },
    {
        "name": "nix-overlays",
        "description": "OCaml-focused, custom nix-overlays",
        "languages": {
            "Nix": 245315,
            "JavaScript": 4547,
            "Shell": 1591
        }
    },
    {
        "name": "process-compose-flake",
        "description": "A `flake-parts` module to spin up processes for development by leveraging `process-compose`",
        "languages": {
            "Nix": 20985
        }
    },
    {
        "name": "nixos-rk3588",
        "description": "Minimal NixOS running on RK3588/RK3588s based SBC(Orange Pi 5 Plus, Orange Pi 5, Rock 5A, etc)",
        "languages": {
            "Nix": 37615
        }
    },
    {
        "name": "composer2nix",
        "description": "Generate Nix expressions to build PHP composer packages",
        "languages": {
            "Nix": 42130,
            "PHP": 33102,
            "Shell": 818
        }
    },
    {
        "name": "nix-rice",
        "description": "A library to functionally define your configuration and theme (rice) with Nix",
        "languages": {
            "Nix": 75217
        }
    },
    {
        "name": "nixos",
        "description": "My personal NixOS infrastructure",
        "languages": {
            "Nix": 241372,
            "Mustache": 4227,
            "CSS": 2325,
            "Lua": 265
        }
    },
    {
        "name": "dotfiles-nixos",
        "description": "source drop as reference for others on how to setup nixos and share configs between multiple machines",
        "languages": {
            "Nix": 50469
        }
    },
    {
        "name": "nixos-config",
        "description": "My NixOS/Nix-Darwin + home-manager configs",
        "languages": {
            "Nix": 325973,
            "Just": 7097,
            "Shell": 677
        }
    },
    {
        "name": "dotfiles-nix",
        "description": "Comprehensive configurations of my NixOS workstations and home server.",
        "languages": {
            "Nix": 46634,
            "Shell": 4327,
            "Python": 1116
        }
    },
    {
        "name": "dotfiles",
        "description": "My setup",
        "languages": {
            "Nix": 93573,
            "Emacs Lisp": 13314,
            "CSS": 1910,
            "Shell": 1732
        }
    },
    {
        "name": "nix-cookbook",
        "description": "A cookbook of snippets that show you how you can accomplish common tasks using the Nix expression language",
        "languages": {
            "Nix": 5761
        }
    },
    {
        "name": "nixos-raspberry-pi-cluster",
        "description": "A user-guide to create a Raspberry Pi (3B+, 4) cluster under NixOS and managed by NixOps",
        "languages": {
            "Nix": 13641
        }
    },
    {
        "name": "nixconfig",
        "description": "My NixOS config",
        "languages": {
            "Nix": 238788,
            "Emacs Lisp": 14909,
            "Shell": 5254,
            "Makefile": 1891
        }
    },
    {
        "name": "nixos-riscv64",
        "description": "NixOS on the HiFive Unmatched",
        "languages": {
            "Nix": 34434,
            "Shell": 1002
        }
    },
    {
        "name": "nixpkgs-unfree",
        "description": "nixpkgs with the unfree bits enabled",
        "languages": {
            "Nix": 9492,
            "Shell": 2228
        }
    },
    {
        "name": "nixarr",
        "description": "The Media Server Nixos Module",
        "languages": {
            "Nix": 76194
        }
    },
    {
        "name": "dotfiles",
        "description": "well-tailored NixOS & nix-darwin dotfiles",
        "languages": {
            "Nix": 68136,
            "Emacs Lisp": 27347,
            "HCL": 3461,
            "Haskell": 446,
            "Shell": 238
        }
    },
    {
        "name": "dotfield",
        "description": "All I see is little dots \u2013 some are smeared, and some are spots.",
        "languages": {
            "Nix": 428214,
            "Shell": 185045,
            "Nushell": 28246,
            "Just": 7937,
            "CSS": 5161,
            "Lua": 3809,
            "Emacs Lisp": 185
        }
    },
    {
        "name": "homelab",
        "description": "Configuration management for Matt Layher's machines. MIT Licensed.",
        "languages": {
            "Nix": 51342,
            "Go": 9473,
            "Makefile": 388
        }
    },
    {
        "name": "pnpm2nix",
        "description": "Load pnpm lock files into nix :) [maintainer=@adisbladis] ",
        "languages": {
            "Nix": 35918,
            "Python": 1690,
            "JavaScript": 1476,
            "Makefile": 126
        }
    },
    {
        "name": "nix-config",
        "description": "Configuration files for my NixOS and nix-darwin machines",
        "languages": {
            "Nix": 149273,
            "Shell": 7980,
            "Python": 7529,
            "CSS": 399
        }
    },
    {
        "name": "ethereum.nix",
        "description": "Nix packages and NixOS modules for the Ethereum ecosystem. [maintainers=@aldoborrero,@brianmcgee,@selfuryon]",
        "languages": {
            "Nix": 268142,
            "Shell": 1468
        }
    },
    {
        "name": "device-config",
        "description": "Experimenting with NixOS on a Legion Go",
        "languages": {
            "Nix": 11378
        }
    },
    {
        "name": "nix-buildproxy",
        "description": "Providing reproducible HTTP/HTTPS responders to builds that just can not live without",
        "languages": {
            "Nix": 5735,
            "Python": 3840,
            "Shell": 343
        }
    },
    {
        "name": "dotfiles",
        "description": "My personal dotfiles",
        "languages": {
            "Nix": 38218,
            "Shell": 3388
        }
    },
    {
        "name": "nixkell",
        "description": "A simple Nix-Haskell skeleton",
        "languages": {
            "Nix": 13059,
            "Shell": 1243,
            "Haskell": 164
        }
    },
    {
        "name": "nixos-cosmic",
        "description": "Flake for testing COSMIC on NixOS",
        "languages": {
            "Nix": 62187,
            "Shell": 2976
        }
    },
    {
        "name": "nixos-rocm",
        "description": "NixOS support for the ROCm graphics stack (rocm.github.io)",
        "languages": {
            "Nix": 122587,
            "Perl": 5076
        }
    },
    {
        "name": "nix-installers",
        "description": "Nix installers for legacy distributions (rpm & deb & pacman) [maintainer=@adisbladis]",
        "languages": {
            "Nix": 6822,
            "Shell": 1135,
            "Makefile": 183
        }
    },
    {
        "name": "nix-kubernetes",
        "description": "Kubernetes deployment manager written in nix (DEPRECATED for https://github.com/xtruder/kubenix)",
        "languages": {
            "Nix": 215302,
            "JavaScript": 26320
        }
    },
    {
        "name": "scalpel",
        "description": "Minimally invasive safe secret provisioning to Nix-generated service config files",
        "languages": {
            "Nix": 8686
        }
    },
    {
        "name": "nix-profiles",
        "description": "Configuration profiles for x-truder networks",
        "languages": {
            "Nix": 152172,
            "CSS": 5215,
            "Shell": 4795,
            "JavaScript": 269
        }
    },
    {
        "name": "shanocast",
        "description": "Google Chromecast Reciever",
        "languages": {
            "Nix": 1956
        }
    },
    {
        "name": "dotfiles",
        "description": "dotfiles (home-manager), nixOS, and nix-darwin configurations",
        "languages": {
            "Nix": 49005,
            "Lua": 37137,
            "Shell": 15957,
            "Scheme": 1085
        }
    },
    {
        "name": "nixel",
        "description": "Parser for the Nix Expressions Language",
        "languages": {
            "Nix": 4385400,
            "C++": 750693,
            "Rust": 70086,
            "Yacc": 15708,
            "Lex": 5453,
            "Shell": 361
        }
    },
    {
        "name": "nix-for-numbskulls",
        "description": "Tutorials and the like.",
        "languages": {
            "Nix": 4141,
            "Shell": 223,
            "TeX": 179
        }
    },
    {
        "name": "underhood",
        "description": "UnderHood is a code browsing interface backed by Kythe indices.",
        "languages": {
            "Nix": 463735,
            "Vue": 49099,
            "Haskell": 45157,
            "CSS": 13518,
            "JavaScript": 10076,
            "Starlark": 7641,
            "Awk": 2153,
            "HTML": 776,
            "Dockerfile": 718,
            "Shell": 392
        }
    },
    {
        "name": "neovim-flake",
        "description": "Nix flake for Neovim & Scala Metals",
        "languages": {
            "Nix": 120269
        }
    },
    {
        "name": "nix-dev-home",
        "description": "A `home-manager` template providing useful tools & settings for Nix-based development (macOS & Linux supported)",
        "languages": {
            "Nix": 8561,
            "Just": 665
        }
    },
    {
        "name": "dotfiles",
        "description": "Nix configuration and settings",
        "languages": {
            "Nix": 424249,
            "Lua": 21267,
            "Shell": 13873,
            "JavaScript": 8698,
            "HCL": 4401,
            "AppleScript": 666,
            "Haskell": 349,
            "AutoHotkey": 334,
            "Scheme": 224
        }
    },
    {
        "name": "nixos-config",
        "description": "jnsgruk's NixOS configuration flake \u2744\ufe0f",
        "languages": {
            "Nix": 102660,
            "Shell": 3956
        }
    },
    {
        "name": "macos-builder",
        "description": "Bootstrap a Linux build VM on macOS",
        "languages": {
            "Nix": 6498
        }
    },
    {
        "name": "ghcide-nix",
        "description": "Nix installation for ghcide",
        "languages": {
            "Nix": 8194
        }
    },
    {
        "name": "mk-darwin-system",
        "description": "Small Nix utility to create an M1 aarch64-darwin (nixFlakes + nix-darwin + home-manager) system.",
        "languages": {
            "Nix": 16865,
            "Makefile": 970
        }
    },
    {
        "name": "nixos-config",
        "description": "Configuration of my machines (main development happens at https://git.chvp.be/chvp/nixos-config these days)",
        "languages": {
            "Nix": 195448,
            "Emacs Lisp": 12301,
            "Python": 2360,
            "Shell": 1439
        }
    },
    {
        "name": "nixos-config",
        "description": null,
        "languages": {
            "Nix": 258119,
            "Lua": 18897,
            "CSS": 9324,
            "HTML": 1930
        }
    },
    {
        "name": "pyproject.nix",
        "description": "A collection of Nix utilities to work with Python projects [maintainer=@adisbladis]",
        "languages": {
            "Nix": 241022,
            "Procfile": 102
        }
    },
    {
        "name": "homelab",
        "description": null,
        "languages": {
            "Nix": 100861,
            "Emacs Lisp": 97038,
            "Go": 10183,
            "Shell": 8863
        }
    },
    {
        "name": "dotfiles",
        "description": "\ud83c\udfe0",
        "languages": {
            "Nix": 141753,
            "Emacs Lisp": 20281,
            "Makefile": 8079,
            "Shell": 7594,
            "Lua": 4561,
            "CSS": 3644,
            "YASnippet": 190
        }
    },
    {
        "name": "liminix",
        "description": "Mirror of gti.telent.net:dan/liminix",
        "languages": {
            "Nix": 296519,
            "Fennel": 31820,
            "Lua": 21455,
            "C": 12421,
            "Shell": 11831,
            "Python": 11017,
            "Makefile": 397
        }
    },
    {
        "name": "bionix",
        "description": "Functional highly reproducible bioinformatics pipelines",
        "languages": {
            "Nix": 137983,
            "Zig": 1720
        }
    },
    {
        "name": "debs",
        "description": null,
        "languages": {
            "Nix": 5555
        }
    },
    {
        "name": "snowflake",
        "description": "NixOS Config(s) - Mirrored from https://git.flake.sh/notohh/snowflake",
        "languages": {
            "Nix": 176445,
            "JavaScript": 11500,
            "Nu": 9867,
            "Lua": 4964,
            "Nushell": 1087,
            "SCSS": 560
        }
    },
    {
        "name": "engineering-careers",
        "description": "\u682a\u5f0f\u4f1a\u793eHERP\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u5411\u3051\u63a1\u7528\u8cc7\u6599",
        "languages": {
            "Nix": 485,
            "Makefile": 105
        }
    },
    {
        "name": "homelab",
        "description": "Because at home you keep devopsing",
        "languages": {
            "Nix": 45269,
            "Shell": 5622
        }
    },
    {
        "name": "vidtracker",
        "description": "A small, \"full-stack\" Purescript \"video tracker\" for me to track what shows I've watched locally",
        "languages": {
            "Nix": 46601,
            "PureScript": 34015,
            "JavaScript": 1252,
            "HTML": 1239,
            "Dhall": 1173,
            "Makefile": 357
        }
    },
    {
        "name": "nixos-config",
        "description": "My NixOS configurations.",
        "languages": {
            "Nix": 124552,
            "Shell": 27071,
            "Python": 14782,
            "Rust": 7179,
            "Emacs Lisp": 4114,
            "HCL": 2701,
            "Tcl": 425,
            "Makefile": 189
        }
    },
    {
        "name": "NixNeovimPlugins",
        "description": "Makes all neovim plugins available in nix (Auto updated)",
        "languages": {
            "Nix": 602536,
            "Python": 50589,
            "Shell": 1413
        }
    },
    {
        "name": "NixOS-QChem",
        "description": "Nix expressions for HPC/Quantum chemistry software packages",
        "languages": {
            "Nix": 216523,
            "Shell": 7253,
            "Python": 895,
            "MATLAB": 769
        }
    },
    {
        "name": "purs-nix",
        "description": "Manage your PureScript projects with Nix!",
        "languages": {
            "Nix": 338534,
            "PureScript": 3819,
            "JavaScript": 608,
            "Shell": 76
        }
    },
    {
        "name": "dotfiles",
        "description": null,
        "languages": {
            "Nix": 28227,
            "Emacs Lisp": 21731,
            "Haskell": 5717,
            "Shell": 2534
        }
    },
    {
        "name": "nixos-config",
        "description": "my nixos/nix-darwin configurations",
        "languages": {
            "Nix": 116500,
            "Shell": 93326,
            "Lua": 34163
        }
    },
    {
        "name": "server-optimised-nixos",
        "description": null,
        "languages": {
            "Nix": 10502,
            "Swift": 5779,
            "Makefile": 332,
            "Shell": 72
        }
    },
    {
        "name": "aarch64-build-box",
        "description": "Config for the Community aarch64 NixOS box [maintainer=@grahamc]",
        "languages": {
            "Nix": 21582,
            "Shell": 7146
        }
    },
    {
        "name": "flakes",
        "description": "the deterministic",
        "languages": {
            "Nix": 111654,
            "HCL": 9458,
            "Lua": 4203,
            "TypeScript": 1372,
            "jq": 1213,
            "CSS": 1113
        }
    },
    {
        "name": "reflex-project-skeleton",
        "description": null,
        "languages": {
            "Nix": 577,
            "Shell": 487,
            "Haskell": 389
        }
    },
    {
        "name": "kde2nix",
        "description": "Provisional, experimental Plasma 6 (and friends) pre-release packaging [maintainer=@K900]",
        "languages": {
            "Nix": 126774,
            "Python": 12174,
            "Shell": 6820
        }
    },
    {
        "name": "mission-control",
        "description": "A `flake-parts` module for your Nix devshell scripts",
        "languages": {
            "Nix": 9626
        }
    },
    {
        "name": "ThemeNix",
        "description": "Theme your NixOS configuration consistently.",
        "languages": {
            "Nix": 143682,
            "Nushell": 2072
        }
    },
    {
        "name": "nixos-modded-minecraft-servers",
        "description": "A NixOS module to run multiple modded minecraft servers.",
        "languages": {
            "Nix": 37321,
            "Shell": 1526
        }
    },
    {
        "name": "solver",
        "description": "proof first, evm specific smt solver",
        "languages": {
            "Nix": 1663,
            "Rust": 1074,
            "Shell": 165,
            "SMT": 112
        }
    },
    {
        "name": "nix-build-ghc-android",
        "description": "ghc-android build using nix",
        "languages": {
            "Nix": 5983120,
            "Shell": 1119
        }
    },
    {
        "name": "nix-to-kubernetes",
        "description": "An example of deploying Nix-built Docker images to Kubernetes.Not act",
        "languages": {
            "Nix": 2943,
            "HCL": 2618,
            "Go": 1657
        }
    },
    {
        "name": "nix-data-science",
        "description": "Standard set of packages and overlays for data-scientists [maintainer=@tbenst]",
        "languages": {
            "Nix": 7841
        }
    },
    {
        "name": "nix-config",
        "description": "Personal NixOS configuration",
        "languages": {
            "Nix": 400220,
            "Shell": 168857,
            "Lua": 95197,
            "HTML": 68611,
            "JavaScript": 25918,
            "C": 25584,
            "CSS": 17117,
            "Python": 8378,
            "Roff": 80
        }
    },
    {
        "name": "mach-nix-template",
        "description": "Simple and straight-forward way to create python environments using PyPi in nix",
        "languages": {
            "Nix": 1744
        }
    },
    {
        "name": "hnix-lsp",
        "description": "Language Server Protocol for Nix",
        "languages": {
            "Nix": 1795229,
            "Haskell": 7484
        }
    },
    {
        "name": "nix-config",
        "description": "A collection of my system configs and dotfiles",
        "languages": {
            "Nix": 172873,
            "Shell": 35784,
            "HTML": 714
        }
    },
    {
        "name": "dotfiles",
        "description": "My NixOS dotfiles",
        "languages": {
            "Nix": 83082,
            "Vim Script": 5697,
            "Clojure": 3149,
            "CSS": 1839,
            "Shell": 1631
        }
    },
    {
        "name": "docker-ngrok",
        "description": "docker images for the ngrok agent",
        "languages": {
            "Nix": 6505,
            "Shell": 769
        }
    },
    {
        "name": "dotfiles",
        "description": "NixOS Configuration powered by Flakes + Hive \u2744\ufe0f ",
        "languages": {
            "Nix": 128743,
            "Lua": 35879,
            "CSS": 7021
        }
    },
    {
        "name": "nix-examples",
        "description": "Showcase of Nix usage for various technologies",
        "languages": {
            "Nix": 251477,
            "Shell": 1299,
            "Dockerfile": 856
        }
    },
    {
        "name": "shoji-nix",
        "description": "Manage your SSH keys with Nix",
        "languages": {
            "Nix": 6494
        }
    },
    {
        "name": "khanelinix",
        "description": "Nix configuration for my systems supporting macOS, NixOS, and WSL. ",
        "languages": {
            "Nix": 557471,
            "CSS": 218714,
            "Shell": 204562,
            "Lua": 66886,
            "C": 50260,
            "SCSS": 6779,
            "Python": 6578,
            "Less": 5679,
            "Makefile": 1046,
            "AppleScript": 751
        }
    },
    {
        "name": "nixpkgs.lib",
        "description": "nixpkgs lib for cheap instantiation [maintainer=@github-action] (with initial help from @blaggacao)",
        "languages": {
            "Nix": 728134,
            "Shell": 108880,
            "Awk": 1845
        }
    },
    {
        "name": "setup.nix",
        "description": "Nixpkgs based build tools for declarative Python packages [maintainer=@datakurre]",
        "languages": {
            "Nix": 36153,
            "Python": 906,
            "Shell": 779,
            "Go": 345
        }
    },
    {
        "name": "rien",
        "description": "Predictable Haskell development environments with Cabal and Nix.",
        "languages": {
            "Nix": 6915,
            "Shell": 197
        }
    },
    {
        "name": "flake-starter-config",
        "description": null,
        "languages": {
            "Nix": 772
        }
    },
    {
        "name": "flake-templates",
        "description": "A collection of barebone Nix shells for starting a project, provided as flake templates",
        "languages": {
            "Nix": 16239,
            "Just": 193
        }
    },
    {
        "name": "cardano-ops",
        "description": "NixOps deployment configuration for IOHK/Cardano devops ",
        "languages": {
            "Nix": 264245,
            "Shell": 123841,
            "HTML": 74432,
            "Crystal": 43675,
            "jq": 10508,
            "Haskell": 6256,
            "Makefile": 379
        }
    },
    {
        "name": "dada",
        "description": "A total recursion scheme library for Dhall",
        "languages": {
            "Nix": 19129,
            "Dhall": 15488,
            "Haskell": 2250,
            "Emacs Lisp": 241,
            "Shell": 108
        }
    },
    {
        "name": "holochain-infra",
        "description": null,
        "languages": {
            "Nix": 63756,
            "HCL": 10019,
            "Shell": 627
        }
    },
    {
        "name": "nixos-pxe-installer",
        "description": "A set of modules to perform a fully automated installation of a customised NixOS system",
        "languages": {
            "Nix": 30448,
            "Shell": 8085
        }
    },
    {
        "name": "nixos-configuration",
        "description": "Personal NixOS configuration",
        "languages": {
            "Nix": 48660
        }
    },
    {
        "name": "scribbles",
        "description": "Some notes on various topics.",
        "languages": {
            "Nix": 30556,
            "Ruby": 129
        }
    },
    {
        "name": "nixhelm",
        "description": "This is a collection of helm charts in a nix-digestable format.",
        "languages": {
            "Nix": 10531,
            "Python": 6324
        }
    },
    {
        "name": "nixos-config",
        "description": "My flakes-powered NixOS configuration",
        "languages": {
            "Nix": 100598,
            "Shell": 9383
        }
    },
    {
        "name": "dotfiles",
        "description": "No place like ~. Nix. All. The. Things.",
        "languages": {
            "Nix": 49229,
            "Shell": 2814
        }
    },
    {
        "name": "home",
        "description": "My home directory: Nix config, dotfiles, scripts, etc.",
        "languages": {
            "Nix": 32435
        }
    },
    {
        "name": "nix-hour",
        "description": "Questions for the weekly Nix Hour",
        "languages": {
            "Nix": 118774,
            "Lua": 2115,
            "Shell": 950,
            "Makefile": 8
        }
    },
    {
        "name": "flake-schemas",
        "description": "Schemas for common flake output types",
        "languages": {
            "Nix": 8532
        }
    },
    {
        "name": "dotfiles",
        "description": "Contents of my ~/.config",
        "languages": {
            "Nix": 60325,
            "Vim Script": 4976,
            "Shell": 3070
        }
    },
    {
        "name": "nixsys",
        "description": "My NixOS system configuration.",
        "languages": {
            "Nix": 813644,
            "CSS": 22965,
            "Python": 20305,
            "Shell": 3451,
            "SCSS": 29
        }
    },
    {
        "name": "nixpkgs",
        "description": "My \"Home\" \ud83c\udfda with Nix \u2744\ufe0f \u019b ",
        "languages": {
            "Nix": 261164,
            "Lua": 59959,
            "Vim Script": 22330,
            "Shell": 1472
        }
    },
    {
        "name": "vault-secrets",
        "description": "NixOS tooling for Hashicorp Vault",
        "languages": {
            "Nix": 33324,
            "Python": 907,
            "Shell": 823
        }
    },
    {
        "name": "dotfiles.nix",
        "description": "Neovim configuration for TheAltF4Stream as a plugin.",
        "languages": {
            "Nix": 28410,
            "Just": 2503
        }
    },
    {
        "name": "nix-nomad",
        "description": "HashiCorp Nomad job definitions in Nix",
        "languages": {
            "Nix": 133576,
            "Go": 12146
        }
    },
    {
        "name": "nix_cmake_example",
        "description": "An example with nix: How to automatically and reproducibly build and integration-test a database C++ app in 60 different build-configurations (library exchange/compiler exchange/static-nonstatic)",
        "languages": {
            "Nix": 14510,
            "C++": 6015,
            "Python": 1508,
            "CMake": 1113
        }
    },
    {
        "name": "iohk-nix",
        "description": "nix scripts shared across projects",
        "languages": {
            "Nix": 138108,
            "Haskell": 29481,
            "Python": 8608,
            "Crystal": 6299,
            "Shell": 1026
        }
    },
    {
        "name": "nix-anarchy",
        "description": "Smash the state. \u24b6",
        "languages": {
            "Nix": 675
        }
    },
    {
        "name": "runix",
        "description": null,
        "languages": {
            "Nix": 144764,
            "Rust": 71925,
            "Shell": 3370,
            "Dockerfile": 339
        }
    },
    {
        "name": "snabblab-nixos",
        "description": "NixOS configuration for the Snabb Lab",
        "languages": {
            "Nix": 43281
        }
    },
    {
        "name": "systemd-vaultd",
        "description": "Provide access to vault secrets to systemd services",
        "languages": {
            "Nix": 21428,
            "Go": 17997,
            "Python": 7427,
            "HCL": 903,
            "Shell": 714,
            "Makefile": 631,
            "Procfile": 404,
            "Just": 290
        }
    },
    {
        "name": "world",
        "description": "NixOS configuration",
        "languages": {
            "Nix": 320782,
            "Nushell": 16120,
            "Lua": 12927,
            "HCL": 5923,
            "Shell": 4594,
            "Just": 1882
        }
    },
    {
        "name": "nixos-configuration",
        "description": "Much better than a .dotfiles repo",
        "languages": {
            "Nix": 40284,
            "Emacs Lisp": 25270,
            "Haskell": 3761,
            "Shell": 3388,
            "Vim Script": 544
        }
    },
    {
        "name": "nix-remarkable",
        "description": "Nix expressions for tools for the reMarkable tablet",
        "languages": {
            "Nix": 19065
        }
    },
    {
        "name": "triton",
        "description": "Triton Operating System",
        "languages": {
            "Nix": 6740090,
            "Shell": 469375,
            "Perl": 166382,
            "Python": 36406,
            "C": 19566,
            "Ruby": 6523,
            "XSLT": 6371,
            "CSS": 1837,
            "CMake": 1035,
            "JavaScript": 936,
            "sed": 794,
            "Emacs Lisp": 673,
            "C++": 654,
            "Dockerfile": 553,
            "Go": 373
        }
    },
    {
        "name": "js2nix",
        "description": "Node.js modules installation using Nix",
        "languages": {
            "Nix": 308877,
            "JavaScript": 42035
        }
    },
    {
        "name": "erosanix",
        "description": "My main NixOS/Nix Flakes repository",
        "languages": {
            "Nix": 169007,
            "C++": 8761,
            "Shell": 6023,
            "Inno Setup": 1757
        }
    },
    {
        "name": "nixos-configurations",
        "description": null,
        "languages": {
            "Nix": 15364
        }
    },
    {
        "name": "nixlisp",
        "description": null,
        "languages": {
            "Nix": 16720,
            "Scheme": 8119,
            "Python": 5224,
            "Shell": 262
        }
    },
    {
        "name": "celun",
        "description": "The customizable embedded Linux using Nix.",
        "languages": {
            "Nix": 115577
        }
    },
    {
        "name": "nixcfg",
        "description": "Personal Nix/NixOS configuration files",
        "languages": {
            "Nix": 261556,
            "Shell": 116219,
            "Python": 63518,
            "HCL": 16980,
            "CSS": 12612,
            "Dockerfile": 8410,
            "Fennel": 6253,
            "Vim Script": 2400,
            "Emacs Lisp": 1813,
            "JavaScript": 287
        }
    },
    {
        "name": "real-world-devops-with-nix",
        "description": "An example project for building containers with Nix and deploying them to Kubernetes",
        "languages": {
            "Nix": 1987,
            "HCL": 1705,
            "Go": 478,
            "Makefile": 253
        }
    },
    {
        "name": "nix-hs-hello-windows",
        "description": "Cross compiling Hello World (haskell) to Windows using nix.",
        "languages": {
            "Nix": 5449,
            "Haskell": 67
        }
    },
    {
        "name": "nix-gitignore",
        "description": "superseded / unmaintained",
        "languages": {
            "Nix": 13258,
            "Shell": 1089
        }
    },
    {
        "name": "devour-flake",
        "description": "Devour all outputs in a Nix flake.",
        "languages": {
            "Nix": 3157,
            "Shell": 269
        }
    },
    {
        "name": "sbt-derivation",
        "description": "Nix library for building Scala sbt projects",
        "languages": {
            "Nix": 12568,
            "Shell": 11820,
            "Scala": 859
        }
    },
    {
        "name": "nomad-with-nix",
        "description": "Example of developing and deploying services with Nix and Nomad",
        "languages": {
            "Nix": 9187,
            "HCL": 5699,
            "Makefile": 2733,
            "Python": 1473,
            "Shell": 71
        }
    },
    {
        "name": "platform",
        "description": "Sailing smoothly on the cloud sea ",
        "languages": {
            "Nix": 2597,
            "Shell": 2289,
            "Makefile": 394
        }
    },
    {
        "name": "dotfiles",
        "description": "no passwords here ... I hope \ud83e\udd1e",
        "languages": {
            "Nix": 7400,
            "Shell": 3719
        }
    },
    {
        "name": "nixed",
        "description": "I've nixed any chance I have at human interaction by building this config",
        "languages": {
            "Nix": 207388,
            "Lua": 83215,
            "CSS": 2081,
            "JavaScript": 273
        }
    },
    {
        "name": "nixos-configs",
        "description": "@zachlatta's .dotfiles / NixOS configs",
        "languages": {
            "Nix": 39551,
            "Shell": 2580
        }
    },
    {
        "name": "nixlisp",
        "description": null,
        "languages": {
            "Nix": 4298
        }
    },
    {
        "name": "nixos-fhs-compat",
        "description": "LSB&FHS compatibility for NixOS. Intended for containers and VMs.",
        "languages": {
            "Nix": 6301
        }
    },
    {
        "name": "novault",
        "description": "ultra simple and secure vaultless password manager (beta)",
        "languages": {
            "Nix": 133254,
            "Rust": 33313
        }
    },
    {
        "name": "holochain-nixpkgs",
        "description": null,
        "languages": {
            "Nix": 450968,
            "Rust": 61593
        }
    },
    {
        "name": "neovitality",
        "description": null,
        "languages": {
            "Nix": 23744,
            "Lua": 9603,
            "Vim Script": 2175
        }
    },
    {
        "name": "nix-book",
        "description": "The Nix Package Manager",
        "languages": {
            "Nix": 1406
        }
    },
    {
        "name": "base16-zathura",
        "description": "base16 colors for zathura",
        "languages": {
            "Nix": 6676,
            "Mustache": 2207,
            "Makefile": 510
        }
    },
    {
        "name": "kalinix",
        "description": "A pentesting/CTF toolbox with the help of Nix",
        "languages": {
            "Nix": 3450,
            "Shell": 2546
        }
    },
    {
        "name": "dotfiles",
        "description": null,
        "languages": {
            "Nix": 227998,
            "Shell": 93307,
            "Vim Script": 10631,
            "Python": 4209
        }
    },
    {
        "name": "nixfiles",
        "description": "Nix configuration for the machines I manage.",
        "languages": {
            "Nix": 190883,
            "Python": 10761,
            "Shell": 3194,
            "PHP": 2549,
            "XSLT": 1064,
            "CSS": 347
        }
    },
    {
        "name": "kakapo",
        "description": "A Nix web bundler because why not",
        "languages": {
            "Nix": 5171,
            "Python": 4652
        }
    },
    {
        "name": "FSharpPacker",
        "description": "Packs FSX files into executable",
        "languages": {
            "Nix": 21768,
            "F#": 14841,
            "C#": 7937
        }
    },
    {
        "name": "easy-hls-nix",
        "description": "Easy Haskell Language Server tooling with Nix!",
        "languages": {
            "Nix": 9417,
            "Haskell": 265
        }
    },
    {
        "name": "nixos-config",
        "description": "My NixOS configuration files",
        "languages": {
            "Nix": 39457,
            "Shell": 1457,
            "C++": 1338
        }
    },
    {
        "name": "dotfiles",
        "description": "Personal config files for NixOS. See my other rices in the link below!",
        "languages": {
            "Nix": 51054,
            "JavaScript": 14309,
            "Lua": 4668,
            "Shell": 4436,
            "SCSS": 4295
        }
    },
    {
        "name": "nix-container-images",
        "description": "Write container images as NixOS machines",
        "languages": {
            "Nix": 63714,
            "Makefile": 308
        }
    },
    {
        "name": "tidalcycles.nix",
        "description": "A Nix flake for Tidal Cycles.",
        "languages": {
            "Nix": 9001
        }
    },
    {
        "name": "secrix",
        "description": null,
        "languages": {
            "Nix": 36636
        }
    },
    {
        "name": "HTMNIX",
        "description": "HTML for Nix to rule them all.",
        "languages": {
            "Nix": 5657,
            "Shell": 534
        }
    },
    {
        "name": "netboot.nix",
        "description": "Create full netboot images in 15 seconds.",
        "languages": {
            "Nix": 11083,
            "Shell": 620
        }
    },
    {
        "name": "authentik-nix",
        "description": "Nix flake with package, NixOS module and basic VM test for authentik. Trying to provide an alternative deployment mode to the officially supported docker-compose approach. Not affiliated with or officially supported by the authentik project [maintainer=@willibutz]",
        "languages": {
            "Nix": 33318
        }
    },
    {
        "name": "nixos-nvidia-vgpu",
        "description": "NixOS NVIDIA vGPU Module",
        "languages": {
            "Nix": 9442
        }
    },
    {
        "name": "nix",
        "description": "Efforts for packaging the Rust for Linux project with the Nix package manager",
        "languages": {
            "Nix": 24010
        }
    },
    {
        "name": "Julio",
        "description": "Julia embedded in Haskell",
        "languages": {
            "Nix": 1569,
            "Haskell": 784
        }
    },
    {
        "name": "deno2nix",
        "description": "Integrate Deno with Nix",
        "languages": {
            "Nix": 7975,
            "Shell": 30
        }
    },
    {
        "name": "dotfiles",
        "description": "I showed you my source code, pls respond",
        "languages": {
            "Nix": 21379,
            "PowerShell": 461,
            "Dockerfile": 241
        }
    },
    {
        "name": "snowflakeos-iso",
        "description": null,
        "languages": {
            "Nix": 5020
        }
    },
    {
        "name": "nixos-config",
        "description": "NixOS configurations for server and desktop systems, including user specific config. with Home Manager",
        "languages": {
            "Nix": 68635
        }
    },
    {
        "name": "workshops",
        "description": null,
        "languages": {
            "Nix": 3927,
            "Dockerfile": 496,
            "Shell": 160,
            "Haskell": 62
        }
    },
    {
        "name": "Neve",
        "description": "Neve is a Neovim configuration built with Nixvim, it allows you to use Nix language to manage Neovim plugins/options.",
        "languages": {
            "Nix": 93519
        }
    },
    {
        "name": "dotfiles",
        "description": "dotfiles and nixos system configuration",
        "languages": {
            "Nix": 102523,
            "Shell": 13629,
            "SCSS": 4733,
            "Makefile": 1469,
            "Emacs Lisp": 226,
            "Rust": 212,
            "Python": 78,
            "C++": 72
        }
    },
    {
        "name": "nix-binary-cache-proxy",
        "description": "An NGINX caching proxy to serve the cache.nixos.org binary cache from your local network, ready-to-deploy with nixops",
        "languages": {
            "Nix": 4011
        }
    },
    {
        "name": "nix-notes",
        "description": "A collection of short notes about Nix, each contributing to the same virtual machine image",
        "languages": {
            "Nix": 8330,
            "Shell": 2387,
            "Haskell": 727
        }
    },
    {
        "name": "nix-home-config",
        "description": "Nix configuration for my macOS laptop",
        "languages": {
            "Nix": 13023
        }
    },
    {
        "name": "Godot-Trello-Reporting-Tool",
        "description": "A tool to create Trello cards and add attachments from an in-game Godot interface.",
        "languages": {
            "Nix": 13596,
            "GDScript": 13399,
            "Python": 6209,
            "PHP": 6106
        }
    },
    {
        "name": "nix-wallpaper",
        "description": "A configurable wallpaper for nix systems",
        "languages": {
            "Nix": 9645,
            "Shell": 762
        }
    },
    {
        "name": "learning-nix",
        "description": "Freely licensed training material for the Nix expression language and ecosystem. Contact me to book on-site and remote training sessions",
        "languages": {
            "Nix": 5150,
            "Emacs Lisp": 2980,
            "Makefile": 452,
            "CSS": 417,
            "Dockerfile": 197
        }
    },
    {
        "name": "shab",
        "description": "the bash templating language",
        "languages": {
            "Nix": 2181,
            "Shell": 1349,
            "Dockerfile": 48
        }
    },
    {
        "name": "twist.nix",
        "description": "Build an entire Emacs configuration as a Nix package in a pure, reproducible way",
        "languages": {
            "Nix": 86071,
            "Just": 2905,
            "Emacs Lisp": 2448,
            "Shell": 2367
        }
    },
    {
        "name": "dotfiles",
        "description": "\u2744\ufe0f mi casa es tu casa",
        "languages": {
            "Nix": 96686,
            "Shell": 9297,
            "Lua": 8022,
            "Vim Script": 1946,
            "CSS": 1340
        }
    },
    {
        "name": "nix2vim",
        "description": "[WIP] Nix to Lua parser meant to be used for configuring neovim",
        "languages": {
            "Nix": 47577,
            "Lua": 1648
        }
    },
    {
        "name": "julia2nix",
        "description": "Generate Nix expressions for building a Julia depot with a set of packages",
        "languages": {
            "Nix": 7501,
            "Python": 5693,
            "Julia": 2554
        }
    },
    {
        "name": "import-cargo",
        "description": "A function for fetching the crates listed in a Cargo lock file",
        "languages": {
            "Nix": 4238
        }
    },
    {
        "name": "immutable-rice",
        "description": "Configuration of i3, urxvt, conky and rofi using the NixOS configuration",
        "languages": {
            "Nix": 26027
        }
    },
    {
        "name": "nix-does-not-guarantee-reproducibility",
        "description": null,
        "languages": {
            "Nix": 1553
        }
    },
    {
        "name": "nixconfig",
        "description": "My nixos config",
        "languages": {
            "Nix": 63970,
            "Emacs Lisp": 18320,
            "Python": 9079,
            "Talon": 7786,
            "Rust": 1887
        }
    },
    {
        "name": "microgram",
        "description": "ABANDONED",
        "languages": {
            "Nix": 185729,
            "Perl": 21583,
            "Shell": 10301,
            "Python": 7058,
            "Ruby": 563,
            "Haskell": 223
        }
    },
    {
        "name": "oracles-v2",
        "description": null,
        "languages": {
            "Nix": 286794,
            "Shell": 37043,
            "Python": 26333
        }
    },
    {
        "name": "backerei",
        "description": "Automated reward payment & account management for Tezos bakers.",
        "languages": {
            "Nix": 1809797,
            "Haskell": 70028,
            "Dockerfile": 2067,
            "Shell": 275,
            "Makefile": 226
        }
    },
    {
        "name": "nixos-config",
        "description": "NixOS configuration for my machines. This repository is deprecated, config now lives at https://cs.tvl.fyi/depot/-/tree/users/tazjin/nixos",
        "languages": {
            "Nix": 21960,
            "Shell": 988
        }
    },
    {
        "name": "Zicross",
        "description": "Nix Flake for cross-compiling and packaging for foreign systems",
        "languages": {
            "Nix": 26008,
            "CSS": 9208,
            "HTML": 2217,
            "Liquid": 1051
        }
    },
    {
        "name": "attractive-typst-resume",
        "description": "Attractive Typst Resume Template",
        "languages": {
            "Nix": 515,
            "Shell": 67
        }
    },
    {
        "name": "nix-templates",
        "description": "\u2744\ufe0f Nix flake templates for: \ud83e\udd80 Rust, \ud83e\udd96 Deno, \ud83d\udc0d Python and \ud83d\uddd2\ufe0f reveal.js among others",
        "languages": {
            "Nix": 27456,
            "Svelte": 6805,
            "Kotlin": 4926,
            "C": 2601,
            "Typst": 1821,
            "CSS": 1799,
            "JavaScript": 1646,
            "HTML": 1212,
            "Just": 656,
            "Python": 418,
            "TypeScript": 252,
            "CMake": 138,
            "Rust": 90,
            "TeX": 89,
            "C++": 82
        }
    },
    {
        "name": "nix-github-actions",
        "description": "A library to turn Nix Flake attribute sets into Github Actions matrices [maintainer=@adisbladis]",
        "languages": {
            "Nix": 3117,
            "Python": 1778
        }
    },
    {
        "name": ".nixconfig",
        "description": "NixOS configurations for my personal systems",
        "languages": {
            "Nix": 319686,
            "Shell": 95572,
            "Python": 34554,
            "Emacs Lisp": 30310,
            "CSS": 5992,
            "C++": 200,
            "Makefile": 194
        }
    },
    {
        "name": "nixos-riscv",
        "description": null,
        "languages": {
            "Nix": 18822
        }
    },
    {
        "name": "dotfiles",
        "description": "My dotfiles as a Nix flake",
        "languages": {
            "Nix": 295124,
            "Julia": 19084,
            "Shell": 14629,
            "Python": 3564
        }
    },
    {
        "name": "redoxpkgs",
        "description": "Cross-compile to Redox using Nix [maintainer=@aaronjanse]",
        "languages": {
            "Nix": 44117,
            "C": 129
        }
    },
    {
        "name": "nixos-config",
        "description": "My personal NixOS and home-manager configuration",
        "languages": {
            "Nix": 87601,
            "Python": 1973,
            "Shell": 1016
        }
    },
    {
        "name": "nix-phps",
        "description": "Repository of Nix expressions for old PHP versions",
        "languages": {
            "Nix": 62254
        }
    },
    {
        "name": "nix-dabei",
        "description": "An operating system generator, based on nixos, focused on installation",
        "languages": {
            "Nix": 23697,
            "Python": 3489,
            "Shell": 341
        }
    },
    {
        "name": "shadowsocks-websocket-python",
        "description": "shadowsocks over WebSocket, support Heroku.",
        "languages": {
            "Nix": 149,
            "Procfile": 61,
            "HTML": 6
        }
    },
    {
        "name": "dotfiles",
        "description": "My (semi-)literate dotfiles for Nix, Emacs, fish, etc, managed with home-manager and GNU Stow",
        "languages": {
            "Nix": 57986,
            "Emacs Lisp": 8780,
            "Haskell": 7357,
            "TeX": 6036,
            "Makefile": 4315,
            "Shell": 3768,
            "Perl": 610,
            "Awk": 106
        }
    },
    {
        "name": "melted.flakes",
        "description": "Xenoxanite's nixos configuration.",
        "languages": {
            "Nix": 65550,
            "CSS": 23746,
            "Shell": 5342
        }
    },
    {
        "name": "purifix",
        "description": "The PureScript Package Manager in Nix",
        "languages": {
            "Nix": 38524,
            "Shell": 594
        }
    },
    {
        "name": "ic-blackhole",
        "description": "Once a canister sets its only controller to a black hole, it becomes immutable and more!",
        "languages": {
            "Nix": 714,
            "Motoko": 710,
            "Makefile": 643
        }
    },
    {
        "name": "stackage2nix",
        "description": "Generate Nix build instructions from a Stack file",
        "languages": {
            "Nix": 214019,
            "Haskell": 65453,
            "Shell": 862
        }
    },
    {
        "name": "utf8",
        "description": "UTF-8 support for Nix",
        "languages": {
            "Nix": 1955,
            "Rust": 756
        }
    },
    {
        "name": "nixpkgs-terraform",
        "description": "A collection of Terraform versions that are automatically updated.",
        "languages": {
            "Nix": 7015,
            "Python": 5492
        }
    },
    {
        "name": "doc",
        "description": "nais developer documentation",
        "languages": {
            "Nix": 1057,
            "Shell": 356,
            "HTML": 304,
            "Python": 237,
            "Makefile": 119
        }
    },
    {
        "name": "Maika",
        "description": "My ultra-simple NixOS dotfiles.",
        "languages": {
            "Nix": 60848
        }
    },
    {
        "name": "declarative-nix-flatpak",
        "description": "flatpak-install, but declarative",
        "languages": {
            "Nix": 1503,
            "Shell": 550
        }
    },
    {
        "name": "nix-parsec",
        "description": null,
        "languages": {
            "Nix": 26011
        }
    },
    {
        "name": "cosmos.nix",
        "description": "A reproducible package set for Cosmos, IBC and CosmWasm",
        "languages": {
            "Nix": 95751,
            "Nushell": 657,
            "Nu": 63
        }
    },
    {
        "name": "release-services",
        "description": "Mozilla Release Engineering Services",
        "languages": {
            "Nix": 457590,
            "Python": 230957,
            "Elm": 34943,
            "CSS": 15708,
            "Shell": 13814,
            "JavaScript": 12199,
            "Makefile": 8075,
            "Dockerfile": 5054,
            "HTML": 478
        }
    },
    {
        "name": "flake",
        "description": "Company Nix expressions.",
        "languages": {
            "Nix": 41286,
            "Lua": 6875,
            "Shell": 4625
        }
    },
    {
        "name": "neovim",
        "description": "Neovim config for NixOS",
        "languages": {
            "Nix": 128662
        }
    },
    {
        "name": "unison-nix",
        "description": "Nix support for the Unison programming language",
        "languages": {
            "Nix": 11062,
            "Awk": 671
        }
    },
    {
        "name": "dotfiles",
        "description": "Configuring the universe with Nix.",
        "languages": {
            "Nix": 34741,
            "Nushell": 320,
            "Shell": 297
        }
    },
    {
        "name": "haskell-hls-nix",
        "description": "Nix builds of Haskell Language Server",
        "languages": {
            "Nix": 2885959,
            "Shell": 1550
        }
    },
    {
        "name": "athena-nix",
        "description": "Athena OS Nix configuration files focused on Cybersecurity. Learn, practice and enjoy with any hacking tool!",
        "languages": {
            "Nix": 256572,
            "Lua": 61400,
            "Shell": 37048,
            "CSS": 4477,
            "Scheme": 3812,
            "SCSS": 3211,
            "PowerShell": 250
        }
    },
    {
        "name": "foundry.nix",
        "description": "Nix overlay for gakonst/foundry (including forge and cast)",
        "languages": {
            "Nix": 4377,
            "Shell": 1971
        }
    },
    {
        "name": "nix-elixir",
        "description": null,
        "languages": {
            "Nix": 2649
        }
    },
    {
        "name": "mavenix",
        "description": "Deterministic Maven builds using Nix [maintainer=@icetan]",
        "languages": {
            "Nix": 11851,
            "Shell": 7668
        }
    },
    {
        "name": "nixos-kde",
        "description": "My personal nixos 23.-5 KDE & Nvidia configuration",
        "languages": {
            "Nix": 866621,
            "Shell": 237961,
            "CSS": 87020
        }
    },
    {
        "name": "flakes",
        "description": null,
        "languages": {
            "Nix": 75714,
            "Shell": 8756,
            "Python": 2481
        }
    },
    {
        "name": "infra.delroth.net",
        "description": "NixOS configuration for *.delroth.net personal server infrastructure",
        "languages": {
            "Nix": 139332
        }
    },
    {
        "name": "arkenfox-nixos",
        "description": "Utilities to use arkenfox/user.js in NixOS",
        "languages": {
            "Nix": 123237,
            "Perl": 7767
        }
    },
    {
        "name": "proxyparty",
        "description": "\ud83c\udf8a An Nginx redirector and proxier for all of Hack Club's needs!",
        "languages": {
            "Nix": 12350,
            "HTML": 1999
        }
    },
    {
        "name": "format-nix",
        "description": "A simple formatter for Nix using tree-sitter-nix.",
        "languages": {
            "Nix": 87734,
            "PureScript": 15864,
            "Dhall": 583,
            "JavaScript": 520
        }
    },
    {
        "name": "dotfiles",
        "description": "My NixOS flake.",
        "languages": {
            "Nix": 79398,
            "Shell": 2221,
            "SCSS": 1807
        }
    },
    {
        "name": "routing-guide",
        "description": "Guide for routing/bgp best practices",
        "languages": {
            "Nix": 375
        }
    },
    {
        "name": "niri-flake",
        "description": "Nix packages and modules for niri",
        "languages": {
            "Nix": 150628,
            "Shell": 1100,
            "Just": 601
        }
    },
    {
        "name": "nix-config",
        "description": null,
        "languages": {
            "Nix": 50982,
            "Just": 1469,
            "Shell": 178
        }
    },
    {
        "name": "ocaml-flake-example",
        "description": "An overly elaborate example of building a \u2018Hello World\u2019 package with Nix flakes, OCaml, and Dune",
        "languages": {
            "Nix": 6926,
            "OCaml": 226
        }
    },
    {
        "name": "nixos-system-config",
        "description": "Modular NixOS configuration.",
        "languages": {
            "Nix": 8593
        }
    },
    {
        "name": "typix",
        "description": "Deterministic Typst compilation with Nix",
        "languages": {
            "Nix": 20371,
            "Typst": 86,
            "Shell": 84
        }
    },
    {
        "name": "docker-mod",
        "description": "The home for our universal Docker mod",
        "languages": {
            "Nix": 402,
            "Dockerfile": 27,
            "Shell": 27
        }
    },
    {
        "name": "cross-system",
        "description": "Minimal config to cross-compile a NixOS system image for arm platforms",
        "languages": {
            "Nix": 3099
        }
    },
    {
        "name": "chenglab",
        "description": "what it feels like to run nixos-rebuild:",
        "languages": {
            "Nix": 44937,
            "Shell": 4745,
            "Just": 875
        }
    },
    {
        "name": "nix-rehash",
        "description": "Nix development utils that will blow up your mind",
        "languages": {
            "Nix": 14749
        }
    },
    {
        "name": "nixos-vm-on-macos",
        "description": "Run NixOS VMs on macOS! https://github.com/NixOS/nixpkgs/issues/108984",
        "languages": {
            "Nix": 2780
        }
    },
    {
        "name": "pinecube-nixos",
        "description": null,
        "languages": {
            "Nix": 6349,
            "Shell": 237
        }
    },
    {
        "name": "neovim-flake",
        "description": null,
        "languages": {
            "Nix": 54715
        }
    },
    {
        "name": "nixos_config",
        "description": "Nixos configuration",
        "languages": {
            "Nix": 9490
        }
    },
    {
        "name": "idris2-pkgs",
        "description": "An unofficial Idris2 package repository for Nix",
        "languages": {
            "Nix": 27671,
            "Shell": 971,
            "Idris": 291
        }
    },
    {
        "name": "jsonresume-nix",
        "description": "Reproducible r\u00e9sum\u00e9 using Nix \u2744\ufe0f and jsonresume",
        "languages": {
            "Nix": 15471
        }
    },
    {
        "name": "equinix-metal-builders",
        "description": "iPXE image for Nix builders on Equinix Metal's Spot market.",
        "languages": {
            "Nix": 20698,
            "Shell": 13298,
            "HCL": 3674
        }
    },
    {
        "name": "core",
        "description": "ZilchOS Core, a decidedly tiny Nix-based distro to play with",
        "languages": {
            "Nix": 71315,
            "Shell": 8380
        }
    },
    {
        "name": "mac-nix-simple-example",
        "description": "Example home-manager, nix-darwin starting config",
        "languages": {
            "Nix": 3661
        }
    },
    {
        "name": "home",
        "description": "My nix configs/dotfiles.",
        "languages": {
            "Nix": 105047,
            "Shell": 3869
        }
    },
    {
        "name": "nix-runner",
        "description": "Tidy shell shebangs with nix flakes",
        "languages": {
            "Nix": 3712
        }
    },
    {
        "name": "dotfiles",
        "description": "My messy system configuration setup",
        "languages": {
            "Nix": 376861,
            "Python": 17114,
            "Shell": 9290,
            "Emacs Lisp": 8986,
            "Less": 4972,
            "CSS": 4164
        }
    },
    {
        "name": "flakey-profile",
        "description": "Declarative profiles with nix flakes",
        "languages": {
            "Nix": 7998
        }
    },
    {
        "name": "OSX-KVM",
        "description": null,
        "languages": {
            "Nix": 4390
        }
    },
    {
        "name": "nixos-config",
        "description": "Lan Tian's NixOS Configuration",
        "languages": {
            "Nix": 761674,
            "Python": 12738,
            "HTML": 6594,
            "Makefile": 673
        }
    },
    {
        "name": "laptop",
        "description": ":computer: Handy Dandy macOS Environment Setup",
        "languages": {
            "Nix": 5519,
            "Lua": 1388
        }
    },
    {
        "name": "nixos-config",
        "description": "Aiming to be the most overkill NixOS config in the entire world.",
        "languages": {
            "Nix": 612628,
            "Python": 14938,
            "Vim Script": 5273,
            "Lua": 3046,
            "Meson": 1674,
            "HCL": 1347,
            "Makefile": 848,
            "C++": 755,
            "Shell": 294,
            "Ruby": 164,
            "Rust": 45
        }
    },
    {
        "name": "combined-manager",
        "description": "NixOS personal configuration structure library",
        "languages": {
            "Nix": 11547
        }
    },
    {
        "name": "nix_configs",
        "description": "The NixOS configuration for my desktop.  ",
        "languages": {
            "Nix": 138240,
            "Shell": 6632
        }
    },
    {
        "name": "foosteros",
        "description": "FoosterOS/2 Warp - NixOS-based system configuration for my computers",
        "languages": {
            "Nix": 223248,
            "Python": 29902,
            "Shell": 3283
        }
    },
    {
        "name": "core",
        "description": "Standard's grow function family. Factorized.",
        "languages": {
            "Nix": 27440,
            "Shell": 85
        }
    },
    {
        "name": "nix-zig-stdenv",
        "description": "cross-compile nixpkgs with zig",
        "languages": {
            "Nix": 32121,
            "Shell": 6419,
            "Rust": 1677
        }
    },
    {
        "name": "nixos-configuration",
        "description": "Modularized configuration for a NixOS system",
        "languages": {
            "Nix": 41815,
            "Emacs Lisp": 13045
        }
    },
    {
        "name": "nixtest",
        "description": "A tiny unit testing framework written in pure Nix",
        "languages": {
            "Nix": 5749,
            "Shell": 46
        }
    },
    {
        "name": "stacklock2nix",
        "description": "Easily build a Haskell project from a stack.yaml.lock file with Nix",
        "languages": {
            "Nix": 65398,
            "Haskell": 946
        }
    },
    {
        "name": "wordpress-nginx-nix",
        "description": "One-stop shop for defining, testing, and deploying a WordPress CMS site using Nginx with Nix, NixOps, and NixOS",
        "languages": {
            "Nix": 34105,
            "Shell": 3293
        }
    },
    {
        "name": "nix-templates",
        "description": "Nix Flake templates for various languages",
        "languages": {
            "Nix": 17567,
            "HCL": 3138
        }
    },
    {
        "name": "_",
        "description": "dotfiles",
        "languages": {
            "Nix": 38220,
            "Fennel": 12842,
            "Scheme": 1990
        }
    },
    {
        "name": "ml-pkgs",
        "description": "Extra package for nix on machine learning and data science",
        "languages": {
            "Nix": 118611,
            "CMake": 6349,
            "Python": 1736
        }
    },
    {
        "name": "nix-home",
        "description": "Nix home environment",
        "languages": {
            "Nix": 97723,
            "Vim Script": 2698,
            "Shell": 1560
        }
    },
    {
        "name": "pnpm2nix-nzbr",
        "description": "Build packages using pnpm with nix",
        "languages": {
            "Nix": 9508,
            "HTML": 790,
            "SCSS": 207
        }
    },
    {
        "name": "nixelium",
        "description": "Nix-powered Linux and Darwin systems",
        "languages": {
            "Nix": 116095,
            "Lua": 15995
        }
    },
    {
        "name": "nix",
        "description": "my nix modules, overlays, host configurations, and more!",
        "languages": {
            "Nix": 678115,
            "Shell": 4014,
            "JavaScript": 281
        }
    },
    {
        "name": "contract-v2",
        "description": null,
        "languages": {
            "Nix": 599342,
            "Haskell": 52811,
            "C": 686,
            "Shell": 428
        }
    },
    {
        "name": "visionfive-nix",
        "description": null,
        "languages": {
            "Nix": 25914
        }
    },
    {
        "name": "spago2nix",
        "description": "Generate a derivation of (old) Spago dependencies, and use them to install them into the directory structure used by Spago.",
        "languages": {
            "Nix": 39400,
            "PureScript": 19353,
            "Dhall": 651,
            "Shell": 193,
            "JavaScript": 160
        }
    },
    {
        "name": "home",
        "description": "Configurations",
        "languages": {
            "Nix": 430834,
            "Lua": 322146,
            "TeX": 303266,
            "Python": 282410,
            "Shell": 177037,
            "Vim Script": 26776,
            "C": 13094,
            "CSS": 8489,
            "Less": 5589,
            "Perl": 5092,
            "Makefile": 4632,
            "Modula-3": 3818,
            "Just": 2933,
            "C++": 2819,
            "Haskell": 2228,
            "JavaScript": 1763,
            "HTML": 1163,
            "Fennel": 170
        }
    },
    {
        "name": "nixos-config",
        "description": "My NixOS configuration",
        "languages": {
            "Nix": 40596,
            "Emacs Lisp": 35714,
            "Haskell": 9440,
            "Lua": 9103,
            "Shell": 2484,
            "Vim Script": 2373
        }
    },
    {
        "name": "etc-nixos",
        "description": "NixOS configuration files for my computers",
        "languages": {
            "Nix": 28183,
            "Perl": 26526,
            "Python": 1513,
            "Shell": 697
        }
    },
    {
        "name": "dotfiles",
        "description": "dump for garbage files",
        "languages": {
            "Nix": 31318,
            "Lua": 27784,
            "CSS": 17921,
            "Shell": 4138,
            "Python": 47
        }
    },
    {
        "name": "cache-install",
        "description": "Use the GitHub Actions cache for Nix packages",
        "languages": {
            "Nix": 5462,
            "Shell": 3642
        }
    },
    {
        "name": "nix-github-actions",
        "description": "An example project showing how to use Nix to replace third-party GitHub Actions",
        "languages": {
            "Nix": 2827,
            "Rust": 1895
        }
    },
    {
        "name": "dotfiles",
        "description": "My personal NixOS configurations.",
        "languages": {
            "Nix": 443119,
            "HCL": 78435,
            "Emacs Lisp": 10909,
            "Shell": 7306,
            "SCSS": 1921,
            "Lua": 807,
            "HTML": 782,
            "Makefile": 680
        }
    },
    {
        "name": "rust-nightly-nix",
        "description": "A Nix expression for nightly Rust versions",
        "languages": {
            "Nix": 3368
        }
    },
    {
        "name": "disko-images",
        "description": "Create disk image files from NixOS + disko configuration.",
        "languages": {
            "Nix": 8257
        }
    },
    {
        "name": "clj2nix",
        "description": "Convert deps.edn to a nix expression",
        "languages": {
            "Nix": 36472,
            "Clojure": 8958
        }
    },
    {
        "name": "buildNodeModules",
        "description": "An experiment in improving node packaging for nix. Dead simple.",
        "languages": {
            "Nix": 8082,
            "JavaScript": 4334,
            "Shell": 2875
        }
    },
    {
        "name": "climod",
        "description": "Modular generated command line interfaces using the same technology as the NixOS module system.",
        "languages": {
            "Nix": 10959
        }
    },
    {
        "name": "dotfiles",
        "description": null,
        "languages": {
            "Nix": 103633,
            "Shell": 101935,
            "Fennel": 72641,
            "CSS": 18836,
            "Emacs Lisp": 11493,
            "GLSL": 8632,
            "Lua": 4563,
            "Python": 4417,
            "SCSS": 3170,
            "Vim Script": 1829,
            "Makefile": 1592,
            "JavaScript": 1528,
            "Scheme": 512,
            "Common Lisp": 290,
            "Macaulay2": 59
        }
    },
    {
        "name": "rand-nix",
        "description": " \ud83d\udd25 Eval-time random number generator for Nix without IFD \ud83d\ude80",
        "languages": {
            "Nix": 828
        }
    },
    {
        "name": "nixos-configs",
        "description": "nixpkgs ",
        "languages": {
            "Nix": 385633,
            "Shell": 12268
        }
    },
    {
        "name": "dotfiles",
        "description": "My configuration files",
        "languages": {
            "Nix": 34855,
            "Shell": 26722,
            "Emacs Lisp": 21765,
            "Python": 3620,
            "YASnippet": 3409,
            "Lua": 1087,
            "Perl": 104
        }
    },
    {
        "name": "nix-harden-needed",
        "description": "Bubble up the correct paths to your shared object libraries in Nix",
        "languages": {
            "Nix": 9072,
            "Shell": 742
        }
    },
    {
        "name": "dotnix",
        "description": "My nix dotfiles",
        "languages": {
            "Nix": 222658
        }
    },
    {
        "name": "NixOS-Users-Against-MIC-Sponsorship.github.io",
        "description": null,
        "languages": {
            "Nix": 1218,
            "CSS": 867,
            "HTML": 653
        }
    },
    {
        "name": "fractalchains",
        "description": "Algorand",
        "languages": {
            "Nix": 10425,
            "Shell": 593,
            "Rust": 116
        }
    },
    {
        "name": "nixsap",
        "description": null,
        "languages": {
            "Nix": 2635518,
            "Shell": 11753,
            "PHP": 6159,
            "Perl": 2794,
            "Haskell": 1243,
            "PLpgSQL": 807
        }
    },
    {
        "name": "yarnpnp2nix",
        "description": "A performance focused and space efficient way of packaging NodeJS applications with Nix",
        "languages": {
            "Nix": 563689,
            "TypeScript": 50966,
            "JavaScript": 3679,
            "Shell": 738
        }
    },
    {
        "name": "nixos-config",
        "description": "Minimalistic Sway rice + NixOS",
        "languages": {
            "Nix": 50426,
            "Shell": 25184
        }
    },
    {
        "name": "nixos-pxe-installer",
        "description": "Framework for fully automated installation of customized NixOS via PXE netboot",
        "languages": {
            "Nix": 19627,
            "Shell": 7739
        }
    },
    {
        "name": "nix-overlay-guix",
        "description": "A package and module for using GNU Guix on Nix(OS). ",
        "languages": {
            "Nix": 32041,
            "Shell": 3449
        }
    },
    {
        "name": "devenv-shopware",
        "description": "devenv environment for Shopware 6",
        "languages": {
            "Nix": 21124
        }
    },
    {
        "name": "dotnix",
        "description": "Shackled within an elaborate prison of my own design.",
        "languages": {
            "Nix": 84248,
            "Lua": 4642,
            "Shell": 907
        }
    },
    {
        "name": "nix-config",
        "description": null,
        "languages": {
            "Nix": 125068,
            "Shell": 5738,
            "Python": 3741,
            "CSS": 620
        }
    },
    {
        "name": "nix-warez",
        "description": "Nix expressions for proprietary software",
        "languages": {
            "Nix": 17838
        }
    },
    {
        "name": "zig2nix",
        "description": "Flake for packaging, building and running Zig projects.",
        "languages": {
            "Nix": 79918,
            "Zig": 60625,
            "Shell": 1623,
            "Awk": 1428
        }
    },
    {
        "name": "nixos-config",
        "description": "My NixOS configuration",
        "languages": {
            "Nix": 723016,
            "Emacs Lisp": 139352,
            "Lua": 91794,
            "Python": 34623,
            "Haskell": 27440,
            "Common Lisp": 26716,
            "Just": 4298,
            "CSS": 2261,
            "NewLisp": 1990,
            "Shell": 1264,
            "PowerShell": 328
        }
    },
    {
        "name": "emacs",
        "description": "Nightly custom Emacs builds for macOS Nix environments",
        "languages": {
            "Nix": 2803
        }
    },
    {
        "name": "minecraft.nix",
        "description": "Command line Minecraft launcher managed by nix",
        "languages": {
            "Nix": 22752,
            "Python": 10300
        }
    },
    {
        "name": "tspm",
        "description": "An open source tree-sitter package manager \ud83c\udf32",
        "languages": {
            "Nix": 17498
        }
    },
    {
        "name": "scala-seed",
        "description": "A Nix flake for getting started with Scala.",
        "languages": {
            "Nix": 2562
        }
    },
    {
        "name": "rustworks",
        "description": "Operating system written in Rust for NumWorks calculator (model n0110)",
        "languages": {
            "Nix": 1275
        }
    },
    {
        "name": "haskellfoundation.github.io",
        "description": "The Haskell Foundation website, hosted by GitHub Pages.",
        "languages": {
            "Nix": 145491,
            "CSS": 125207,
            "HTML": 118054,
            "Haskell": 26971,
            "JavaScript": 3364,
            "Python": 1210
        }
    },
    {
        "name": "nixduino",
        "description": "Nix based tool to help build arduino sketches.",
        "languages": {
            "Nix": 756
        }
    },
    {
        "name": "nix-config",
        "description": "Nix configurations",
        "languages": {
            "Nix": 63086
        }
    },
    {
        "name": "dvt",
        "description": "Development Tools and Templates \ud83d\udee0\ufe0f \u2699\ufe0f \ud83d\udd2d \u2744\ufe0f\u26f7\ufe0f",
        "languages": {
            "Nix": 15509
        }
    },
    {
        "name": "gpt4all-nix",
        "description": "Nix flake for gpt4all",
        "languages": {
            "Nix": 2744
        }
    },
    {
        "name": "config",
        "description": "NixOS configuration for ensemble of VMs and machines ",
        "languages": {
            "Nix": 71225,
            "Emacs Lisp": 22969,
            "Shell": 7241,
            "Clojure": 151,
            "Scala": 92
        }
    },
    {
        "name": "flake-configs",
        "description": "My NixOS configs as a flake",
        "languages": {
            "Nix": 154439,
            "Emacs Lisp": 35354,
            "Shell": 10961,
            "HTML": 3735,
            "Vim Script": 2379,
            "Lua": 2282,
            "PowerShell": 741
        }
    },
    {
        "name": "nixexprs",
        "description": "Public, Opinionated Mayflower NixOS Modules/Packages and other Expressions",
        "languages": {
            "Nix": 510252,
            "CSS": 832
        }
    },
    {
        "name": "nixcasks",
        "description": "Homebrew casks, nixified",
        "languages": {
            "Nix": 4055,
            "Shell": 971,
            "jq": 332
        }
    },
    {
        "name": "nixvim",
        "description": "\u2744\ufe0f my neovim config using nixvim",
        "languages": {
            "Nix": 66720
        }
    },
    {
        "name": "nix-gccemacs-darwin",
        "description": "Build gccemacs for macOS 10.15 or newer using Nix.",
        "languages": {
            "Nix": 8458
        }
    },
    {
        "name": "emacs-osx",
        "description": "Emacs on Mac OSX. Install with Nix",
        "languages": {
            "Nix": 2752,
            "Makefile": 347
        }
    },
    {
        "name": "nixos-config",
        "description": "Tejing's personal NixOS configuration flake",
        "languages": {
            "Nix": 139043,
            "Shell": 94818,
            "C": 24539,
            "Makefile": 297
        }
    },
    {
        "name": "k-uniswap-v2",
        "description": null,
        "languages": {
            "Nix": 748,
            "Makefile": 433,
            "Shell": 85
        }
    },
    {
        "name": "aagl-gtk-on-nix",
        "description": "Run an-anime-game-launcher GTK version on Nix/NixOS!",
        "languages": {
            "Nix": 26973
        }
    },
    {
        "name": "nix-flake-templates",
        "description": null,
        "languages": {
            "Nix": 6835,
            "Python": 119,
            "TeX": 107,
            "Rust": 45
        }
    },
    {
        "name": "dotfiles",
        "description": "\ud83d\udcab NixOS configuration files ",
        "languages": {
            "Nix": 138001,
            "Lua": 9494,
            "Shell": 5617,
            "Nushell": 966,
            "Nu": 34
        }
    },
    {
        "name": "soxin",
        "description": null,
        "languages": {
            "Nix": 86377,
            "Shell": 8029
        }
    },
    {
        "name": "aoc2020",
        "description": "Advent of Code done in the nix language",
        "languages": {
            "Nix": 37163
        }
    },
    {
        "name": "nixrc",
        "description": "Configuration files for NixOS",
        "languages": {
            "Nix": 208339,
            "Perl": 21428,
            "Shell": 7803,
            "Python": 6652,
            "Vim Script": 2599,
            "Makefile": 191
        }
    },
    {
        "name": "raspberry-pi-nix",
        "description": "NixOS modules to aid in configuring NixOS for raspberry pi products",
        "languages": {
            "Nix": 38572
        }
    },
    {
        "name": "scientific-fhs",
        "description": "A nixos FHS for julia and conda, and possibly other scientific tools",
        "languages": {
            "Nix": 13235
        }
    },
    {
        "name": "nixos-config",
        "description": "My NixOS Configuration",
        "languages": {
            "Nix": 341721,
            "Shell": 19194,
            "Vim Snippet": 10159,
            "MoonScript": 8764,
            "C": 8725,
            "Makefile": 2903,
            "Perl": 315,
            "TeX": 178
        }
    },
    {
        "name": "templates",
        "description": "Nix flake templates managed by the community [maintainer=@IogaMaster]",
        "languages": {
            "Nix": 13270,
            "Zig": 2098,
            "Makefile": 1149,
            "Go": 74,
            "Haskell": 67,
            "C": 62,
            "Python": 60,
            "Rust": 45,
            "Julia": 15
        }
    },
    {
        "name": "dotfiles",
        "description": "~. Nix all the things!",
        "languages": {
            "Nix": 41122,
            "Org": 2270
        }
    },
    {
        "name": "hillingar",
        "description": "Build Mirage unikernels with Nix",
        "languages": {
            "Nix": 8161
        }
    },
    {
        "name": "geospatial-nix",
        "description": "Geospatial packages repository and environment. Check out https://geospatial-nix.today/ .",
        "languages": {
            "Nix": 76390,
            "Python": 5525,
            "Shell": 1128
        }
    },
    {
        "name": "nixpkgs-terraform-providers-bin",
        "description": "auto-updating terraform providers for nix [maintainer=@zimbatm]",
        "languages": {
            "Nix": 11195,
            "Ruby": 2104,
            "Shell": 223,
            "HCL": 213
        }
    },
    {
        "name": "nix-beam-flakes",
        "description": "Nix-based BEAM toolchain management",
        "languages": {
            "Nix": 34173
        }
    },
    {
        "name": "notnft",
        "description": "Nix DSL for nftables",
        "languages": {
            "Nix": 213206
        }
    },
    {
        "name": "nix-ux",
        "description": "Nix UX improvements",
        "languages": {
            "Nix": 3811
        }
    },
    {
        "name": "nix-files",
        "description": "NixOS for my VPS",
        "languages": {
            "Nix": 77058,
            "Shell": 4597,
            "HTML": 2677,
            "Clojure": 254
        }
    },
    {
        "name": "laurn",
        "description": "Dev environment isolation",
        "languages": {
            "Nix": 58695,
            "Rust": 33530,
            "Shell": 124
        }
    },
    {
        "name": "nixos-vault-service",
        "description": null,
        "languages": {
            "Nix": 71078,
            "Rust": 8618,
            "HCL": 3030,
            "Shell": 389,
            "Procfile": 89
        }
    },
    {
        "name": "hyprland-protocols",
        "description": "Wayland protocol extensions for Hyprland",
        "languages": {
            "Nix": 1668,
            "Meson": 1548
        }
    },
    {
        "name": "kubenix-modules",
        "description": "Repository of kubenix services",
        "languages": {
            "Nix": 473066
        }
    },
    {
        "name": "nixos-flk",
        "description": "highly structured NixOS configuration based on devos",
        "languages": {
            "Nix": 335003,
            "Emacs Lisp": 16507,
            "Shell": 13299,
            "YASnippet": 9251,
            "Python": 1542,
            "Go": 65
        }
    },
    {
        "name": "korora",
        "description": "A tiny & fast type system for Nix in Nix",
        "languages": {
            "Nix": 20691
        }
    },
    {
        "name": "dotfiles",
        "description": "Configuration files to provide consistent functionality across systems",
        "languages": {
            "Nix": 52660,
            "Scheme": 9448,
            "Shell": 7575
        }
    },
    {
        "name": "memory-usage-zurihac-2021",
        "description": null,
        "languages": {
            "Nix": 3681,
            "Haskell": 2700
        }
    },
    {
        "name": "systemd-nix",
        "description": "Generate systemd units from NixOS-style descriptions",
        "languages": {
            "Nix": 1553
        }
    },
    {
        "name": "direnv-nix-lorelei",
        "description": "Alternative Nix extension of Direnv",
        "languages": {
            "Nix": 17139,
            "Shell": 2116
        }
    },
    {
        "name": "dotnix",
        "description": "nix stuff",
        "languages": {
            "Nix": 237163
        }
    },
    {
        "name": "nix-postgres",
        "description": "Experimental port of supabase/postgres to Nix",
        "languages": {
            "Nix": 43994,
            "Shell": 7554,
            "PLpgSQL": 2915,
            "Just": 440
        }
    },
    {
        "name": "scratchix",
        "description": "Linux From Scratch, but it's Nix",
        "languages": {
            "Nix": 8949,
            "Shell": 4245
        }
    },
    {
        "name": "dotfiles",
        "description": "My personal dotfiles, using Nix Flakes to configure my system(s).",
        "languages": {
            "Nix": 52153,
            "Emacs Lisp": 39986,
            "Python": 27887,
            "HTML": 8338,
            "CSS": 4412,
            "Shell": 4338,
            "Haskell": 3781,
            "Nushell": 2685
        }
    },
    {
        "name": "hoon-language-server",
        "description": "Language Server for Hoon.  Middleware to translate between the Language Server Protocol and your Urbit.",
        "languages": {
            "Nix": 47554,
            "TypeScript": 7093,
            "JavaScript": 49
        }
    },
    {
        "name": "nixos-config",
        "description": "My nixos configs",
        "languages": {
            "Nix": 106050,
            "Vim Script": 9901,
            "Shell": 7252,
            "CSS": 1332,
            "Python": 846,
            "Rust": 281
        }
    },
    {
        "name": ".dotfiles",
        "description": "A NixOS system configuration",
        "languages": {
            "Nix": 10509,
            "Shell": 1042
        }
    },
    {
        "name": "nix-home",
        "description": "My Nix dotfiles on MacOS/NixOS",
        "languages": {
            "Nix": 203661,
            "Shell": 40574,
            "Haskell": 29495,
            "C": 11121,
            "Lua": 9709,
            "CSS": 8696,
            "YASnippet": 4898,
            "HTML": 4529,
            "HCL": 3653,
            "Python": 1828,
            "JavaScript": 1505,
            "SCSS": 1113,
            "Just": 160,
            "Makefile": 76
        }
    },
    {
        "name": "nixos-config",
        "description": "My NixOS configuration",
        "languages": {
            "Nix": 60917,
            "Ruby": 13214,
            "Shell": 1303
        }
    },
    {
        "name": "ez-configs",
        "description": "A flake-parts module for simple nixos, darwin and home-manager configurations using project directory structure",
        "languages": {
            "Nix": 22306
        }
    },
    {
        "name": "nixos-host",
        "description": null,
        "languages": {
            "Nix": 249022,
            "Lua": 24638,
            "HCL": 1698
        }
    },
    {
        "name": "dr460nixed",
        "description": "Dr460nixed NixOS \ud83d\udc09\u2744\ufe0f",
        "languages": {
            "Nix": 287792,
            "CSS": 9996,
            "Shell": 4479
        }
    },
    {
        "name": "Tokyo-NixOS-Meetup-Wiki",
        "description": "Tokyo NixOS meetup wiki pages",
        "languages": {
            "Nix": 1105
        }
    },
    {
        "name": "nix-optics",
        "description": null,
        "languages": {
            "Nix": 2226
        }
    },
    {
        "name": "nspawn-nixos",
        "description": "Accompanying Code for Nixcademy.com Blog Article",
        "languages": {
            "Nix": 3761
        }
    },
    {
        "name": "kind-kubenix",
        "description": "A playground to use kubenix with a kind cluster",
        "languages": {
            "Nix": 5836,
            "JavaScript": 266
        }
    },
    {
        "name": "sadm",
        "description": "Scripts and configurations for the Dolphin Emulator infrastructure",
        "languages": {
            "Nix": 92516,
            "Python": 60754,
            "Dockerfile": 4274,
            "Go": 4014,
            "Shell": 1087,
            "Ruby": 45
        }
    },
    {
        "name": "template-nixos",
        "description": "The NixOS template, configured for Gitpod (www.gitpod.io) to give you pre-built, nix based ephemeral operating system environments in the cloud.",
        "languages": {
            "Nix": 3333,
            "Makefile": 1002
        }
    },
    {
        "name": "hds-releases",
        "description": "For public releases of Holo-dev-server",
        "languages": {
            "Nix": 2466
        }
    },
    {
        "name": "nix-androidenvtests",
        "description": "Nix Android build tests",
        "languages": {
            "Nix": 182629,
            "XSLT": 12268,
            "Java": 4708,
            "Shell": 1702,
            "C": 1087,
            "Makefile": 748
        }
    },
    {
        "name": "yants",
        "description": "a fork/mirror of yants: - because github is more discoverable",
        "languages": {
            "Nix": 23360
        }
    },
    {
        "name": "nixos-sun20iw1p1",
        "description": "NixOS on Allwinner D1 RISC-V",
        "languages": {
            "Nix": 8274
        }
    },
    {
        "name": "NixDroid",
        "description": "building aosp roms (e.g. LineageOS) with nix. because why not?",
        "languages": {
            "Nix": 15827,
            "Shell": 422
        }
    },
    {
        "name": "minifedi",
        "description": "Run a tiny fediverse on your machine for testing, with no fuss.",
        "languages": {
            "Nix": 210084,
            "Shell": 1972
        }
    },
    {
        "name": "benchmarking-proxies",
        "description": "Automation to perform automated benchmarks against reverse proxy services.",
        "languages": {
            "Nix": 6663,
            "Shell": 5375,
            "Gnuplot": 3476,
            "HCL": 2122,
            "jq": 1173,
            "JavaScript": 415,
            "HTML": 155,
            "Lua": 64
        }
    },
    {
        "name": "9front-in-a-box",
        "description": "A nix flake for running 9front virtual machines with drawterm",
        "languages": {
            "Nix": 15673,
            "Go": 3402
        }
    },
    {
        "name": "flake-nimble",
        "description": "Nimble packages Nix flake [maintainer=?]",
        "languages": {
            "Nix": 67461,
            "Nim": 9842,
            "Shell": 4909
        }
    },
    {
        "name": "nixfiles",
        "description": "kat's configuration flake",
        "languages": {
            "Nix": 177355,
            "HCL": 11468,
            "Lua": 9566,
            "Sass": 3640,
            "Shell": 2267
        }
    },
    {
        "name": "django-nixos",
        "description": "NixOS/NixOps configuration for Django",
        "languages": {
            "Nix": 5255
        }
    },
    {
        "name": "nixos-router",
        "description": "NixOS expression for creating a simple router",
        "languages": {
            "Nix": 2224
        }
    },
    {
        "name": "nixos-config",
        "description": "NixOS + flakes + home-manager with xfce, zsh, tmux, ...",
        "languages": {
            "Nix": 98707,
            "Shell": 466,
            "CSS": 81
        }
    },
    {
        "name": "nixos-btrfs-pi",
        "description": "Raspberry Pi SD card image for NixOS on BTRFS root",
        "languages": {
            "Nix": 20848,
            "Shell": 8046
        }
    },
    {
        "name": "dep2nix",
        "description": "Using golang/dep to create a deps.nix file for go projects to package them for nixpkgs.",
        "languages": {
            "Nix": 14303,
            "Go": 7180
        }
    },
    {
        "name": "vms.nix",
        "description": "NixOS module for QEMU VM's using a similar interface to nixos-containers.",
        "languages": {
            "Nix": 7123
        }
    },
    {
        "name": "home-manager-wsl",
        "description": "WSL distribution, including Nix + Home-manager + FHS Distro",
        "languages": {
            "Nix": 14494,
            "Shell": 2599,
            "Python": 762
        }
    },
    {
        "name": "read-together",
        "description": "Organize remote meetings for reading computer science papers",
        "languages": {
            "Nix": 172
        }
    },
    {
        "name": "nix-pkgset",
        "description": "Nix package set library",
        "languages": {
            "Nix": 12372
        }
    },
    {
        "name": "nixos-config",
        "description": "My NixOS configuration",
        "languages": {
            "Nix": 65859,
            "Haskell": 26990,
            "Shell": 12341,
            "Lua": 2161
        }
    },
    {
        "name": "infra",
        "description": "Personal cloud, dotfiles, and configurations omnirepo",
        "languages": {
            "Nix": 170235,
            "Python": 19919,
            "Racket": 19225,
            "YAML": 13894,
            "HCL": 13179,
            "Shell": 9507,
            "Haskell": 8934,
            "HTML": 3316,
            "Jinja": 177,
            "PHP": 83
        }
    },
    {
        "name": "audio.nix",
        "description": "Assorted audio packages for Nix(OS)/Linux.",
        "languages": {
            "Nix": 110230
        }
    },
    {
        "name": "nixos-nftables-firewall",
        "description": "A zone based firewall built ontop of nftables for nixos",
        "languages": {
            "Nix": 56321
        }
    },
    {
        "name": "nix",
        "description": "\ud83c\udf4e Procrastinating never felt this productive.",
        "languages": {
            "Nix": 6826,
            "Lua": 2825,
            "Shell": 2588,
            "Just": 321
        }
    },
    {
        "name": "declarative-cachix",
        "description": "Manage cachix caches declaratively",
        "languages": {
            "Nix": 5456
        }
    },
    {
        "name": "dotfiles",
        "description": "My NixOS configuration",
        "languages": {
            "Nix": 74320,
            "Shell": 18323,
            "CSS": 7021
        }
    },
    {
        "name": "NiDE",
        "description": "Niche i3 Desktop Environment: Keyboard-driven DE installed in the home directory",
        "languages": {
            "Nix": 5721,
            "Shell": 2422
        }
    },
    {
        "name": "ekalf",
        "description": "The correct way to use Nix flakes",
        "languages": {
            "Nix": 8518
        }
    },
    {
        "name": "deployment",
        "description": "NixOps deployment",
        "languages": {
            "Nix": 351095,
            "Haskell": 57633,
            "Erlang": 15556,
            "Haxe": 5789,
            "Shell": 1890,
            "Python": 1199
        }
    },
    {
        "name": "nix-elm-tools",
        "description": "[now part of NixOS/nixpkgs] Elm lang community tooling for Nix and NixOS users.",
        "languages": {
            "Nix": 246937,
            "Elm": 432,
            "Shell": 185
        }
    },
    {
        "name": "mini_compile_commands",
        "description": null,
        "languages": {
            "Nix": 3532,
            "Python": 2995,
            "C++": 170
        }
    },
    {
        "name": "packet-nixos",
        "description": "The images used by Packet.net's deployment process.",
        "languages": {
            "Nix": 32524,
            "Shell": 14406,
            "Python": 6963
        }
    },
    {
        "name": "magics",
        "description": "My NixOps / NixOs experiments ( #k8s , #elk, #kafka / #zk clusters and #RaspberryPi3)",
        "languages": {
            "Nix": 254759,
            "Makefile": 4453,
            "Shell": 274
        }
    },
    {
        "name": "PromptGrimoire",
        "description": null,
        "languages": {
            "Nix": 53
        }
    },
    {
        "name": "hivebus",
        "description": "A declarative configuration framework based on the structural theory of std.",
        "languages": {
            "Nix": 204490,
            "Shell": 36246,
            "Emacs Lisp": 17787,
            "YASnippet": 9251,
            "SCSS": 7047,
            "Python": 6921,
            "CSS": 4859,
            "Just": 2085,
            "Lua": 814,
            "Go": 65
        }
    },
    {
        "name": "nix-config",
        "description": "My personal NixOS config",
        "languages": {
            "Nix": 85936,
            "JavaScript": 7052,
            "Shell": 828,
            "Dockerfile": 298,
            "Just": 104
        }
    },
    {
        "name": "nix-rice",
        "description": "http://www.reddit.com/r/NixOS/comments/3544gi/nix_runixporn/",
        "languages": {
            "Nix": 30666,
            "Vim Script": 122
        }
    },
    {
        "name": "nix-vscode-marketplace",
        "description": "VSCode and OpenVSX extensions for Nix",
        "languages": {
            "Nix": 25580306,
            "Python": 12769,
            "TypeScript": 8709,
            "Shell": 407
        }
    },
    {
        "name": "dotfiles",
        "description": ":wrench: My configuration files",
        "languages": {
            "Nix": 22271,
            "Python": 12665,
            "Lua": 6167,
            "Markdown": 4490,
            "Shell": 2112,
            "SVG": 1723,
            "JSON": 1183,
            "YAML": 977,
            "INI": 773,
            "XML": 408,
            "Vim Script": 339
        }
    },
    {
        "name": "nixos",
        "description": "Packer build scripts for NixOS base images",
        "languages": {
            "Nix": 3535,
            "Shell": 338
        }
    },
    {
        "name": "devx",
        "description": "The Developer Experience Shell - This repo contains a nix develop shell for haskell. Its primary purpose is to help get a development shell for haskell quickly and across multiple operating systems (and architectures).",
        "languages": {
            "Nix": 48018,
            "Shell": 4539,
            "Dockerfile": 3139,
            "Ruby": 87
        }
    },
    {
        "name": "flake-firefox-nightly",
        "description": "this provides an auto-updating flake for firefox-nightly-bin from nixpkgs-mozilla [maintainer=@colemickens, @Artturin]",
        "languages": {
            "Nix": 5767,
            "Nushell": 1517,
            "Shell": 882
        }
    },
    {
        "name": "fromElisp",
        "description": "An Emacs Lisp reader in Nix.",
        "languages": {
            "Nix": 30206
        }
    },
    {
        "name": "dde-nixos",
        "description": "[Archived] dde 23 on NixOS",
        "languages": {
            "Nix": 142365
        }
    },
    {
        "name": "hive",
        "description": "The Hive - The secretly open NixOS-Society",
        "languages": {
            "Nix": 274332,
            "Shell": 99258,
            "Python": 2915
        }
    },
    {
        "name": "nixos",
        "description": "My NixOS configuration.",
        "languages": {
            "Nix": 121185,
            "Shell": 7589,
            "Dockerfile": 1058
        }
    },
    {
        "name": "nixos-offline-installer",
        "description": "Create USB sticks that perform a full offline installation of any NixOS configuration.",
        "languages": {
            "Nix": 12758
        }
    },
    {
        "name": "nix-bwrapper",
        "description": "A user-friendly method of sandboxing applications using bubblewrap with portals support.",
        "languages": {
            "Nix": 13784
        }
    },
    {
        "name": "ollama-flake",
        "description": "A nix flake for https://github.com/ollama/ollama",
        "languages": {
            "Nix": 7091
        }
    },
    {
        "name": "dotfiles",
        "description": null,
        "languages": {
            "Nix": 204225,
            "Rust": 54999,
            "Shell": 17063,
            "Meson": 826
        }
    },
    {
        "name": "portable-nixos-container",
        "description": null,
        "languages": {
            "Nix": 1374
        }
    },
    {
        "name": "nixfiles",
        "description": "NixOS home and servers configuration",
        "languages": {
            "Nix": 99852,
            "Shell": 6921,
            "CSS": 6124,
            "KakouneScript": 4780,
            "Python": 1156
        }
    },
    {
        "name": "dotfiles",
        "description": null,
        "languages": {
            "Nix": 28438,
            "Shell": 9944,
            "Vim Script": 3204,
            "Ruby": 53
        }
    },
    {
        "name": "xhmm",
        "description": "Extra home manager modules",
        "languages": {
            "Nix": 35918
        }
    },
    {
        "name": "machine",
        "description": "My OS, development tools, and dotfiles, as code",
        "languages": {
            "Nix": 38937,
            "Shell": 1750
        }
    },
    {
        "name": "elixir_nix_example",
        "description": null,
        "languages": {
            "Nix": 15825,
            "Elixir": 5456,
            "Shell": 23
        }
    },
    {
        "name": "oceanix",
        "description": "OpenCore bootloader manager with Nix",
        "languages": {
            "Nix": 47882
        }
    },
    {
        "name": "teraflops",
        "description": "a terraform ops tool which is sure to be a flop",
        "languages": {
            "Nix": 70885,
            "Python": 33556
        }
    },
    {
        "name": "benchmarks-archive",
        "description": "Infrastucture benchmarks",
        "languages": {
            "Nix": 32831,
            "JavaScript": 19576,
            "Makefile": 1216,
            "Shell": 1132
        }
    },
    {
        "name": "nixpkgs",
        "description": "Nix Packages collection used in Nubank",
        "languages": {
            "Nix": 5396,
            "Clojure": 1733
        }
    },
    {
        "name": "nixpkgs-f2k",
        "description": "my personal package repository (binary cache included!)",
        "languages": {
            "Nix": 30782
        }
    },
    {
        "name": "nix-new-rails-app",
        "description": "Initialize Rails applications using Nix and development environments (nix-shell)",
        "languages": {
            "Nix": 709,
            "Shell": 277,
            "Ruby": 55
        }
    },
    {
        "name": "nix-security",
        "description": "Nix/NixOS security tool collections",
        "languages": {
            "Nix": 85273,
            "Ruby": 2088
        }
    },
    {
        "name": "nixmodules",
        "description": null,
        "languages": {
            "Nix": 127052,
            "Python": 18285,
            "Shell": 7782,
            "Rust": 5090,
            "JavaScript": 1991
        }
    },
    {
        "name": "coq-nix-toolbox",
        "description": "Nix helper scripts to automate local builds and CI [maintainers=@CohenCyril,@Zimmi48]",
        "languages": {
            "Nix": 30206,
            "Shell": 7124,
            "Emacs Lisp": 170,
            "Makefile": 56
        }
    },
    {
        "name": "NixOS",
        "description": "A feature-rich NixOS configuration that can double as a learning resource.",
        "languages": {
            "Nix": 104165,
            "Lua": 26264,
            "Shell": 17272,
            "Python": 14383,
            "Vim Script": 10036,
            "CSS": 1231
        }
    },
    {
        "name": "instantNIX",
        "description": "instantOS tools packaged for the Nix package manager (and NixOS)",
        "languages": {
            "Nix": 61494,
            "C": 45449,
            "Python": 6843,
            "Shell": 2785,
            "Makefile": 1221
        }
    },
    {
        "name": "neovim",
        "description": "My customized version of Neovim, built with Nix.",
        "languages": {
            "Nix": 177419,
            "Shell": 134
        }
    },
    {
        "name": "cardano-world",
        "description": "Cardano world provides preprod and preview cardano networks, configuration documentation and miscellaneous automation.",
        "languages": {
            "Nix": 329989,
            "Python": 27747,
            "Shell": 5979
        }
    },
    {
        "name": "nixos-licheepi4a",
        "description": "NixOS Running on LicheePi 4A(RISC-V)",
        "languages": {
            "Nix": 27046
        }
    },
    {
        "name": "nixos",
        "description": "Nixos configurations for my local cluster of machines.",
        "languages": {
            "Nix": 154351,
            "Shell": 1525
        }
    },
    {
        "name": "nix-configs",
        "description": null,
        "languages": {
            "Nix": 132557,
            "Lua": 34518,
            "Shell": 1586
        }
    },
    {
        "name": "nixos-cloud",
        "description": "A cookbook for deploying NixOS to cloud servers",
        "languages": {
            "Nix": 4069,
            "HCL": 561
        }
    },
    {
        "name": "nix-config",
        "description": "NixOS/nix-darwin dotfiles",
        "languages": {
            "Nix": 19304,
            "Shell": 162
        }
    },
    {
        "name": "fetch.macro",
        "description": "Allows you to build fetcher function by URL at compile-time.",
        "languages": {
            "Nix": 167000,
            "JavaScript": 13452,
            "Rust": 12115,
            "Shell": 149
        }
    },
    {
        "name": "nixos-wiki-infra",
        "description": "This project contains the setup of https://wiki.nixos.org",
        "languages": {
            "Nix": 22057,
            "HCL": 5677,
            "Python": 4377,
            "Shell": 603
        }
    },
    {
        "name": "nix-node",
        "description": "The closest thing to nvm on Nix!",
        "languages": {
            "Nix": 22742,
            "JavaScript": 1928
        }
    },
    {
        "name": "nix-project-defaults",
        "description": "I like to work inside nix-shell and I'd like to git track my .nix files for projects but I don't want to push my .nix files upstream. Here's a collection of the .nix files that I can just symlink to from projects.",
        "languages": {
            "Nix": 8188
        }
    },
    {
        "name": "cabal-userguide",
        "description": "A handy user guide for the Cabal build tool",
        "languages": {
            "Nix": 1906
        }
    },
    {
        "name": "arewehackersyet",
        "description": "Tracking the availability of Kali Linux packages in NixOS",
        "languages": {
            "Nix": 15415,
            "HTML": 5656,
            "Ruby": 599,
            "Shell": 412
        }
    },
    {
        "name": "configs",
        "description": "My configuration files",
        "languages": {
            "Nix": 55254,
            "Emacs Lisp": 15363,
            "Shell": 14600,
            "Haskell": 5179
        }
    },
    {
        "name": "dotfiles",
        "description": "My NixOS dotfiles. Friends call it Bird OS.",
        "languages": {
            "Nix": 382322,
            "Shell": 28923,
            "CSS": 8436,
            "SCSS": 6875,
            "Perl": 5986
        }
    },
    {
        "name": "nixcfg",
        "description": "A modular, Wayland-enabled NixOS configuration.",
        "languages": {
            "Nix": 163852,
            "Scheme": 87569,
            "Shell": 9847,
            "Clojure": 3876,
            "Python": 3799,
            "CSS": 3647,
            "Ruby": 3565,
            "Nu": 2756,
            "Nushell": 2536
        }
    },
    {
        "name": "nixos",
        "description": "My NixOS configuration",
        "languages": {
            "Nix": 15912
        }
    },
    {
        "name": "flakes",
        "description": "Some packages I use on NixOS",
        "languages": {
            "Nix": 25730,
            "Haskell": 4545
        }
    },
    {
        "name": "haskell-incremental-nix-example",
        "description": "Example to illustrate how to set up incremental Haskell Nix builds",
        "languages": {
            "Nix": 1546,
            "Haskell": 375
        }
    },
    {
        "name": "template-nix",
        "description": "The nix template, configured for Gitpod (www.gitpod.io) to give you pre-built, nix based ephemeral development environments in the cloud.",
        "languages": {
            "Nix": 284
        }
    },
    {
        "name": "nix-ccache",
        "description": "A flake to remotely build and/or cache C/C++ compilation, using recursive Nix",
        "languages": {
            "Nix": 3063,
            "Shell": 2143,
            "C++": 93
        }
    },
    {
        "name": "gesetze",
        "description": "German laws from https://www.gesetze-im-internet.de/ in plain text format (updated daily)",
        "languages": {
            "Nix": 425
        }
    },
    {
        "name": "helloworld",
        "description": "A sample Rust+Nix project for a blogpost",
        "languages": {
            "Nix": 5781,
            "Rust": 3282,
            "Dockerfile": 492,
            "Dhall": 454
        }
    },
    {
        "name": "nix-cde",
        "description": "Nix Common Development Environment",
        "languages": {
            "Nix": 32487,
            "Python": 1146
        }
    },
    {
        "name": "nix-flake-crowdsec",
        "description": "A nix flake for running Crowdsec on NixOS",
        "languages": {
            "Nix": 13495
        }
    },
    {
        "name": "zellij-nix",
        "description": "Zellij Nix Environment",
        "languages": {
            "Nix": 8879,
            "Just": 452
        }
    },
    {
        "name": "nix-adt",
        "description": "A library for using algebraic data types in the Nix expression language.",
        "languages": {
            "Nix": 30564
        }
    },
    {
        "name": "shajra-provisioning",
        "description": "Personal provisioning machines with Nix",
        "languages": {
            "Nix": 238846,
            "Emacs Lisp": 31269,
            "Lua": 19006,
            "C": 6235,
            "Shell": 3954,
            "AppleScript": 1122,
            "Makefile": 76
        }
    },
    {
        "name": "nixos-zerotier-dns",
        "description": "My ZeroTier DNS modules",
        "languages": {
            "Nix": 8159,
            "Shell": 4949
        }
    },
    {
        "name": "raspberrypi-nixos-example",
        "description": "The simplest possible way to begin using and extending a NixOS Configuration with a Raspberry Pi",
        "languages": {
            "Nix": 2197
        }
    },
    {
        "name": "posimacs",
        "description": "Emacs + tools in home manager module distribution format",
        "languages": {
            "Nix": 205052,
            "Emacs Lisp": 105482
        }
    },
    {
        "name": "nixos_cfg",
        "description": null,
        "languages": {
            "Nix": 215894,
            "Haskell": 25028,
            "Shell": 5461,
            "Lua": 1285
        }
    },
    {
        "name": "homelab",
        "description": null,
        "languages": {
            "Nix": 7966
        }
    },
    {
        "name": "nixos-config",
        "description": "Dell XPS 13 NixOS and home-manager configuration",
        "languages": {
            "Nix": 63507
        }
    },
    {
        "name": "kevin-nix",
        "description": "NixOS for the Samsung Chromebook Plus (kevin)",
        "languages": {
            "Nix": 22659,
            "Shell": 2648
        }
    },
    {
        "name": "cake",
        "description": null,
        "languages": {
            "Nix": 15296
        }
    },
    {
        "name": "nixos-config",
        "description": "NixOS configuration.",
        "languages": {
            "Nix": 34134,
            "Shell": 3010
        }
    },
    {
        "name": "dotfiles",
        "description": "My dotfiles always changing \ud83d\ude48",
        "languages": {
            "Nix": 239404,
            "CSS": 137548,
            "Lua": 3650,
            "Python": 651
        }
    },
    {
        "name": "nixify",
        "description": "Simple and extensible nix build library for real-world projects",
        "languages": {
            "Nix": 65105
        }
    },
    {
        "name": "flakes",
        "description": null,
        "languages": {
            "Nix": 125240,
            "Shell": 10876,
            "Just": 287
        }
    },
    {
        "name": "dotfiles",
        "description": "My collection of dotfiles",
        "languages": {
            "Nix": 113319,
            "Haskell": 45191,
            "Emacs Lisp": 36020,
            "Shell": 4595,
            "CSS": 4307,
            "YASnippet": 1734
        }
    },
    {
        "name": "dotfiles",
        "description": "I definitely don't understand the 'dot' concept",
        "languages": {
            "Nix": 112833,
            "Shell": 26260
        }
    },
    {
        "name": "nixos-config",
        "description": "Personal NixOS configuration using flakes and home-manager.",
        "languages": {
            "Nix": 108438,
            "Lua": 33248,
            "Shell": 25263,
            "SCSS": 6335,
            "CSS": 1276
        }
    },
    {
        "name": "proxsign-nix",
        "description": "Easy way to use proxsign on Linux",
        "languages": {
            "Nix": 2158
        }
    },
    {
        "name": "nix-error-proposal",
        "description": "A proposal for enhancing errors in Nix.",
        "languages": {
            "Nix": 13567,
            "Rust": 8106,
            "Shell": 5411
        }
    },
    {
        "name": "nixos-waayway",
        "description": null,
        "languages": {
            "Nix": 14748,
            "CSS": 4224,
            "Shell": 1359,
            "Just": 1193
        }
    },
    {
        "name": "cardano-haskell-packages",
        "description": "Metadata for Cardano's Haskell package repository",
        "languages": {
            "Nix": 17914,
            "Shell": 17857,
            "HTML": 545
        }
    },
    {
        "name": "system",
        "description": "Declarative system configuration for all my machines",
        "languages": {
            "Nix": 48714,
            "Shell": 30523,
            "Just": 2731
        }
    },
    {
        "name": "waitforsocket",
        "description": "A simple program to help you react more quickly to servers and services coming back online.",
        "languages": {
            "Nix": 9132,
            "Haskell": 8602
        }
    },
    {
        "name": "nixos-vm-examples",
        "description": "Examples of how to build and run NixOS VMs with nix",
        "languages": {
            "Nix": 3948,
            "Shell": 370
        }
    },
    {
        "name": "idrispkgs",
        "description": "Old Nix expressions for Idris packaging. Idris support moved into Nixpkgs!",
        "languages": {
            "Nix": 5404,
            "Idris": 144
        }
    },
    {
        "name": "nix-shells",
        "description": "Assorted Nix development shells",
        "languages": {
            "Nix": 426758,
            "Shell": 1617,
            "Haskell": 126,
            "JavaScript": 83
        }
    },
    {
        "name": "emergency-kexec",
        "description": "Kexec into an in-memory emergency system",
        "languages": {
            "Nix": 3490,
            "Shell": 3265,
            "Awk": 1403
        }
    },
    {
        "name": "nixos-yubikey",
        "description": "Create NixOS ISO images for use with initializing Yubikeys",
        "languages": {
            "Nix": 36375
        }
    },
    {
        "name": "flakes",
        "description": "NixOS/MacOS Nix Minimalist-Hardened-Privacy-oriented Configs",
        "languages": {
            "Nix": 101916,
            "Shell": 9355,
            "Vim Script": 8135,
            "CSS": 3104
        }
    },
    {
        "name": "nix_config",
        "description": "\u6211\u7684Nix/NixOS\u914d\u7f6e My Nix/NixOS Config",
        "languages": {
            "Nix": 164812,
            "Shell": 2638,
            "Makefile": 351
        }
    },
    {
        "name": "dotfiles",
        "description": "Dotfiles",
        "languages": {
            "Nix": 233677,
            "Org": 127601,
            "Python": 67267,
            "Shell": 55354,
            "Haskell": 54831,
            "CSS": 4176,
            "Lua": 2674
        }
    },
    {
        "name": "dmerge",
        "description": "A mini merge DSL for data overlays",
        "languages": {
            "Nix": 16725,
            "Shell": 85
        }
    },
    {
        "name": "nixos",
        "description": null,
        "languages": {
            "Nix": 68959
        }
    },
    {
        "name": "clonix",
        "description": "Declaratively manage rsync deployments in NixOS/Home-manager",
        "languages": {
            "Nix": 15311
        }
    },
    {
        "name": "tangerinixos",
        "description": "A NixOS with a bit of a citrus flavor.",
        "languages": {
            "Nix": 3938,
            "Shell": 331
        }
    },
    {
        "name": "nixfiles",
        "description": "Some of my .nix files",
        "languages": {
            "Nix": 58946,
            "Lua": 18885,
            "Vim Script": 9161,
            "Shell": 2554,
            "Makefile": 1653
        }
    },
    {
        "name": "nixjs",
        "description": "A nix overlay containing a collection of node versions and associated tools",
        "languages": {
            "Nix": 3657202
        }
    },
    {
        "name": "nixos.fi",
        "description": "NixOS netboot server configurations",
        "languages": {
            "Nix": 4161
        }
    },
    {
        "name": "nixpkgs-xr",
        "description": "Automated packages for XR/AR/VR tools and apps for NixOS [maintainer=@Scrumplex]",
        "languages": {
            "Nix": 9967
        }
    },
    {
        "name": "opam2nix-packages",
        "description": "nix expressions for the official opam repository, using opam2nix",
        "languages": {
            "Nix": 22801,
            "Shell": 5645,
            "Python": 4187
        }
    },
    {
        "name": "nix-xcodeenvtests",
        "description": "Nix xcode env tests",
        "languages": {
            "Nix": 13242,
            "Objective-C": 4743,
            "PHP": 3314,
            "Shell": 1850
        }
    },
    {
        "name": "dev-container",
        "description": "A devcontainer built on Debian and powered by Nix.",
        "languages": {
            "Nix": 5462,
            "Dockerfile": 3367,
            "Shell": 2296
        }
    },
    {
        "name": "netkit.nix",
        "description": "Verstile tools for advanced networking scenarios in NixOS",
        "languages": {
            "Nix": 45123,
            "Shell": 617
        }
    },
    {
        "name": "nixos-configs",
        "description": "Config flake for personal systems and home devices",
        "languages": {
            "Nix": 198743,
            "Shell": 34407,
            "Emacs Lisp": 21370,
            "CSS": 4245,
            "Python": 3492
        }
    },
    {
        "name": "nixos-configuration",
        "description": "nixos \u81ea\u7528\u914d\u7f6e",
        "languages": {
            "Nix": 7099
        }
    },
    {
        "name": "nix-prisma-example",
        "description": "An example Prisma project using nix",
        "languages": {
            "Nix": 1009,
            "TSQL": 658,
            "TypeScript": 281
        }
    },
    {
        "name": "nix-shell-workshop",
        "description": "https://nixos.org/wiki/NixOS_Chaos_Communication_Camp_2015#workshop:_nix-shell",
        "languages": {
            "Nix": 2078,
            "Perl": 1023,
            "C++": 382,
            "Makefile": 262,
            "Go": 235,
            "QMake": 131,
            "Python": 94,
            "Rust": 45
        }
    },
    {
        "name": "nixos-t2-iso",
        "description": "A flake for building NixOS installers that work on T2 Macs.",
        "languages": {
            "Nix": 1885
        }
    },
    {
        "name": "ssbm-nix",
        "description": "Nix expressions for Super Smash Bros. Melee players.",
        "languages": {
            "Nix": 21312,
            "C": 910
        }
    },
    {
        "name": "nas",
        "description": "configuration for my NAS",
        "languages": {
            "Nix": 4857,
            "Shell": 153
        }
    },
    {
        "name": "dotfiles",
        "description": "Configuration for systems I use",
        "languages": {
            "Nix": 9164,
            "Scheme": 3646
        }
    },
    {
        "name": "ghc-artefact-nix",
        "description": "Create environments with GHC HEAD artefacts",
        "languages": {
            "Nix": 11475,
            "Shell": 2209
        }
    },
    {
        "name": "NixOS",
        "description": "My reproducible NixOS system",
        "languages": {
            "Nix": 179504,
            "Shell": 58322,
            "Python": 2507
        }
    },
    {
        "name": "tuxedo-nixos",
        "description": "Tuxedo Control Center Derivation and Module for NixOS",
        "languages": {
            "Nix": 653593,
            "Shell": 885
        }
    },
    {
        "name": "dotfiles",
        "description": "My dotfiles.",
        "languages": {
            "Nix": 49833,
            "Shell": 9779,
            "Haskell": 2187,
            "Vim Script": 165,
            "HTML": 62
        }
    },
    {
        "name": "nixos-x260",
        "description": "Contains the configuration of every home computers",
        "languages": {
            "Nix": 156118,
            "Shell": 1318
        }
    },
    {
        "name": "nix-home",
        "description": "My Nix home-manager configuration",
        "languages": {
            "Nix": 10820
        }
    },
    {
        "name": "system-setup",
        "description": "Recipe for creating my NixOS machines. (ZFS and Sway)",
        "languages": {
            "Nix": 136738,
            "Shell": 14743,
            "HTML": 2688,
            "Python": 2544
        }
    },
    {
        "name": "bloohm",
        "description": "visual bloom filter to display process status as neotrellis m4 output",
        "languages": {
            "Nix": 6075,
            "Python": 2712,
            "Haskell": 2503,
            "Shell": 24
        }
    },
    {
        "name": "nix-policy",
        "description": "Experiments with Nix and Open Policy Agent",
        "languages": {
            "Nix": 5614,
            "Rust": 3610,
            "Nushell": 1024
        }
    },
    {
        "name": "nixos-vfio",
        "description": "NixOS modules to automate vfio setups",
        "languages": {
            "Nix": 59067
        }
    },
    {
        "name": "nix-flake",
        "description": null,
        "languages": {
            "Nix": 27703
        }
    },
    {
        "name": "nosys",
        "description": "No system, no hassle",
        "languages": {
            "Nix": 8276,
            "Shell": 86
        }
    },
    {
        "name": "nixfiles",
        "description": "Nix configuration files",
        "languages": {
            "Nix": 371575,
            "Shell": 29954,
            "Emacs Lisp": 15266,
            "JavaScript": 12258,
            "HTML": 4743,
            "Liquid": 2644,
            "CSS": 2463,
            "Makefile": 716
        }
    },
    {
        "name": "steam-fetcher",
        "description": "A Nix fetcher for Steam apps",
        "languages": {
            "Nix": 4087,
            "Shell": 528
        }
    },
    {
        "name": "dotfiles",
        "description": "NixOS is great",
        "languages": {
            "Nix": 56773,
            "Haskell": 4575,
            "Rust": 3060,
            "Lua": 730,
            "Shell": 708
        }
    },
    {
        "name": "nixos-config",
        "description": "My NixOS configuration",
        "languages": {
            "Nix": 2069895,
            "CSS": 18036,
            "Shell": 5114,
            "Haskell": 3516,
            "Clojure": 1049,
            "Makefile": 187
        }
    },
    {
        "name": "nix-cue",
        "description": "Validate and generate configuration files using Nix and Cue",
        "languages": {
            "Nix": 4456,
            "CUE": 1015
        }
    },
    {
        "name": "starlight-os",
        "description": "nixos based linux operating system for software development",
        "languages": {
            "Nix": 102010,
            "Shell": 1513,
            "Makefile": 819
        }
    },
    {
        "name": "dreampkgs",
        "description": "A collection of software packages managed with dream2nix [maintainer=@DavHau]",
        "languages": {
            "Nix": 6851
        }
    },
    {
        "name": "alertmanager-ntfy",
        "description": "Relay prometheus alertmanager alerts to ntfy.sh",
        "languages": {
            "Nix": 4324,
            "Go": 2669
        }
    },
    {
        "name": "flk",
        "description": "Cold and spike-y \u2500 a perfect place to build your dotfiles from the ground up!",
        "languages": {
            "Nix": 1206822,
            "Lua": 376903,
            "Shell": 190856,
            "Python": 27156,
            "HTML": 25953,
            "CSS": 9495,
            "SCSS": 3892,
            "Go": 1480
        }
    },
    {
        "name": "pkgs-modules",
        "description": "Working group for using modules for packages",
        "languages": {
            "Nix": 8184
        }
    },
    {
        "name": "nix2aci",
        "description": "Machinery for creating and running ACIs on Linux systems where Nix(OS) and rkt are available",
        "languages": {
            "Nix": 14286,
            "Python": 3708,
            "Shell": 395
        }
    },
    {
        "name": "nixos_config",
        "description": "NixOS/Nix configurations I use...",
        "languages": {
            "Nix": 55137
        }
    },
    {
        "name": "trilby",
        "description": "\ud83d\udc52 Trilby is a NixOS-based operating system that is modeled after Fedora Linux. It provides new users with sensible defaults and a great out-of-the-box experience.",
        "languages": {
            "Nix": 64445,
            "Haskell": 56855,
            "Lua": 7535,
            "Python": 2016,
            "Shell": 455
        }
    },
    {
        "name": "nix-config",
        "description": " my nix config files ",
        "languages": {
            "Nix": 169623,
            "Shell": 55468,
            "Vim Script": 20370,
            "Lua": 4346
        }
    },
    {
        "name": "darwin-build-box",
        "description": "Darwin build box for Nix community members",
        "languages": {
            "Nix": 2835
        }
    },
    {
        "name": "linux-desktop",
        "description": "My system configuration.",
        "languages": {
            "Nix": 41663,
            "Shell": 30564,
            "SCSS": 1937,
            "Just": 891,
            "Ruby": 100
        }
    },
    {
        "name": "nix-straight.el",
        "description": null,
        "languages": {
            "Nix": 5476,
            "Emacs Lisp": 1840
        }
    },
    {
        "name": "dotfiles",
        "description": "My over complex system configurations ",
        "languages": {
            "Nix": 393892,
            "JavaScript": 164560,
            "SCSS": 56875,
            "Lua": 19924,
            "Shell": 14312,
            "Python": 1031,
            "Makefile": 851,
            "Just": 282,
            "C++": 81,
            "Go": 74,
            "Rust": 42,
            "TypeScript": 29
        }
    },
    {
        "name": "easy-dhall-nix",
        "description": "Derivations for easily downloading Dhall binaries and putting them to use.",
        "languages": {
            "Nix": 6548,
            "Python": 2625,
            "Shell": 139
        }
    },
    {
        "name": "dos-rs",
        "description": "Create DOS protected mode programs with Rust!",
        "languages": {
            "Nix": 7969,
            "Rust": 3848,
            "Makefile": 663
        }
    },
    {
        "name": "trs80-100-schematic",
        "description": "A transcript of the TRS80 Model 100 schematic",
        "languages": {
            "Nix": 288
        }
    },
    {
        "name": "talon-nix",
        "description": "Auto packaging for Talon Voice [maintainer=@adisbladis]",
        "languages": {
            "Nix": 4549,
            "Python": 1897
        }
    },
    {
        "name": "nixexprs",
        "description": "nix stuff",
        "languages": {
            "Nix": 698417,
            "Shell": 6719
        }
    },
    {
        "name": "dotfiles",
        "description": "Literally just my \"dotfiles\" (except most don't even have dots in front of them). Not interesting, but 'kay.",
        "languages": {
            "Nix": 104638,
            "Lua": 21337,
            "Vim Script": 18603,
            "Vim Snippet": 10068,
            "Shell": 3866,
            "HCL": 1259,
            "Python": 824,
            "Perl": 598
        }
    },
    {
        "name": "sandwatch",
        "description": "Remember how long commands take, tell me if I have enough time to make a sandwich",
        "languages": {
            "Nix": 7023,
            "Haskell": 4830
        }
    },
    {
        "name": "nixpkgs-stackage",
        "description": "Stackage overlay for Nixpkgs",
        "languages": {
            "Nix": 35859446,
            "Shell": 582
        }
    },
    {
        "name": "nix-devops-cheatsheet",
        "description": "nix flake (preset) templates for the production of devops",
        "languages": {
            "Nix": 50946,
            "Haskell": 284,
            "Shell": 215,
            "Just": 156
        }
    },
    {
        "name": "dotfiles",
        "description": "Configure all the things!",
        "languages": {
            "Nix": 218060,
            "Emacs Lisp": 57465
        }
    },
    {
        "name": "home-manager-config-template",
        "description": "A Nix flake template for Home Manager configurations [maintainer=@lucperkins] ",
        "languages": {
            "Nix": 2014
        }
    },
    {
        "name": "yarn-nix",
        "description": "Yacine's repository of Nix expressions",
        "languages": {
            "Nix": 44500,
            "C": 20728,
            "Vim Script": 9222,
            "Shell": 2345,
            "Ruby": 2063
        }
    },
    {
        "name": "NixNG",
        "description": null,
        "languages": {
            "Nix": 187326,
            "Haskell": 6317,
            "Shell": 3166,
            "Jinja": 375,
            "Emacs Lisp": 348
        }
    },
    {
        "name": "linux-3ds.nix",
        "description": "A Linux system for your 3DS, built with Nix",
        "languages": {
            "Nix": 11898,
            "Shell": 218
        }
    },
    {
        "name": "stable-diffusion-flake",
        "description": null,
        "languages": {
            "Nix": 4252,
            "Shell": 598
        }
    },
    {
        "name": "nix-config",
        "description": null,
        "languages": {
            "Nix": 259661,
            "Shell": 37295,
            "JavaScript": 16011,
            "Lua": 12601,
            "Emacs Lisp": 11542,
            "CSS": 1269,
            "Vim Snippet": 1166,
            "Vim Script": 633
        }
    },
    {
        "name": "sanix",
        "description": "Sane stable stateless NixOS setup",
        "languages": {
            "Nix": 1269,
            "Shell": 477
        }
    },
    {
        "name": "bSpokeLight",
        "description": "Custom firmware for the YQ8003 bicycle spoke light",
        "languages": {
            "Nix": 16865,
            "Haskell": 9760,
            "C": 6098,
            "Dockerfile": 498,
            "Makefile": 384
        }
    },
    {
        "name": "serokell.nix",
        "description": "Serokell Nix infrastructure library",
        "languages": {
            "Nix": 105092,
            "Python": 2994,
            "Shell": 1233
        }
    },
    {
        "name": "nixpkgs-swh",
        "description": "Send nixpkgs tarballs to Software Heritage [maintainer=@nlewo]",
        "languages": {
            "Nix": 10731,
            "Python": 5164,
            "Shell": 3833
        }
    },
    {
        "name": "nur-packages",
        "description": "My personal NUR repository",
        "languages": {
            "Nix": 404245,
            "Python": 765,
            "JavaScript": 597,
            "Shell": 298
        }
    },
    {
        "name": "nix-shell-mix",
        "description": "A bunch of nix-shell files for inspiration.",
        "languages": {
            "Nix": 4143
        }
    },
    {
        "name": "rails-nix",
        "description": "Example Rails 6 app using nix for dependencies",
        "languages": {
            "Nix": 29407,
            "Ruby": 21915,
            "HTML": 5671,
            "JavaScript": 3779,
            "CSS": 709,
            "Shell": 113
        }
    },
    {
        "name": "nixos-config",
        "description": "My personal NixOS configurations & NUR.",
        "languages": {
            "Nix": 383564,
            "Nushell": 18276,
            "Lua": 7856,
            "Just": 3169,
            "CSS": 1893,
            "Shell": 1124,
            "TypeScript": 947
        }
    },
    {
        "name": "reflex-stone",
        "description": "Template repository for writing GHCJS/Reflex apps targeting static sites without a backend.",
        "languages": {
            "Nix": 1791,
            "Haskell": 1537
        }
    },
    {
        "name": "glot-images",
        "description": null,
        "languages": {
            "Nix": 190796,
            "Shell": 2318,
            "JavaScript": 656
        }
    },
    {
        "name": "nixform",
        "description": "define terraform infrastructure in nix",
        "languages": {
            "Nix": 1154,
            "Shell": 352
        }
    },
    {
        "name": "nix-build-cache",
        "description": "Extends stdenv.mkDerivation based builds with a distributed build cache on Amazon S3.",
        "languages": {
            "Nix": 2295
        }
    },
    {
        "name": "config",
        "description": "Personal configuration framework.",
        "languages": {
            "Nix": 165652,
            "Shell": 39534,
            "Emacs Lisp": 21752,
            "Lua": 3258,
            "Elixir": 59
        }
    },
    {
        "name": "streamly-examples",
        "description": "Examples for Streamly",
        "languages": {
            "Nix": 6893,
            "Makefile": 218
        }
    },
    {
        "name": "coding-with-eyes-closed",
        "description": "Book for rehabilitative coders \ud83d\udcda",
        "languages": {
            "Nix": 1690
        }
    },
    {
        "name": "nix-systems",
        "description": null,
        "languages": {
            "Nix": 260352,
            "Shell": 1190
        }
    },
    {
        "name": "nixos-vsliveshare",
        "description": "Live Share support in Visual Studio Code for NixOS",
        "languages": {
            "Nix": 10930,
            "C": 55
        }
    },
    {
        "name": "nixos-super-minimal",
        "description": null,
        "languages": {
            "Nix": 7400
        }
    },
    {
        "name": "Iaia",
        "description": "A recursion scheme library for Idris.",
        "languages": {
            "Nix": 7468,
            "Idris": 6837
        }
    },
    {
        "name": "dotfiles",
        "description": null,
        "languages": {
            "Nix": 243353,
            "Emacs Lisp": 52811,
            "Shell": 42742,
            "Perl": 12247,
            "HTML": 9477,
            "Python": 3881,
            "C": 1934,
            "CSS": 310,
            "Makefile": 69
        }
    },
    {
        "name": "base16-nix",
        "description": "Home manager module for themeing programs with base16 templates",
        "languages": {
            "Nix": 2058,
            "Python": 1333,
            "Shell": 703
        }
    },
    {
        "name": "ic-nix",
        "description": "Build Internet Computer projects with Nix",
        "languages": {
            "Nix": 46536,
            "Python": 3095,
            "Makefile": 1678
        }
    },
    {
        "name": "nixos-config",
        "description": "My NixOS configuration",
        "languages": {
            "Nix": 40832,
            "Shell": 1784
        }
    },
    {
        "name": "nix-config",
        "description": "My NixOS configuration files. Only used for my self-hosted infra at the moment.",
        "languages": {
            "Nix": 259965,
            "Shell": 34942,
            "Lua": 26699,
            "Vim Script": 10329,
            "CMake": 808,
            "Meson": 465,
            "C++": 284,
            "Rust": 45
        }
    },
    {
        "name": "example_python_project",
        "description": null,
        "languages": {
            "Nix": 8292,
            "Python": 188
        }
    },
    {
        "name": "marsnix",
        "description": "Taking Nix Offline",
        "languages": {
            "Nix": 2176
        }
    },
    {
        "name": "asterisk-dongle-setup",
        "description": "Playground project aimed at setting up Asterisk server and the GSM stack on Nix.",
        "languages": {
            "Nix": 29041,
            "Python": 20144,
            "C": 2978,
            "Shell": 2200,
            "Vim Script": 283
        }
    },
    {
        "name": "nixos-06cb-009a-fingerprint-sensor",
        "description": "Nix flake for driving the 06cb:009a fingerprint sensor on NixOS",
        "languages": {
            "Nix": 12242,
            "Python": 98
        }
    },
    {
        "name": "nur-packages",
        "description": "Lan Tian's NUR Packages",
        "languages": {
            "Nix": 300064,
            "Python": 27289,
            "Shell": 16016,
            "C": 814,
            "PHP": 151
        }
    },
    {
        "name": "rose-pine-hyprcursor",
        "description": "BreezeX RosePine for Hyprcursor",
        "languages": {
            "Nix": 1516,
            "Shell": 211
        }
    },
    {
        "name": "pkgs-modules",
        "description": "The Ideal interface for configuring packages",
        "languages": {
            "Nix": 1255
        }
    },
    {
        "name": "nixos-config",
        "description": "iosmanthus's nixos configuration",
        "languages": {
            "Nix": 125184,
            "Lua": 89048,
            "Go": 12291,
            "HCL": 9460,
            "Python": 7291,
            "Jsonnet": 4355,
            "Shell": 1619,
            "Makefile": 314
        }
    },
    {
        "name": "thinking-with-functions",
        "description": "A brief presentation on Denotational Design, based on Conal Elliott's work",
        "languages": {
            "Nix": 3890,
            "Emacs Lisp": 3185,
            "Haskell": 1531,
            "Makefile": 989,
            "Shell": 78
        }
    },
    {
        "name": "dotfiles",
        "description": "My MacOS and NixOS configurations, using home-manager, i3-gaps and sway",
        "languages": {
            "Nix": 116356,
            "Lua": 27127,
            "Shell": 24315
        }
    },
    {
        "name": "fc-nixos",
        "description": "FC NixOS platform next generation",
        "languages": {
            "Nix": 1320247,
            "Python": 687455,
            "Rust": 27053,
            "Shell": 21031,
            "Lua": 4731,
            "Ruby": 870
        }
    },
    {
        "name": "sphinxcontrib-httpexample",
        "description": "Adds example directive for sphinx-contrib httpdomain",
        "languages": {
            "Nix": 361768,
            "Python": 55929,
            "Makefile": 1757,
            "JavaScript": 1589,
            "CSS": 686
        }
    },
    {
        "name": "dotfiles",
        "description": "Config files for my Linux environment.",
        "languages": {
            "Nix": 65331,
            "Lua": 29264,
            "Shell": 17140,
            "CSS": 7226,
            "Less": 3425
        }
    },
    {
        "name": "queued-build-hook",
        "description": "Queue and retry Nix post-build-hook [maintainer=@adisbladis, @Mic92]",
        "languages": {
            "Nix": 16256,
            "Go": 10239
        }
    },
    {
        "name": "jenkins-nix-ci",
        "description": "A NixOS module for Jenkins, optimized specifically for running projects using Nix.",
        "languages": {
            "Nix": 25787,
            "Groovy": 2211
        }
    },
    {
        "name": "local-nix-cache",
        "description": "A poor and hacky attempt at re-serving local nix packages that came from trusted sources",
        "languages": {
            "Nix": 224874,
            "Rust": 22302
        }
    },
    {
        "name": "network",
        "description": "Personal servers and also my router config.",
        "languages": {
            "Nix": 108782,
            "Shell": 17826,
            "Python": 7011,
            "PHP": 5358,
            "HTML": 808
        }
    },
    {
        "name": "rust-esp-nix",
        "description": "Nix files for development on the esp32 in rust using the esp-idf framework",
        "languages": {
            "Nix": 15525
        }
    },
    {
        "name": "nix-hs",
        "description": "Haskell + nixpkgs = nix-hs",
        "languages": {
            "Nix": 27666,
            "Shell": 3081,
            "Haskell": 308
        }
    },
    {
        "name": "nix-stdlib",
        "description": "experimental nix prelude",
        "languages": {
            "Nix": 12339
        }
    },
    {
        "name": "nixos_home",
        "description": "My NixOS home-manager configuration",
        "languages": {
            "Nix": 37723,
            "Emacs Lisp": 21213,
            "Haskell": 17451,
            "Python": 3833
        }
    },
    {
        "name": "coding-in-motion",
        "description": "Source code for the \"Coding in Motion\" series.",
        "languages": {
            "Nix": 8300,
            "TypeScript": 5671,
            "Python": 4067,
            "HTML": 154
        }
    },
    {
        "name": "IceDOS",
        "description": "A C\ud83e\udd76\ud83e\udd76l NixOS configuration, based on my needs. Uses Hyprland by default.",
        "languages": {
            "Nix": 131849,
            "Shell": 101436,
            "GLSL": 16210,
            "Less": 6242,
            "Lua": 6184,
            "CSS": 782
        }
    },
    {
        "name": "flakes",
        "description": null,
        "languages": {
            "Nix": 97172,
            "Vim Script": 16489,
            "Emacs Lisp": 15580,
            "Haskell": 9551,
            "Shell": 366
        }
    },
    {
        "name": "dotfiles",
        "description": "My personal dotfiles.",
        "languages": {
            "Nix": 90765,
            "Shell": 74988,
            "Vim Script": 20136,
            "Emacs Lisp": 3444,
            "Vim Snippet": 3147,
            "Objective-C": 1654,
            "Perl": 927,
            "GDB": 417,
            "Makefile": 356,
            "Python": 273
        }
    },
    {
        "name": "phgs",
        "description": "Personal Hidden Git Server",
        "languages": {
            "Nix": 2625
        }
    },
    {
        "name": "pytorch-world",
        "description": "nix scripts for pytorch-related libraries",
        "languages": {
            "Nix": 22972,
            "C++": 248
        }
    },
    {
        "name": "asrock-x300-s3-fix",
        "description": "Enabling S3 sleep on a DeskMini X300",
        "languages": {
            "Nix": 922,
            "Shell": 390
        }
    },
    {
        "name": "cachix-deploy-hetzner-dedicated",
        "description": "Bootstrap Hetzner Dedicated machines with a single command and deploy using GitHub Actions",
        "languages": {
            "Nix": 1594
        }
    },
    {
        "name": "dotfiles",
        "description": null,
        "languages": {
            "Nix": 125133,
            "Shell": 21409,
            "Lua": 14301,
            "Dockerfile": 248,
            "Makefile": 94
        }
    },
    {
        "name": "nixos-anywhere-examples",
        "description": "Example flake for nixos-anywhere",
        "languages": {
            "Nix": 2835
        }
    },
    {
        "name": "nixos-config",
        "description": "Having a good time with my friend Nix",
        "languages": {
            "Nix": 84844,
            "Lua": 35177,
            "Shell": 293
        }
    },
    {
        "name": "nixdots",
        "description": "\u2744\ufe0f my system configuration ",
        "languages": {
            "Nix": 217565,
            "CSS": 7450,
            "Just": 31
        }
    },
    {
        "name": "nixconfigs",
        "description": "Nix Configs from the Jupiter Broadcasting Crew and Community",
        "languages": {
            "Nix": 2369
        }
    },
    {
        "name": "nix-home-manager",
        "description": "nix files for home-manager",
        "languages": {
            "Nix": 15312,
            "Shell": 159
        }
    },
    {
        "name": "dotfiles",
        "description": "Dotfiles for my mac.",
        "languages": {
            "Nix": 784918,
            "Lua": 39721,
            "Shell": 25365,
            "Perl": 5022,
            "Python": 2927
        }
    },
    {
        "name": "antimber",
        "description": "NixOS & Home Manager Configuration",
        "languages": {
            "Nix": 62642,
            "Lua": 4497,
            "Just": 468
        }
    },
    {
        "name": "lint.nix",
        "description": "simple linting/formatting framework using Nix",
        "languages": {
            "Nix": 4748
        }
    },
    {
        "name": "nix.ug",
        "description": "A directory of Nix User Groups",
        "languages": {
            "Nix": 12887
        }
    },
    {
        "name": "templates",
        "description": "Templates for use with @snowfallorg/lib",
        "languages": {
            "Nix": 6027
        }
    },
    {
        "name": "nixos",
        "description": "My NixOS configuration",
        "languages": {
            "Nix": 180228
        }
    },
    {
        "name": "mew",
        "description": "a next\u2010generation free software build system",
        "languages": {
            "Nix": 7067,
            "Shell": 862,
            "Rust": 35
        }
    },
    {
        "name": "activation-manager",
        "description": null,
        "languages": {
            "Nix": 14259,
            "Rust": 2861
        }
    },
    {
        "name": "nix-sudoku",
        "description": "Sudoku solver in Nix",
        "languages": {
            "Nix": 2105
        }
    },
    {
        "name": "snowfall-starter",
        "description": "A simple template for a NixOS configuration with snowfall, has some basic modules like bios and efi",
        "languages": {
            "Nix": 22178
        }
    },
    {
        "name": "lifx-client",
        "description": "Node executable for interfacing with the Official LIFX API",
        "languages": {
            "Nix": 30092,
            "JavaScript": 11233
        }
    },
    {
        "name": "ghaf",
        "description": "TII SSRC Secure Technologies: Ghaf Framework",
        "languages": {
            "Nix": 264129,
            "Python": 9540,
            "Shell": 1122
        }
    },
    {
        "name": "nix-minecraft",
        "description": "A Minecraft launcher in nix.",
        "languages": {
            "Nix": 48814,
            "Jsonnet": 6671,
            "Kotlin": 628,
            "Java": 601,
            "Shell": 541
        }
    },
    {
        "name": "bottom-nix",
        "description": "An implementation of the Bottom encoding format in Nix",
        "languages": {
            "Nix": 3411
        }
    },
    {
        "name": "ngipkgs",
        "description": "Nix packages and services for projects supported through the NGI program",
        "languages": {
            "Nix": 152249,
            "Shell": 1973,
            "sed": 220,
            "CSS": 150
        }
    },
    {
        "name": "nixos-config",
        "description": "/etc/nixos",
        "languages": {
            "Nix": 34775
        }
    },
    {
        "name": "nix-config",
        "description": null,
        "languages": {
            "Nix": 176881,
            "Shell": 118207,
            "Python": 9848
        }
    },
    {
        "name": "flake-example",
        "description": null,
        "languages": {
            "Nix": 13249,
            "Shell": 2895
        }
    },
    {
        "name": "typst-invoice",
        "description": "A Typst template for generating invoices",
        "languages": {
            "Nix": 1037
        }
    },
    {
        "name": "lite-config",
        "description": "A flake module to build NixOS, nix-darwin and Home Manager configurations, creating a consistent environment across different devices.",
        "languages": {
            "Nix": 11773
        }
    },
    {
        "name": "dotfiles",
        "description": "My NixOS config",
        "languages": {
            "Nix": 156324,
            "Lua": 46676,
            "Vim Snippet": 5223
        }
    },
    {
        "name": "bbb4nix",
        "description": "BigBlueButton packaging for Nix and NixOS",
        "languages": {
            "Nix": 1950001,
            "Shell": 16288,
            "Ruby": 2358,
            "Awk": 716
        }
    },
    {
        "name": "server-configuration",
        "description": "Build server nixos configuration",
        "languages": {
            "Nix": 17546
        }
    },
    {
        "name": "easy-markdown-beamer-pandoc",
        "description": "Simple things nobody tells you how to do",
        "languages": {
            "Nix": 1596,
            "Makefile": 492
        }
    },
    {
        "name": "rock5b-nixos",
        "description": "Opinionated NixOS modules and building infrastructure for Radxa Rock5B",
        "languages": {
            "Nix": 25013,
            "Shell": 645
        }
    },
    {
        "name": "nixos-musings",
        "description": null,
        "languages": {
            "Nix": 24864,
            "Shell": 5256
        }
    },
    {
        "name": "config",
        "description": "Random config (v2, clean history)",
        "languages": {
            "Nix": 47935,
            "Shell": 10124
        }
    },
    {
        "name": "purescript-nix-example",
        "description": "Build a simple Halogen app using Nix",
        "languages": {
            "Nix": 269112,
            "Dhall": 3764,
            "PureScript": 1462,
            "HTML": 325
        }
    },
    {
        "name": "hamnix",
        "description": "A collection of Amateur Radio software packaged for Nix",
        "languages": {
            "Nix": 3172
        }
    },
    {
        "name": "DevSetup",
        "description": "dotfiles and NixOS setups",
        "languages": {
            "Nix": 89262,
            "Shell": 6947,
            "Emacs Lisp": 94
        }
    },
    {
        "name": "codex",
        "description": "Code examples that can be compiled to WebAssembly for use with Enarx",
        "languages": {
            "Nix": 11893,
            "Python": 630,
            "Shell": 224
        }
    },
    {
        "name": "nixos-gpd-pocket",
        "description": null,
        "languages": {
            "Nix": 9912
        }
    },
    {
        "name": "maple",
        "description": "A scavenger hunt for collectible items across the xkcd archives",
        "languages": {
            "Nix": 291039,
            "Haskell": 130266,
            "TypeScript": 68911,
            "JavaScript": 5690,
            "HTML": 1060
        }
    },
    {
        "name": "dyalog-nixos",
        "description": "Run dyalog APL and RIDE on nixos",
        "languages": {
            "Nix": 6643
        }
    },
    {
        "name": "nix-stack-ghcjs-demo",
        "description": "skeleton ghc/ghcjs project using nix, stack, cabal, reflex-platform, intero",
        "languages": {
            "Nix": 733,
            "Haskell": 226
        }
    },
    {
        "name": "Smart-Contract-Revenue-Sharing",
        "description": "Smart contract for revenue sharing developed by Canonical LLC for NFT-MAKER",
        "languages": {
            "Nix": 13804,
            "Shell": 7541,
            "Haskell": 6369
        }
    },
    {
        "name": "nixos-networkmanager-profiles",
        "description": "\ud83c\udf10 Declarative NetworkManager profiles in NixOS",
        "languages": {
            "Nix": 1251
        }
    },
    {
        "name": "shell.nixes",
        "description": "`shell.nix` files for projects of different scopes",
        "languages": {
            "Nix": 62989,
            "Shell": 26525,
            "Vim Script": 6619,
            "Erlang": 3950
        }
    },
    {
        "name": "funkwhale-flake",
        "description": "A nix flake for the funkwhale music service",
        "languages": {
            "Nix": 32371,
            "Shell": 1531,
            "Makefile": 453
        }
    },
    {
        "name": "nix-latex-template",
        "description": "Nix configuration for reproducible builds of LaTeX documents",
        "languages": {
            "Nix": 7360,
            "Makefile": 1584,
            "TeX": 68
        }
    },
    {
        "name": "canonix",
        "description": "Experiment in Nix formatting",
        "languages": {
            "Nix": 98720,
            "Haskell": 28757
        }
    },
    {
        "name": "cq-flake",
        "description": "CadQuery and CQ-editor flake, closely follows master",
        "languages": {
            "Nix": 26993,
            "Python": 383
        }
    },
    {
        "name": "tf-nix",
        "description": "terraform meets nix",
        "languages": {
            "Nix": 129187,
            "Shell": 170
        }
    },
    {
        "name": "nixos-lenovo-config",
        "description": "NixOS (23.05) Lenovo ThinkPad T14 configuration with i3, flake, home-manager, and more...",
        "languages": {
            "Nix": 73027,
            "Makefile": 3775
        }
    },
    {
        "name": "nixos-rpi-sd-image",
        "description": "A convenient way to create custom Raspberry Pi NixOS SD images.",
        "languages": {
            "Nix": 6504,
            "Shell": 545,
            "Dockerfile": 375
        }
    },
    {
        "name": "blahaj",
        "description": "Display cute sharks in your terminal :3",
        "languages": {
            "Nix": 1334
        }
    },
    {
        "name": "mc-modpack-kit",
        "description": "A template designed to streamline the release process of Minecraft modpacks.",
        "languages": {
            "Nix": 1256
        }
    },
    {
        "name": "ic-certification",
        "description": "Motoko library for all things related to certification",
        "languages": {
            "Nix": 148808,
            "Motoko": 44817,
            "Haskell": 9758,
            "Dhall": 782,
            "Makefile": 479
        }
    },
    {
        "name": "nixfiles",
        "description": "Nix configs",
        "languages": {
            "Nix": 187992,
            "Emacs Lisp": 71445,
            "Shell": 4289,
            "C": 805,
            "Rust": 660,
            "HTML": 654,
            "CSS": 145
        }
    },
    {
        "name": "coding-style-checker",
        "description": null,
        "languages": {
            "Nix": 2767,
            "Shell": 2709,
            "PowerShell": 2495
        }
    },
    {
        "name": "continix",
        "description": "Simple NixOS-like Docker containers with declarative config",
        "languages": {
            "Nix": 78720,
            "Shell": 731,
            "Go": 344
        }
    },
    {
        "name": "config",
        "description": "My NixOS configurations",
        "languages": {
            "Nix": 191646,
            "Shell": 49498,
            "Scheme": 8527,
            "Vim Script": 6703,
            "Python": 2349
        }
    },
    {
        "name": "soxincfg",
        "description": "Soxin configuration",
        "languages": {
            "Nix": 318634,
            "Python": 272183,
            "Shell": 89611,
            "Perl": 39398,
            "HCL": 30610,
            "JavaScript": 14656,
            "C": 10468,
            "Lua": 2781,
            "Makefile": 75
        }
    },
    {
        "name": "dhall-text",
        "description": "This repository has moved to https://github.com/dhall-lang/dhall-haskell/tree/master/dhall-text",
        "languages": {
            "Nix": 5924,
            "Haskell": 1952
        }
    },
    {
        "name": "impurity.nix",
        "description": "Impure symlinking in your nixos configuration",
        "languages": {
            "Nix": 1717
        }
    },
    {
        "name": "dotfiles",
        "description": "Leveraging nix, nix-os, nix-darwin, and home-manager to apply machine and home configurations",
        "languages": {
            "Nix": 93620
        }
    },
    {
        "name": "rock64-nix",
        "description": "NixOS install image for rock64",
        "languages": {
            "Nix": 16336,
            "Shell": 503
        }
    },
    {
        "name": "old-ghc-nix",
        "description": "Old and New GHC",
        "languages": {
            "Nix": 9107
        }
    },
    {
        "name": "nix-workspaces",
        "description": "Reproducible workspaces using Nix modules.",
        "languages": {
            "Nix": 16400,
            "Shell": 2369
        }
    },
    {
        "name": "dotfiles",
        "description": "Configuration files (.emacs)",
        "languages": {
            "Nix": 105892,
            "C++": 14285,
            "Haskell": 4854,
            "C": 4431,
            "Shell": 2294,
            "YASnippet": 1528,
            "Emacs Lisp": 1285,
            "CMake": 1102
        }
    },
    {
        "name": "snowflake",
        "description": "NixOS configuration",
        "languages": {
            "Nix": 78376,
            "Shell": 15625,
            "Vim Script": 9169,
            "CSS": 3105,
            "Lua": 2774
        }
    },
    {
        "name": "infrastructure-nix",
        "description": "Our new NixOS infrastructure flake \ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbb (pull/push mirror with GitLab)",
        "languages": {
            "Nix": 148269,
            "XSLT": 16626,
            "Shell": 10988,
            "PHP": 3388,
            "Lua": 351
        }
    },
    {
        "name": "nixos-config",
        "description": "Mirror of https://code.ataraxiadev.com/AtaraxiaDev/nixos-config",
        "languages": {
            "Nix": 367590,
            "Shell": 88224,
            "Python": 6783,
            "CSS": 4072
        }
    },
    {
        "name": "omnibus",
        "description": "A unified Nix configuration loading interface and framework that emulates the modularity, configurability, reusability, and overrideability of Doom Emacs.(based on Pure Object Prototypes)",
        "languages": {
            "Nix": 217842,
            "Just": 2692,
            "Emacs Lisp": 1578,
            "Shell": 1439,
            "Nu": 192,
            "Lua": 22
        }
    },
    {
        "name": "auron",
        "description": "Theoretical Next Gen\u2122 automation for Haskell.org (DO NOT USE)",
        "languages": {
            "Nix": 61683,
            "Shell": 1661,
            "Python": 74
        }
    },
    {
        "name": "dotfiles",
        "description": "my NixOS/home-manager config",
        "languages": {
            "Nix": 365528,
            "Python": 31258,
            "Rust": 17814,
            "Shell": 3391,
            "CSS": 1939
        }
    },
    {
        "name": "rust-shell",
        "description": "Nix shells for Rust development",
        "languages": {
            "Nix": 2938
        }
    },
    {
        "name": "configuration.nix",
        "description": "My dotfiles, but on NixOS!",
        "languages": {
            "Nix": 98522,
            "Haskell": 14110,
            "TeX": 13469,
            "Nushell": 9826,
            "Emacs Lisp": 8754,
            "Shell": 1629,
            "YASnippet": 1188
        }
    }
]