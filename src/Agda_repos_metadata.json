[
    {
        "name": "plfa.github.io",
        "description": "An introduction to programming language theory in Agda",
        "languages": {
            "Agda": 1121289,
            "TeX": 379465,
            "Haskell": 52889,
            "SCSS": 35712,
            "HTML": 12897,
            "Makefile": 10292,
            "Shell": 5374,
            "JavaScript": 2022,
            "Coq": 1373,
            "Emacs Lisp": 391,
            "Ruby": 116
        }
    },
    {
        "name": "agda-stdlib",
        "description": "The Agda standard library",
        "languages": {
            "Agda": 4694560,
            "Haskell": 15097,
            "Shell": 1447,
            "Makefile": 1221
        }
    },
    {
        "name": "cubical",
        "description": "An experimental library for Cubical Agda",
        "languages": {
            "Agda": 6526687,
            "Haskell": 5360,
            "Nix": 2042,
            "Makefile": 1667
        }
    },
    {
        "name": "HoTT-Agda",
        "description": "Development of homotopy type theory in Agda",
        "languages": {
            "Agda": 2904402,
            "Shell": 2806,
            "Makefile": 154
        }
    },
    {
        "name": "cedille",
        "description": "Cedille, a dependently typed programming languages based on the Calculus of Dependent Lambda Eliminations",
        "languages": {
            "Agda": 768558,
            "Emacs Lisp": 233843,
            "Haskell": 194047,
            "Yacc": 20280,
            "Makefile": 13699,
            "Logos": 4192,
            "Shell": 3779,
            "TeX": 3081,
            "JavaScript": 2806,
            "HTML": 1891,
            "Batchfile": 993
        }
    },
    {
        "name": "HoTT-Intro",
        "description": "An introductory course to Homotopy Type Theory",
        "languages": {
            "Agda": 1062455,
            "TeX": 875048,
            "Coq": 99041
        }
    },
    {
        "name": "agda-categories",
        "description": "A new Categories library for Agda",
        "languages": {
            "Agda": 1982789,
            "Makefile": 609,
            "Shell": 505
        }
    },
    {
        "name": "learn-you-an-agda",
        "description": "Learn you an Agda (and achieve enlightenment)",
        "languages": {
            "Agda": 12181,
            "CSS": 5186,
            "HTML": 2479,
            "Haskell": 2239
        }
    },
    {
        "name": "1lab",
        "description": "A formalised, cross-linked reference resource for mathematics done in Homotopy Type Theory",
        "languages": {
            "Agda": 4168111,
            "Haskell": 113390,
            "Nix": 69258,
            "TypeScript": 54187,
            "SCSS": 34176,
            "TeX": 13118,
            "HTML": 5571,
            "Shell": 1788
        }
    },
    {
        "name": "CS410-17",
        "description": "being the lecture materials and exercises for the 2017/18 session of CS410 Advanced Functional Programming at the University of Strathclyde",
        "languages": {
            "Agda": 171265,
            "Haskell": 8116,
            "Emacs Lisp": 958
        }
    },
    {
        "name": "HoTT-UF-Agda-Lecture-Notes",
        "description": "Lecture notes on univalent foundations of mathematics with Agda",
        "languages": {
            "Agda": 1322581,
            "Shell": 2700,
            "CSS": 2064,
            "Makefile": 1944,
            "Haskell": 1873,
            "HTML": 509,
            "TeX": 349,
            "Ruby": 110
        }
    },
    {
        "name": "TypeTopology",
        "description": "Logical manifestations of topological concepts, and other things, via the univalent point of view.",
        "languages": {
            "Agda": 7583397,
            "TeX": 559184,
            "Makefile": 132870,
            "Shell": 5062,
            "Haskell": 1361
        }
    },
    {
        "name": "agda-unimath",
        "description": "The agda-unimath library",
        "languages": {
            "Agda": 12943185,
            "Python": 96614,
            "CSS": 53483,
            "TeX": 46060,
            "Handlebars": 15184,
            "HTML": 8672,
            "Makefile": 6832,
            "Nix": 3140,
            "JavaScript": 2801
        }
    },
    {
        "name": "agda2hs",
        "description": "Compiling Agda code to readable Haskell",
        "languages": {
            "Agda": 214175,
            "Haskell": 180515,
            "Nix": 3956,
            "Makefile": 2365,
            "CSS": 2104,
            "Shell": 1427
        }
    },
    {
        "name": "categories",
        "description": "Categories parametrized by morphism equality, in Agda",
        "languages": {
            "Agda": 615731
        }
    },
    {
        "name": "Books",
        "description": "My slides and notes",
        "languages": {
            "Agda": 4752
        }
    },
    {
        "name": "TheHoTTGame",
        "description": "Attracting mathematicians (others welcome too) with no experience in proof verification interested in HoTT and able to use Agda for HoTT",
        "languages": {
            "Agda": 37174,
            "Nix": 6969
        }
    },
    {
        "name": "agdarsec",
        "description": "Total Parser Combinators in Agda",
        "languages": {
            "Agda": 72203,
            "Makefile": 539
        }
    },
    {
        "name": "Agda",
        "description": "Agda formalisation of the Introduction to Homotopy Type Theory",
        "languages": {
            "Agda": 2697902
        }
    },
    {
        "name": "agda-prelude",
        "description": "Programming library for Agda",
        "languages": {
            "Agda": 486322,
            "Makefile": 1155
        }
    },
    {
        "name": "agda-frp-js",
        "description": "ECMAScript back end for Functional Reactive Programming in Agda",
        "languages": {
            "Agda": 136068,
            "JavaScript": 80698,
            "CSS": 4510,
            "Makefile": 1824,
            "HTML": 494
        }
    },
    {
        "name": "denotational-hardware",
        "description": "Denotational hardware design in Agda",
        "languages": {
            "Agda": 204426,
            "Makefile": 1097,
            "Nix": 990
        }
    },
    {
        "name": "schmitty",
        "description": "Agda bindings to SMT-LIB2 compatible solvers.",
        "languages": {
            "Agda": 309956,
            "Shell": 1451
        }
    },
    {
        "name": "gentle-intro-to-reflection",
        "description": "A slow-paced introduction to reflection in Agda. ---Tactics!",
        "languages": {
            "Agda": 36806
        }
    },
    {
        "name": "agda",
        "description": "The theory of algebraic graphs formalised in Agda",
        "languages": {
            "Agda": 38472,
            "Shell": 287
        }
    },
    {
        "name": "agda-from-nothing",
        "description": "A workshop on learning Agda with minimal prerequisites.",
        "languages": {
            "Agda": 35900,
            "Makefile": 344
        }
    },
    {
        "name": "hott-agda",
        "description": null,
        "languages": {
            "Agda": 3498508,
            "TeX": 1542210,
            "HTML": 32719,
            "PostScript": 3089,
            "Shell": 541,
            "Makefile": 388
        }
    },
    {
        "name": "aopa",
        "description": "Algebra of Programming in Agda: Dependent Types for Relational Program Derivation",
        "languages": {
            "Agda": 251676,
            "Makefile": 243
        }
    },
    {
        "name": "Club",
        "description": "Organization and planning for the Initial Types Club",
        "languages": {
            "Agda": 290254,
            "TeX": 120445,
            "Shell": 5083,
            "Haskell": 3411,
            "Makefile": 1142
        }
    },
    {
        "name": "cart-cube",
        "description": "Cartesian Cubical Type Theory",
        "languages": {
            "Agda": 519690
        }
    },
    {
        "name": "abstract-binding-trees",
        "description": "Abstract binding trees (abstract syntax trees plus binders), as a library in Agda",
        "languages": {
            "Agda": 1133978,
            "Isabelle": 82035,
            "Makefile": 693
        }
    },
    {
        "name": "generic-syntax",
        "description": "A Scope-and-Type Safe Universe of Syntaxes with Binding, Their Semantics and Proofs",
        "languages": {
            "Agda": 339525,
            "Haskell": 854,
            "Shell": 779,
            "Makefile": 519,
            "Dockerfile": 455
        }
    },
    {
        "name": "CS410-14",
        "description": "being the materials for CS410 Advanced Functional Programming in the 2014-15 session",
        "languages": {
            "Agda": 341496,
            "Haskell": 11825,
            "Makefile": 1702
        }
    },
    {
        "name": "agda-summer-school",
        "description": "Summer school on programming in Agda",
        "languages": {
            "Agda": 48801
        }
    },
    {
        "name": "system-f-agda",
        "description": "A formalization of the polymorphic lambda calculus extended with iso-recursive types",
        "languages": {
            "Agda": 105885
        }
    },
    {
        "name": "x86-agda",
        "description": "Inline, type safe X86-64 assembly programming in Agda",
        "languages": {
            "Agda": 38289,
            "Haskell": 325,
            "Assembly": 69
        }
    },
    {
        "name": "miller",
        "description": "Miller/pattern unification in Agda",
        "languages": {
            "Agda": 245809
        }
    },
    {
        "name": "why-dependent-types-matter",
        "description": "Companion code for \"Why Dependent Types Matter\" paper.",
        "languages": {
            "Agda": 16126,
            "Haskell": 15321,
            "Idris": 15084
        }
    },
    {
        "name": "spire",
        "description": "The Spire Programming Language",
        "languages": {
            "Agda": 133989,
            "Haskell": 96783,
            "Emacs Lisp": 2387,
            "Shell": 551
        }
    },
    {
        "name": "stlc",
        "description": "This aims to be the most pretentious implementation of stlc in existence",
        "languages": {
            "Agda": 151277
        }
    },
    {
        "name": "refinedt",
        "description": "Refinement types + dependent types = \u2764\ufe0f",
        "languages": {
            "Agda": 565721,
            "TeX": 116836,
            "Haskell": 76166,
            "Idris": 1728,
            "Makefile": 570
        }
    },
    {
        "name": "CS410-18",
        "description": "being the teaching materials and exercises for CS410 in the 2018/19 session",
        "languages": {
            "Agda": 198637,
            "Haskell": 7285
        }
    },
    {
        "name": "meta-cedille",
        "description": "Minimalistic dependent type theory with syntactic metaprogramming",
        "languages": {
            "Agda": 181160,
            "Nix": 3958,
            "Emacs Lisp": 3415,
            "Makefile": 530,
            "Scheme": 485,
            "Shell": 40
        }
    },
    {
        "name": "system-f-omega",
        "description": "System F-omega normalization by hereditary substitution in Agda",
        "languages": {
            "Agda": 44524
        }
    },
    {
        "name": "foundations-harper",
        "description": "Agda proofs for some of the theorems in Robert Harper's Practical Foundations of Programming Languages.",
        "languages": {
            "Agda": 142816
        }
    },
    {
        "name": "gradual-typing-in-agda",
        "description": "Formalizations of Gradually Typed Languages in Agda",
        "languages": {
            "Agda": 1891381,
            "Makefile": 1042
        }
    },
    {
        "name": "cat",
        "description": "A formalization of category theory in cubical Agda",
        "languages": {
            "Agda": 157081,
            "Makefile": 217
        }
    },
    {
        "name": "potpourri",
        "description": "Where my everyday research happens",
        "languages": {
            "Agda": 1550698,
            "TeX": 934503,
            "Idris": 335818,
            "Haskell": 188280,
            "Makefile": 14842,
            "OCaml": 8224,
            "Coq": 4516,
            "Shell": 2326,
            "sed": 2278,
            "Rust": 2010,
            "JavaScript": 1464,
            "C": 1054,
            "Standard ML": 250
        }
    },
    {
        "name": "agda-sessions",
        "description": "Learn the Agda basics in three 2-hour sessions.",
        "languages": {
            "Agda": 87160,
            "Emacs Lisp": 360
        }
    },
    {
        "name": "B522-PL-Foundations",
        "description": "Course Webpage for B522 Programming Language Foundations, Spring 2020, Indiana University",
        "languages": {
            "Agda": 80323
        }
    },
    {
        "name": "agda-calf",
        "description": "A cost-aware logical framework, embedded in Agda.",
        "languages": {
            "Agda": 300264,
            "CSS": 1943
        }
    },
    {
        "name": "typechecker-evolution",
        "description": "The Evolution of a Typechecker",
        "languages": {
            "Agda": 21963
        }
    },
    {
        "name": "write-yourself-a-scheme-in-agda",
        "description": "Like \"Write Yourself a Scheme in 48 Hours\", but in Agda",
        "languages": {
            "Agda": 35254,
            "Nix": 1876
        }
    },
    {
        "name": "OTT",
        "description": "Observational Type Theory as an Agda library",
        "languages": {
            "Agda": 57232
        }
    },
    {
        "name": "DCHoTT-Agda",
        "description": "Differential cohesion in Homotopy Type Theory by an axiomatized infinitesimal shape modality",
        "languages": {
            "Agda": 330700
        }
    },
    {
        "name": "greek-grammar",
        "description": "Modeling Ancient Greek Grammar",
        "languages": {
            "Agda": 8855140,
            "Haskell": 503090,
            "JavaScript": 44512,
            "CSS": 961,
            "HTML": 783
        }
    },
    {
        "name": "agda-soas",
        "description": "Agda formalisation of second-order abstract syntax",
        "languages": {
            "Agda": 520431,
            "Python": 55044
        }
    },
    {
        "name": "ataca",
        "description": "A TACtic library for Agda",
        "languages": {
            "Agda": 50387
        }
    },
    {
        "name": "FPClimate",
        "description": "PhD course on Functional Programming and Climate Impact Research",
        "languages": {
            "Agda": 17181,
            "Haskell": 1015
        }
    },
    {
        "name": "cubical-demo",
        "description": null,
        "languages": {
            "Agda": 89160,
            "Shell": 406,
            "Makefile": 151
        }
    },
    {
        "name": "Brainfuck",
        "description": "A Brainfuck interpreter written in Agda",
        "languages": {
            "Agda": 4281
        }
    },
    {
        "name": "felix",
        "description": "Agda category theory library for denotational design",
        "languages": {
            "Agda": 131501,
            "Nix": 1863
        }
    },
    {
        "name": "ial",
        "description": "The Iowa Agda Library",
        "languages": {
            "Agda": 225142,
            "Makefile": 1228,
            "Shell": 119
        }
    },
    {
        "name": "agda-frp-ltl",
        "description": "An implementation of Functional Reactive Programming",
        "languages": {
            "Agda": 54324
        }
    },
    {
        "name": "Samizdat",
        "description": "being bits and pieces I'm inclined to leave lying around",
        "languages": {
            "Agda": 307894,
            "Haskell": 121519,
            "Coq": 8270
        }
    },
    {
        "name": "logrel-mltt",
        "description": "A Logical Relation for Martin-L\u00f6f Type Theory in Agda",
        "languages": {
            "Agda": 758725,
            "Makefile": 1309
        }
    },
    {
        "name": "CS410-15",
        "description": "being the materials for CS410 Advanced Functional Programming in the 2015/16 session",
        "languages": {
            "Agda": 243161,
            "Haskell": 8084,
            "TeX": 4115,
            "Makefile": 769
        }
    },
    {
        "name": "MusicTools",
        "description": null,
        "languages": {
            "Agda": 196791,
            "TeX": 28414,
            "Haskell": 14451,
            "QML": 1420
        }
    },
    {
        "name": "initiality",
        "description": "A formalized proof of a version of the initiality conjecture",
        "languages": {
            "Agda": 834523
        }
    },
    {
        "name": "agda-ring-solver",
        "description": "A fast, easy-to-use ring solver for agda with step-by-step solutions",
        "languages": {
            "Agda": 128616,
            "Python": 6368,
            "CSS": 1291,
            "Shell": 291
        }
    },
    {
        "name": "AutoInAgda",
        "description": "Proof automation \u2013\u00a0for Agda, in Agda.",
        "languages": {
            "Agda": 43276,
            "Ruby": 1507
        }
    },
    {
        "name": "TheoriesAndDataStructures",
        "description": "Showing how some simple mathematical theories naturally give rise to some common data-structures",
        "languages": {
            "Agda": 831289,
            "TeX": 158177,
            "Emacs Lisp": 71751,
            "Makefile": 109
        }
    },
    {
        "name": "AgdaCheatSheet",
        "description": "Basics of the dependently-typed functional language Agda ^_^",
        "languages": {
            "Agda": 56690
        }
    },
    {
        "name": "agda-software-foundations",
        "description": "Porting of software foundations book to Agda",
        "languages": {
            "Agda": 133583,
            "TeX": 7379
        }
    },
    {
        "name": "ctlc",
        "description": "(\u03bb) Category theory and lambda calculus, Bachelor's thesis ",
        "languages": {
            "Agda": 205257,
            "TeX": 182935,
            "CSS": 10709,
            "Haskell": 671,
            "Makefile": 306,
            "Shell": 217
        }
    },
    {
        "name": "ohtt",
        "description": "H.O.T.T. using rewriting in Agda",
        "languages": {
            "Agda": 274623
        }
    },
    {
        "name": "typical-antiphrasis",
        "description": "Paradoxes of type theory, described didactically. With accompanying proofs in Agda.",
        "languages": {
            "Agda": 24585
        }
    },
    {
        "name": "TypesWhoSayNi",
        "description": "being the materials for a paper I have in mind to write about the bidirectional discipline",
        "languages": {
            "Agda": 579857,
            "TeX": 462400
        }
    },
    {
        "name": "agda-base",
        "description": "Base library for HoTT in Agda",
        "languages": {
            "Agda": 274759,
            "Shell": 1728
        }
    },
    {
        "name": "ProgrammerCommaCon",
        "description": "being a collection of Agda-facilitated ramblings",
        "languages": {
            "Agda": 43995,
            "Haskell": 6994
        }
    },
    {
        "name": "linear.agda",
        "description": "A library and case-study for linear, intrinsically-typed interpreters in Agda",
        "languages": {
            "Agda": 125613,
            "Makefile": 408
        }
    },
    {
        "name": "gen-cart",
        "description": " A Unifying Cartesian Cubical Set Model",
        "languages": {
            "Agda": 159385,
            "Makefile": 106
        }
    },
    {
        "name": "agda-sizedIO",
        "description": "IO using sized types and copatterns",
        "languages": {
            "Agda": 44819,
            "Shell": 323,
            "Haskell": 46
        }
    },
    {
        "name": "agda-fragment",
        "description": "Algebraic proof discovery in Agda",
        "languages": {
            "Agda": 171951,
            "Makefile": 586,
            "Nix": 200
        }
    },
    {
        "name": "agda-presburger",
        "description": "Deciding Presburger arithmetic in agda",
        "languages": {
            "Agda": 127748,
            "Shell": 385,
            "Roff": 50
        }
    },
    {
        "name": "aGdaREP",
        "description": "Implementing grep in Agda",
        "languages": {
            "Agda": 14978,
            "Makefile": 173
        }
    },
    {
        "name": "cgc",
        "description": "Constructive Galois connections",
        "languages": {
            "Agda": 432410,
            "Makefile": 356
        }
    },
    {
        "name": "hilbert-gentzen",
        "description": "Agda formalisation of IPC, IS4, ICML, and ILP",
        "languages": {
            "Agda": 928922,
            "CSS": 1489,
            "Makefile": 154
        }
    },
    {
        "name": "Pivotal",
        "description": null,
        "languages": {
            "Agda": 188219,
            "TeX": 86829,
            "Emacs Lisp": 958
        }
    },
    {
        "name": "formal-ledger-specifications",
        "description": "Formal specifications of the cardano ledger",
        "languages": {
            "Agda": 502119,
            "TeX": 58379,
            "Nix": 13622,
            "Haskell": 4784,
            "Makefile": 4683,
            "Shell": 1454
        }
    },
    {
        "name": "polynomial-model",
        "description": "A polynomial model of a Martin-L\u00f6f type theory + a bit of game semantics",
        "languages": {
            "Agda": 145391
        }
    },
    {
        "name": "agda-simple-scp",
        "description": "A simple supercompiler formally verified in Agda",
        "languages": {
            "Agda": 107613,
            "Coq": 73289
        }
    },
    {
        "name": "MtacAR",
        "description": "Mtac in Agda",
        "languages": {
            "Agda": 42823
        }
    },
    {
        "name": "cubical-classics",
        "description": "An attempt towards univalent classical mathematics in Cubical Agda.",
        "languages": {
            "Agda": 368290
        }
    },
    {
        "name": "typing-with-leftovers",
        "description": "Self-contained repository for the eponymous paper",
        "languages": {
            "Agda": 160424,
            "Haskell": 6437,
            "Shell": 341,
            "Roff": 55
        }
    },
    {
        "name": "agda-algebras",
        "description": "The Agda Universal Algebra Library (html docs available at the url below)",
        "languages": {
            "Agda": 817908,
            "Emacs Lisp": 130714,
            "TeX": 87927,
            "Shell": 3346,
            "Makefile": 2319
        }
    },
    {
        "name": "Generic",
        "description": "A library for doing generic programming in Agda",
        "languages": {
            "Agda": 90380
        }
    },
    {
        "name": "CS410-13",
        "description": "being the notes and materials for CS410 in the 2013/14 academic session",
        "languages": {
            "Agda": 142891,
            "Haskell": 5873,
            "TeX": 917
        }
    },
    {
        "name": "agda-categories",
        "description": "Category theory and algebra",
        "languages": {
            "Agda": 107067
        }
    },
    {
        "name": "effects-as-sessions",
        "description": "Formalised embedding of an imperative language with effect system into session-typed pi calculus. ",
        "languages": {
            "Agda": 83338
        }
    },
    {
        "name": "agda-bcam",
        "description": "Tutorial series introducing Agda to the people at BCAM",
        "languages": {
            "Agda": 69296,
            "HTML": 11926,
            "TeX": 5358,
            "CSS": 4651,
            "Haskell": 2157,
            "Shell": 337
        }
    },
    {
        "name": "agda-holes",
        "description": "Agda programming with holes",
        "languages": {
            "Agda": 47602,
            "Shell": 85
        }
    },
    {
        "name": "STLC",
        "description": "Dependently typed Algorithm M and friends",
        "languages": {
            "Agda": 51976
        }
    },
    {
        "name": "Bi71",
        "description": "being a bidirectional reformulation of Martin-L\u00f6f's 1971 type theory",
        "languages": {
            "Agda": 166058,
            "TeX": 103396,
            "Makefile": 249
        }
    },
    {
        "name": "agda-metric-reals",
        "description": null,
        "languages": {
            "Agda": 186727,
            "Nix": 143
        }
    },
    {
        "name": "agda-routing",
        "description": "An Agda library for reasoning about asynchronous iterative algorithms and network routing problems",
        "languages": {
            "Agda": 973997
        }
    },
    {
        "name": "functional-linear-algebra",
        "description": "Formalizing linear algebra in Agda by representing matrices as functions",
        "languages": {
            "Agda": 73689,
            "Nix": 1619,
            "Shell": 140
        }
    },
    {
        "name": "Totality",
        "description": "being the programs and code for a paper about general recursion",
        "languages": {
            "Agda": 90783,
            "TeX": 61859,
            "Makefile": 355
        }
    },
    {
        "name": "homotopy",
        "description": "My old Agda code for Homotopy Type Theory.  (Halted. See HoTT/HoTT-Agda for the new one.)",
        "languages": {
            "Agda": 166404
        }
    },
    {
        "name": "M-types",
        "description": "A formalization of M-types in Agda",
        "languages": {
            "Agda": 177101
        }
    },
    {
        "name": "Relative-Monads",
        "description": "Relative Monad Library for Agda",
        "languages": {
            "Agda": 175762
        }
    },
    {
        "name": "combinator-nbe",
        "description": "Normalization by evaluation of simply typed combinators.",
        "languages": {
            "Agda": 66453,
            "Python": 2996
        }
    },
    {
        "name": "msla2014",
        "description": "wherein I implement several substructural logics in Agda",
        "languages": {
            "Agda": 26677,
            "Ruby": 5175
        }
    },
    {
        "name": "agda-system-io",
        "description": "Bindings to Haskell's IO monad which respect Agda's semantics",
        "languages": {
            "Agda": 129860,
            "Haskell": 5552
        }
    },
    {
        "name": "conceptual-mathematics",
        "description": "Proofs for the exercises for Lawvere and Schanuel's Conceptual Mathematics",
        "languages": {
            "Agda": 42693,
            "Nix": 686,
            "Shell": 31
        }
    },
    {
        "name": "higher-alg",
        "description": "An approach to higher algebra in type theory",
        "languages": {
            "Agda": 309759
        }
    },
    {
        "name": "lr-agda",
        "description": "Logical relations proof in Agda",
        "languages": {
            "Agda": 67877
        }
    },
    {
        "name": "cats",
        "description": "Category Theory in Agda. Learning exercise, not for public consumption.",
        "languages": {
            "Agda": 183373,
            "Haskell": 2075,
            "Makefile": 564
        }
    },
    {
        "name": "EGTBS",
        "description": "being the introduction to co-de-Bruijn metasyntax",
        "languages": {
            "Agda": 297407,
            "TeX": 151906,
            "Makefile": 774,
            "Haskell": 566
        }
    },
    {
        "name": "formal-logic",
        "description": "TODO",
        "languages": {
            "Agda": 74776,
            "Idris": 31930,
            "Haskell": 25338,
            "Makefile": 713
        }
    },
    {
        "name": "SystemF",
        "description": "An Agda formalization of System F and the Brown-Palsberg self-interpreter",
        "languages": {
            "Agda": 43395
        }
    },
    {
        "name": "formaltt",
        "description": "Formalization of type theory",
        "languages": {
            "Agda": 238126
        }
    },
    {
        "name": "lob",
        "description": "Two attempts at formalizing L\u00f6b's Theorem, (one based on http://lesswrong.com/lw/t6/the_cartoon_guide_to_l%C3%B6bs_theorem/)",
        "languages": {
            "Agda": 580504,
            "Coq": 373106,
            "Makefile": 3918
        }
    },
    {
        "name": "pts-agda",
        "description": "A formalization of Pure Type Systems (PTS) in Agda",
        "languages": {
            "Agda": 111159
        }
    },
    {
        "name": "quotient",
        "description": "quotient types in cubical Agda",
        "languages": {
            "Agda": 12248
        }
    },
    {
        "name": "agda-tic-tac-toe",
        "description": "Tic Tac Toe, formalized in Agda",
        "languages": {
            "Agda": 8243
        }
    },
    {
        "name": "agda-web-semantic",
        "description": "Agda libraries for the semantic web",
        "languages": {
            "Agda": 243717
        }
    },
    {
        "name": "SSTs",
        "description": "Work in progress on semi-simplicial types",
        "languages": {
            "Agda": 38887
        }
    },
    {
        "name": "hott-exercises",
        "description": "Solutions of the exercises of the HoTT book",
        "languages": {
            "Agda": 50478
        }
    },
    {
        "name": "generics",
        "description": null,
        "languages": {
            "Agda": 83116,
            "Makefile": 206
        }
    },
    {
        "name": "stlc-nbe",
        "description": "Correctness of normalization-by-evaluation for STLC",
        "languages": {
            "Agda": 124163,
            "TeX": 52113
        }
    },
    {
        "name": "sikkel",
        "description": "Multimode simple type theory as an Agda library.",
        "languages": {
            "Agda": 962035
        }
    },
    {
        "name": "type-scope-semantics",
        "description": "A self-contained repository for the paper Type and Scope Preserving Semantics",
        "languages": {
            "Agda": 76289
        }
    },
    {
        "name": "Agda-Metaprogramming",
        "description": "Dependently Typed Metaprogramming Exercises",
        "languages": {
            "Agda": 186608
        }
    },
    {
        "name": "HaltingProblem",
        "description": "The proof of undecidability of halting problem, using the model -- WHILE language.",
        "languages": {
            "Agda": 524368,
            "TeX": 274595
        }
    },
    {
        "name": "ooAgda",
        "description": "Interactive and object-oriented programming in Agda using coinductive types",
        "languages": {
            "Agda": 106741
        }
    },
    {
        "name": "Cubes",
        "description": "A dependently typed type checker for a TT with intervals",
        "languages": {
            "Agda": 33972
        }
    },
    {
        "name": "palmgren-archive",
        "description": "Research material of Erik Palmgren (1963\u20132019)",
        "languages": {
            "Agda": 694352
        }
    },
    {
        "name": "cubical-categories",
        "description": "Category theory formalized in cubical agda",
        "languages": {
            "Agda": 22558
        }
    },
    {
        "name": "ModalTypeTheory",
        "description": null,
        "languages": {
            "Agda": 289787
        }
    },
    {
        "name": "hazelnut-dynamics-agda",
        "description": "mechanization paired with https://github.com/hazelgrove/hazelnut-dynamics",
        "languages": {
            "Agda": 181000,
            "Shell": 942,
            "Dockerfile": 161
        }
    },
    {
        "name": "SbE",
        "description": "An extension of the NbE algorithm to produce computational traces",
        "languages": {
            "Agda": 77594
        }
    },
    {
        "name": "tt-in-cagda",
        "description": "Simply typed lambda calculus in cubical agda",
        "languages": {
            "Agda": 64899
        }
    },
    {
        "name": "agda-hoas-demo",
        "description": "Experiments with higher-order abstract syntax in Agda",
        "languages": {
            "Agda": 28298
        }
    },
    {
        "name": "random-stuff",
        "description": null,
        "languages": {
            "Agda": 475828,
            "Coq": 98267,
            "Haskell": 34027
        }
    },
    {
        "name": "modal-logics",
        "description": "Agda formalisation of dual-context constructive modal logics.",
        "languages": {
            "Agda": 117188
        }
    },
    {
        "name": "generic-lr",
        "description": "AACMM's generic-syntax, but with QTT-style annotations",
        "languages": {
            "Agda": 378020,
            "TeX": 104586,
            "Nix": 3155,
            "Makefile": 335
        }
    },
    {
        "name": "misc-stuff",
        "description": "Code for tutorials, papers and experiments. Mostly Agda, Coq and Haskell.",
        "languages": {
            "Agda": 1180061,
            "TeX": 188844,
            "Haskell": 101045
        }
    },
    {
        "name": "SSGEP-DataData",
        "description": "being the materials for \"Datatypes of Datatypes\" at the Summer School on Generic and Effectful Programming, Oxford",
        "languages": {
            "Agda": 368800,
            "TeX": 8051,
            "Emacs Lisp": 958,
            "Makefile": 461
        }
    },
    {
        "name": "k",
        "description": "Meta-theory and normalization for Fitch-style modal lambda calculi",
        "languages": {
            "Agda": 380353,
            "Shell": 3320
        }
    },
    {
        "name": "sorting-types",
        "description": "Typed DSLs for sorting",
        "languages": {
            "Agda": 16023
        }
    },
    {
        "name": "linear-constructive",
        "description": "Linear Logic for Constructive Mathematics, in Agda",
        "languages": {
            "Agda": 6790
        }
    },
    {
        "name": "type-preserving-cps",
        "description": "Type-preserving CPS translation for simply- and dependently-typed lambda calculi",
        "languages": {
            "Agda": 19573
        }
    },
    {
        "name": "church-rosser",
        "description": "A complete proof in Agda of the Church-Rosser theorem for untyped \u03bb-calculus formalizing the methods by Komori-Matsuda-Yamakawa (2014) and the proof by Nagele-van Oostrom-Sternagel (2016); reuses the infrastructure for \u03bb-terms and substitutions provided by the PLFA book",
        "languages": {
            "Agda": 43181
        }
    },
    {
        "name": "imla2017",
        "description": "Agda formalisation of NbE for \u03bb\u25a1",
        "languages": {
            "Agda": 95109,
            "CSS": 1489,
            "Makefile": 162
        }
    },
    {
        "name": "cat",
        "description": "A categorical semantics library in Agda.",
        "languages": {
            "Agda": 25011,
            "Shell": 396
        }
    },
    {
        "name": "denotational_semantics",
        "description": "Denotational semantics based on graph and filter models",
        "languages": {
            "Agda": 5067598,
            "TeX": 3390614,
            "Isabelle": 462717,
            "Makefile": 1109
        }
    },
    {
        "name": "agda-synthetic-domain-theory",
        "description": null,
        "languages": {
            "Agda": 8231
        }
    },
    {
        "name": "reflection-tutorial",
        "description": null,
        "languages": {
            "Agda": 10232
        }
    },
    {
        "name": "wasm-agda",
        "description": "A typechecker for WebAssembly, written in Agda (WIP)",
        "languages": {
            "Agda": 38146
        }
    },
    {
        "name": "agda-core",
        "description": "A work-in-progress core language for Agda, in Agda",
        "languages": {
            "Agda": 107976,
            "Haskell": 10619,
            "Nix": 3172,
            "Makefile": 871
        }
    },
    {
        "name": "cubical-categorical-logic",
        "description": "Extensions to the cubical stdlib category theory for categorical logic/type theory",
        "languages": {
            "Agda": 467893,
            "TeX": 21494,
            "Makefile": 695
        }
    },
    {
        "name": "cubical-congruence",
        "description": "Congruence Closure Procedure in Cubical Agda",
        "languages": {
            "Agda": 42278
        }
    },
    {
        "name": "universe-of-syntax",
        "description": "A universe of scope- and type-safe syntaxes (syntices?). Includes generic implementation of type-preserving renaming/substitution with all the proofs you could possibly need.",
        "languages": {
            "Agda": 42145
        }
    },
    {
        "name": "agda-c",
        "description": "Verified C programming in Agda",
        "languages": {
            "Agda": 70071,
            "Makefile": 421
        }
    },
    {
        "name": "higher-rank-syntax",
        "description": null,
        "languages": {
            "Agda": 41539
        }
    },
    {
        "name": "ornaments-thesis",
        "description": "My master thesis about generic programming and ornaments",
        "languages": {
            "Agda": 597703,
            "TeX": 53732,
            "Makefile": 2283
        }
    },
    {
        "name": "quasi-quote",
        "description": "Quasi-quoting library for agda",
        "languages": {
            "Agda": 14903
        }
    },
    {
        "name": "denotational-arithmetic",
        "description": "Puzzle: arithmetic via denotational design",
        "languages": {
            "Agda": 53
        }
    },
    {
        "name": "agda-popl17",
        "description": "Mechanization of Hazelnut, as submitted to POPL 2017",
        "languages": {
            "Agda": 132935
        }
    },
    {
        "name": "tactics",
        "description": null,
        "languages": {
            "Agda": 16140
        }
    },
    {
        "name": "opetopes-in-agda",
        "description": "Formalization of Opetopes and Opetopic Sets in Agda",
        "languages": {
            "Agda": 68054
        }
    },
    {
        "name": "Ming",
        "description": "being the emperor of Mongo, but also a verb",
        "languages": {
            "Agda": 98257,
            "Haskell": 15716
        }
    },
    {
        "name": "ilc-agda",
        "description": "Machine-checked Agda formalization for the ILC project",
        "languages": {
            "Agda": 400505,
            "Haskell": 4747,
            "Shell": 1925,
            "Assembly": 310
        }
    },
    {
        "name": "preordertt",
        "description": "Experiments with preordered set models of (directed) type theories",
        "languages": {
            "Agda": 105942
        }
    },
    {
        "name": "agda-prop",
        "description": "A Library for Classical Propositional Logic in Agda",
        "languages": {
            "Agda": 96869,
            "Makefile": 548
        }
    },
    {
        "name": "agda-regexp-automata",
        "description": "Formalization of Regular Languages in Agda: regular expressions, finite-state automata, proof of equivalence, proof of the pumping lemma.",
        "languages": {
            "Agda": 184835,
            "TeX": 90059,
            "Python": 8567
        }
    },
    {
        "name": "agda-rw",
        "description": "This is the place where (more or less) stable releases of my RW library will be published.",
        "languages": {
            "Agda": 98355
        }
    },
    {
        "name": "composable-semantics",
        "description": "Composable intrincially-typed definitional interpreters",
        "languages": {
            "Agda": 136178,
            "Makefile": 437
        }
    },
    {
        "name": "categorical-automata",
        "description": "Bicategories of automata, completeness of F-automata in monoidal categories, adjoints between (semi)bicategories; https://arxiv.org/pdf/2303.03867, https://arxiv.org/pdf/2303.03865, https://arxiv.org/abs/2305.00272",
        "languages": {
            "Agda": 131185
        }
    },
    {
        "name": "formality-agda-lib-legacy",
        "description": "Agda libraries relevant to Moonad",
        "languages": {
            "Agda": 14301
        }
    },
    {
        "name": "agda-sgd",
        "description": "Experiments in Synthetic Differential Geometry",
        "languages": {
            "Agda": 9905
        }
    },
    {
        "name": "agda-mugen",
        "description": "A formalization of the theory behind the mugen library",
        "languages": {
            "Agda": 158329,
            "Dockerfile": 2030,
            "Makefile": 620
        }
    },
    {
        "name": "agdarky",
        "description": "Agda suffices: software written from A to Z in Agda",
        "languages": {
            "Agda": 51350,
            "TeX": 4151,
            "Shell": 650,
            "Makefile": 294,
            "Roff": 159
        }
    },
    {
        "name": "constructive-sheaf-semantics",
        "description": "I'm putting Palmgren's Constructive Sheaf Semantics into Agda. Defines sheaves via Grothendieck pretopologies.",
        "languages": {
            "Agda": 17280
        }
    },
    {
        "name": "Big-step-Normalisation",
        "description": "Agda formalisations of some big-step normalization proofs",
        "languages": {
            "Agda": 418276
        }
    },
    {
        "name": "serre-finiteness",
        "description": null,
        "languages": {
            "Agda": 220732
        }
    },
    {
        "name": "ternary.agda",
        "description": "An Agda library for programming with ternary relations",
        "languages": {
            "Agda": 287438
        }
    },
    {
        "name": "agda-zipper-machine",
        "description": "An abstract machine using indexed containers and their zippers",
        "languages": {
            "Agda": 5650
        }
    },
    {
        "name": "agda-stc",
        "description": "Hacking synthetic Tait computability into Agda. Example: canonicity for MLTT.",
        "languages": {
            "Agda": 10456
        }
    },
    {
        "name": "synthetic-domain-theory",
        "description": "Experiment with synthetic domain theory in cubical agda",
        "languages": {
            "Agda": 7944
        }
    },
    {
        "name": "cwfs",
        "description": "Formalization of Categories with Families",
        "languages": {
            "Agda": 316307
        }
    },
    {
        "name": "formal-utxo",
        "description": "Formalization of the UTxO abstract model for (bitcoin-style) blockchain transactions.",
        "languages": {
            "Agda": 197037
        }
    },
    {
        "name": "simplc",
        "description": "A tiny compiler for a security-typed imperative language with a formalised proof of noninterference-preservation.",
        "languages": {
            "Agda": 43189
        }
    },
    {
        "name": "SemanticsWithApplications",
        "description": "Formal semantics in Agda.",
        "languages": {
            "Agda": 119619
        }
    },
    {
        "name": "cis6700-23sp",
        "description": "CIS 6700, Spring 2023",
        "languages": {
            "Agda": 24819
        }
    },
    {
        "name": "syntactic-stlc",
        "description": "Syntactic evaluation of STLC (incl. proof of normalization a la Software Foundations)",
        "languages": {
            "Agda": 26322
        }
    },
    {
        "name": "opetopic-types",
        "description": "Higher Algebra with Opetopic Types",
        "languages": {
            "Agda": 454420
        }
    },
    {
        "name": "fyp",
        "description": "My final year project at the University of Strathclyde",
        "languages": {
            "Agda": 177298,
            "TeX": 32331,
            "Makefile": 877,
            "Perl": 464,
            "Nix": 326,
            "Shell": 43
        }
    },
    {
        "name": "honours-project-constructive-analysis-in-agda",
        "description": "My honours project (with thesis), submitted in completion of the BSc Combined Honours in Mathematics & Computer Science at Dalhousie University in April 2022.",
        "languages": {
            "Agda": 474820
        }
    }
]